// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.5.0
// source: wa.protobuf

package protobuf

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type KeepInChatType int32

const (
	KeepInChatType_KeepInChatType_UNKNOWN KeepInChatType = 0
	KeepInChatType_KEEP_FOR_ALL           KeepInChatType = 1
	KeepInChatType_UNKEEP_FOR_ALL         KeepInChatType = 2
)

// Enum value maps for KeepInChatType.
var (
	KeepInChatType_name = map[int32]string{
		0: "KeepInChatType_UNKNOWN",
		1: "KEEP_FOR_ALL",
		2: "UNKEEP_FOR_ALL",
	}
	KeepInChatType_value = map[string]int32{
		"KeepInChatType_UNKNOWN": 0,
		"KEEP_FOR_ALL":           1,
		"UNKEEP_FOR_ALL":         2,
	}
)

func (x KeepInChatType) Enum() *KeepInChatType {
	p := new(KeepInChatType)
	*p = x
	return p
}

func (x KeepInChatType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (KeepInChatType) Descriptor() protoreflect.EnumDescriptor {
	return file_wa_proto_enumTypes[0].Descriptor()
}

func (KeepInChatType) Type() protoreflect.EnumType {
	return &file_wa_proto_enumTypes[0]
}

func (x KeepInChatType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *KeepInChatType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = KeepInChatType(num)
	return nil
}

// Deprecated: Use KeepInChatType.Descriptor instead.
func (KeepInChatType) EnumDescriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{0}
}

type ClientPayload_ConnectReason int32

const (
	ClientPayload_PUSH            ClientPayload_ConnectReason = 0
	ClientPayload_USER_ACTIVATED  ClientPayload_ConnectReason = 1
	ClientPayload_SCHEDULED       ClientPayload_ConnectReason = 2
	ClientPayload_ERROR_RECONNECT ClientPayload_ConnectReason = 3
	ClientPayload_NETWORK_SWITCH  ClientPayload_ConnectReason = 4
	ClientPayload_PING_RECONNECT  ClientPayload_ConnectReason = 5
)

// Enum value maps for ClientPayload_ConnectReason.
var (
	ClientPayload_ConnectReason_name = map[int32]string{
		0: "PUSH",
		1: "USER_ACTIVATED",
		2: "SCHEDULED",
		3: "ERROR_RECONNECT",
		4: "NETWORK_SWITCH",
		5: "PING_RECONNECT",
	}
	ClientPayload_ConnectReason_value = map[string]int32{
		"PUSH":            0,
		"USER_ACTIVATED":  1,
		"SCHEDULED":       2,
		"ERROR_RECONNECT": 3,
		"NETWORK_SWITCH":  4,
		"PING_RECONNECT":  5,
	}
)

func (x ClientPayload_ConnectReason) Enum() *ClientPayload_ConnectReason {
	p := new(ClientPayload_ConnectReason)
	*p = x
	return p
}

func (x ClientPayload_ConnectReason) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ClientPayload_ConnectReason) Descriptor() protoreflect.EnumDescriptor {
	return file_wa_proto_enumTypes[1].Descriptor()
}

func (ClientPayload_ConnectReason) Type() protoreflect.EnumType {
	return &file_wa_proto_enumTypes[1]
}

func (x ClientPayload_ConnectReason) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *ClientPayload_ConnectReason) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = ClientPayload_ConnectReason(num)
	return nil
}

// Deprecated: Use ClientPayload_ConnectReason.Descriptor instead.
func (ClientPayload_ConnectReason) EnumDescriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{1, 0}
}

type ClientPayload_ConnectType int32

const (
	ClientPayload_CELLULAR_UNKNOWN ClientPayload_ConnectType = 0
	ClientPayload_WIFI_UNKNOWN     ClientPayload_ConnectType = 1
	ClientPayload_CELLULAR_EDGE    ClientPayload_ConnectType = 100
	ClientPayload_CELLULAR_IDEN    ClientPayload_ConnectType = 101
	ClientPayload_CELLULAR_UMTS    ClientPayload_ConnectType = 102
	ClientPayload_CELLULAR_EVDO    ClientPayload_ConnectType = 103
	ClientPayload_CELLULAR_GPRS    ClientPayload_ConnectType = 104
	ClientPayload_CELLULAR_HSDPA   ClientPayload_ConnectType = 105
	ClientPayload_CELLULAR_HSUPA   ClientPayload_ConnectType = 106
	ClientPayload_CELLULAR_HSPA    ClientPayload_ConnectType = 107
	ClientPayload_CELLULAR_CDMA    ClientPayload_ConnectType = 108
	ClientPayload_CELLULAR_1XRTT   ClientPayload_ConnectType = 109
	ClientPayload_CELLULAR_EHRPD   ClientPayload_ConnectType = 110
	ClientPayload_CELLULAR_LTE     ClientPayload_ConnectType = 111
	ClientPayload_CELLULAR_HSPAP   ClientPayload_ConnectType = 112
)

// Enum value maps for ClientPayload_ConnectType.
var (
	ClientPayload_ConnectType_name = map[int32]string{
		0:   "CELLULAR_UNKNOWN",
		1:   "WIFI_UNKNOWN",
		100: "CELLULAR_EDGE",
		101: "CELLULAR_IDEN",
		102: "CELLULAR_UMTS",
		103: "CELLULAR_EVDO",
		104: "CELLULAR_GPRS",
		105: "CELLULAR_HSDPA",
		106: "CELLULAR_HSUPA",
		107: "CELLULAR_HSPA",
		108: "CELLULAR_CDMA",
		109: "CELLULAR_1XRTT",
		110: "CELLULAR_EHRPD",
		111: "CELLULAR_LTE",
		112: "CELLULAR_HSPAP",
	}
	ClientPayload_ConnectType_value = map[string]int32{
		"CELLULAR_UNKNOWN": 0,
		"WIFI_UNKNOWN":     1,
		"CELLULAR_EDGE":    100,
		"CELLULAR_IDEN":    101,
		"CELLULAR_UMTS":    102,
		"CELLULAR_EVDO":    103,
		"CELLULAR_GPRS":    104,
		"CELLULAR_HSDPA":   105,
		"CELLULAR_HSUPA":   106,
		"CELLULAR_HSPA":    107,
		"CELLULAR_CDMA":    108,
		"CELLULAR_1XRTT":   109,
		"CELLULAR_EHRPD":   110,
		"CELLULAR_LTE":     111,
		"CELLULAR_HSPAP":   112,
	}
)

func (x ClientPayload_ConnectType) Enum() *ClientPayload_ConnectType {
	p := new(ClientPayload_ConnectType)
	*p = x
	return p
}

func (x ClientPayload_ConnectType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ClientPayload_ConnectType) Descriptor() protoreflect.EnumDescriptor {
	return file_wa_proto_enumTypes[2].Descriptor()
}

func (ClientPayload_ConnectType) Type() protoreflect.EnumType {
	return &file_wa_proto_enumTypes[2]
}

func (x ClientPayload_ConnectType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *ClientPayload_ConnectType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = ClientPayload_ConnectType(num)
	return nil
}

// Deprecated: Use ClientPayload_ConnectType.Descriptor instead.
func (ClientPayload_ConnectType) EnumDescriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{1, 1}
}

type ClientPayload_IOSAppExtension int32

const (
	ClientPayload_SHARE_EXTENSION   ClientPayload_IOSAppExtension = 0
	ClientPayload_SERVICE_EXTENSION ClientPayload_IOSAppExtension = 1
	ClientPayload_INTENTS_EXTENSION ClientPayload_IOSAppExtension = 2
)

// Enum value maps for ClientPayload_IOSAppExtension.
var (
	ClientPayload_IOSAppExtension_name = map[int32]string{
		0: "SHARE_EXTENSION",
		1: "SERVICE_EXTENSION",
		2: "INTENTS_EXTENSION",
	}
	ClientPayload_IOSAppExtension_value = map[string]int32{
		"SHARE_EXTENSION":   0,
		"SERVICE_EXTENSION": 1,
		"INTENTS_EXTENSION": 2,
	}
)

func (x ClientPayload_IOSAppExtension) Enum() *ClientPayload_IOSAppExtension {
	p := new(ClientPayload_IOSAppExtension)
	*p = x
	return p
}

func (x ClientPayload_IOSAppExtension) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ClientPayload_IOSAppExtension) Descriptor() protoreflect.EnumDescriptor {
	return file_wa_proto_enumTypes[3].Descriptor()
}

func (ClientPayload_IOSAppExtension) Type() protoreflect.EnumType {
	return &file_wa_proto_enumTypes[3]
}

func (x ClientPayload_IOSAppExtension) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *ClientPayload_IOSAppExtension) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = ClientPayload_IOSAppExtension(num)
	return nil
}

// Deprecated: Use ClientPayload_IOSAppExtension.Descriptor instead.
func (ClientPayload_IOSAppExtension) EnumDescriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{1, 2}
}

type ClientPayload_Product int32

const (
	ClientPayload_WHATSAPP  ClientPayload_Product = 0
	ClientPayload_MESSENGER ClientPayload_Product = 1
)

// Enum value maps for ClientPayload_Product.
var (
	ClientPayload_Product_name = map[int32]string{
		0: "WHATSAPP",
		1: "MESSENGER",
	}
	ClientPayload_Product_value = map[string]int32{
		"WHATSAPP":  0,
		"MESSENGER": 1,
	}
)

func (x ClientPayload_Product) Enum() *ClientPayload_Product {
	p := new(ClientPayload_Product)
	*p = x
	return p
}

func (x ClientPayload_Product) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ClientPayload_Product) Descriptor() protoreflect.EnumDescriptor {
	return file_wa_proto_enumTypes[4].Descriptor()
}

func (ClientPayload_Product) Type() protoreflect.EnumType {
	return &file_wa_proto_enumTypes[4]
}

func (x ClientPayload_Product) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *ClientPayload_Product) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = ClientPayload_Product(num)
	return nil
}

// Deprecated: Use ClientPayload_Product.Descriptor instead.
func (ClientPayload_Product) EnumDescriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{1, 3}
}

type ClientPayload_DNSSource_DNSResolutionMethod int32

const (
	ClientPayload_DNSSource_SYSTEM    ClientPayload_DNSSource_DNSResolutionMethod = 0
	ClientPayload_DNSSource_GOOGLE    ClientPayload_DNSSource_DNSResolutionMethod = 1
	ClientPayload_DNSSource_HARDCODED ClientPayload_DNSSource_DNSResolutionMethod = 2
	ClientPayload_DNSSource_OVERRIDE  ClientPayload_DNSSource_DNSResolutionMethod = 3
	ClientPayload_DNSSource_FALLBACK  ClientPayload_DNSSource_DNSResolutionMethod = 4
)

// Enum value maps for ClientPayload_DNSSource_DNSResolutionMethod.
var (
	ClientPayload_DNSSource_DNSResolutionMethod_name = map[int32]string{
		0: "SYSTEM",
		1: "GOOGLE",
		2: "HARDCODED",
		3: "OVERRIDE",
		4: "FALLBACK",
	}
	ClientPayload_DNSSource_DNSResolutionMethod_value = map[string]int32{
		"SYSTEM":    0,
		"GOOGLE":    1,
		"HARDCODED": 2,
		"OVERRIDE":  3,
		"FALLBACK":  4,
	}
)

func (x ClientPayload_DNSSource_DNSResolutionMethod) Enum() *ClientPayload_DNSSource_DNSResolutionMethod {
	p := new(ClientPayload_DNSSource_DNSResolutionMethod)
	*p = x
	return p
}

func (x ClientPayload_DNSSource_DNSResolutionMethod) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ClientPayload_DNSSource_DNSResolutionMethod) Descriptor() protoreflect.EnumDescriptor {
	return file_wa_proto_enumTypes[5].Descriptor()
}

func (ClientPayload_DNSSource_DNSResolutionMethod) Type() protoreflect.EnumType {
	return &file_wa_proto_enumTypes[5]
}

func (x ClientPayload_DNSSource_DNSResolutionMethod) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *ClientPayload_DNSSource_DNSResolutionMethod) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = ClientPayload_DNSSource_DNSResolutionMethod(num)
	return nil
}

// Deprecated: Use ClientPayload_DNSSource_DNSResolutionMethod.Descriptor instead.
func (ClientPayload_DNSSource_DNSResolutionMethod) EnumDescriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{1, 1, 0}
}

type ClientPayload_UserAgent_Platform int32

const (
	ClientPayload_UserAgent_ANDROID        ClientPayload_UserAgent_Platform = 0
	ClientPayload_UserAgent_IOS            ClientPayload_UserAgent_Platform = 1
	ClientPayload_UserAgent_WINDOWS_PHONE  ClientPayload_UserAgent_Platform = 2
	ClientPayload_UserAgent_BLACKBERRY     ClientPayload_UserAgent_Platform = 3
	ClientPayload_UserAgent_BLACKBERRYX    ClientPayload_UserAgent_Platform = 4
	ClientPayload_UserAgent_S40            ClientPayload_UserAgent_Platform = 5
	ClientPayload_UserAgent_S60            ClientPayload_UserAgent_Platform = 6
	ClientPayload_UserAgent_PYTHON_CLIENT  ClientPayload_UserAgent_Platform = 7
	ClientPayload_UserAgent_TIZEN          ClientPayload_UserAgent_Platform = 8
	ClientPayload_UserAgent_ENTERPRISE     ClientPayload_UserAgent_Platform = 9
	ClientPayload_UserAgent_SMB_ANDROID    ClientPayload_UserAgent_Platform = 10
	ClientPayload_UserAgent_KAIOS          ClientPayload_UserAgent_Platform = 11
	ClientPayload_UserAgent_SMB_IOS        ClientPayload_UserAgent_Platform = 12
	ClientPayload_UserAgent_WINDOWS        ClientPayload_UserAgent_Platform = 13
	ClientPayload_UserAgent_WEB            ClientPayload_UserAgent_Platform = 14
	ClientPayload_UserAgent_PORTAL         ClientPayload_UserAgent_Platform = 15
	ClientPayload_UserAgent_GREEN_ANDROID  ClientPayload_UserAgent_Platform = 16
	ClientPayload_UserAgent_GREEN_IPHONE   ClientPayload_UserAgent_Platform = 17
	ClientPayload_UserAgent_BLUE_ANDROID   ClientPayload_UserAgent_Platform = 18
	ClientPayload_UserAgent_BLUE_IPHONE    ClientPayload_UserAgent_Platform = 19
	ClientPayload_UserAgent_FBLITE_ANDROID ClientPayload_UserAgent_Platform = 20
	ClientPayload_UserAgent_MLITE_ANDROID  ClientPayload_UserAgent_Platform = 21
	ClientPayload_UserAgent_IGLITE_ANDROID ClientPayload_UserAgent_Platform = 22
	ClientPayload_UserAgent_PAGE           ClientPayload_UserAgent_Platform = 23
	ClientPayload_UserAgent_MACOS          ClientPayload_UserAgent_Platform = 24
	ClientPayload_UserAgent_OCULUS_MSG     ClientPayload_UserAgent_Platform = 25
	ClientPayload_UserAgent_OCULUS_CALL    ClientPayload_UserAgent_Platform = 26
	ClientPayload_UserAgent_MILAN          ClientPayload_UserAgent_Platform = 27
)

// Enum value maps for ClientPayload_UserAgent_Platform.
var (
	ClientPayload_UserAgent_Platform_name = map[int32]string{
		0:  "ANDROID",
		1:  "IOS",
		2:  "WINDOWS_PHONE",
		3:  "BLACKBERRY",
		4:  "BLACKBERRYX",
		5:  "S40",
		6:  "S60",
		7:  "PYTHON_CLIENT",
		8:  "TIZEN",
		9:  "ENTERPRISE",
		10: "SMB_ANDROID",
		11: "KAIOS",
		12: "SMB_IOS",
		13: "WINDOWS",
		14: "WEB",
		15: "PORTAL",
		16: "GREEN_ANDROID",
		17: "GREEN_IPHONE",
		18: "BLUE_ANDROID",
		19: "BLUE_IPHONE",
		20: "FBLITE_ANDROID",
		21: "MLITE_ANDROID",
		22: "IGLITE_ANDROID",
		23: "PAGE",
		24: "MACOS",
		25: "OCULUS_MSG",
		26: "OCULUS_CALL",
		27: "MILAN",
	}
	ClientPayload_UserAgent_Platform_value = map[string]int32{
		"ANDROID":        0,
		"IOS":            1,
		"WINDOWS_PHONE":  2,
		"BLACKBERRY":     3,
		"BLACKBERRYX":    4,
		"S40":            5,
		"S60":            6,
		"PYTHON_CLIENT":  7,
		"TIZEN":          8,
		"ENTERPRISE":     9,
		"SMB_ANDROID":    10,
		"KAIOS":          11,
		"SMB_IOS":        12,
		"WINDOWS":        13,
		"WEB":            14,
		"PORTAL":         15,
		"GREEN_ANDROID":  16,
		"GREEN_IPHONE":   17,
		"BLUE_ANDROID":   18,
		"BLUE_IPHONE":    19,
		"FBLITE_ANDROID": 20,
		"MLITE_ANDROID":  21,
		"IGLITE_ANDROID": 22,
		"PAGE":           23,
		"MACOS":          24,
		"OCULUS_MSG":     25,
		"OCULUS_CALL":    26,
		"MILAN":          27,
	}
)

func (x ClientPayload_UserAgent_Platform) Enum() *ClientPayload_UserAgent_Platform {
	p := new(ClientPayload_UserAgent_Platform)
	*p = x
	return p
}

func (x ClientPayload_UserAgent_Platform) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ClientPayload_UserAgent_Platform) Descriptor() protoreflect.EnumDescriptor {
	return file_wa_proto_enumTypes[6].Descriptor()
}

func (ClientPayload_UserAgent_Platform) Type() protoreflect.EnumType {
	return &file_wa_proto_enumTypes[6]
}

func (x ClientPayload_UserAgent_Platform) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *ClientPayload_UserAgent_Platform) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = ClientPayload_UserAgent_Platform(num)
	return nil
}

// Deprecated: Use ClientPayload_UserAgent_Platform.Descriptor instead.
func (ClientPayload_UserAgent_Platform) EnumDescriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{1, 2, 0}
}

type ClientPayload_UserAgent_ReleaseChannel int32

const (
	ClientPayload_UserAgent_RELEASE ClientPayload_UserAgent_ReleaseChannel = 0
	ClientPayload_UserAgent_BETA    ClientPayload_UserAgent_ReleaseChannel = 1
	ClientPayload_UserAgent_ALPHA   ClientPayload_UserAgent_ReleaseChannel = 2
	ClientPayload_UserAgent_DEBUG   ClientPayload_UserAgent_ReleaseChannel = 3
)

// Enum value maps for ClientPayload_UserAgent_ReleaseChannel.
var (
	ClientPayload_UserAgent_ReleaseChannel_name = map[int32]string{
		0: "RELEASE",
		1: "BETA",
		2: "ALPHA",
		3: "DEBUG",
	}
	ClientPayload_UserAgent_ReleaseChannel_value = map[string]int32{
		"RELEASE": 0,
		"BETA":    1,
		"ALPHA":   2,
		"DEBUG":   3,
	}
)

func (x ClientPayload_UserAgent_ReleaseChannel) Enum() *ClientPayload_UserAgent_ReleaseChannel {
	p := new(ClientPayload_UserAgent_ReleaseChannel)
	*p = x
	return p
}

func (x ClientPayload_UserAgent_ReleaseChannel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ClientPayload_UserAgent_ReleaseChannel) Descriptor() protoreflect.EnumDescriptor {
	return file_wa_proto_enumTypes[7].Descriptor()
}

func (ClientPayload_UserAgent_ReleaseChannel) Type() protoreflect.EnumType {
	return &file_wa_proto_enumTypes[7]
}

func (x ClientPayload_UserAgent_ReleaseChannel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *ClientPayload_UserAgent_ReleaseChannel) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = ClientPayload_UserAgent_ReleaseChannel(num)
	return nil
}

// Deprecated: Use ClientPayload_UserAgent_ReleaseChannel.Descriptor instead.
func (ClientPayload_UserAgent_ReleaseChannel) EnumDescriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{1, 2, 1}
}

type ClientPayload_WebInfo_WebSubPlatform int32

const (
	ClientPayload_WebInfo_WEB_BROWSER ClientPayload_WebInfo_WebSubPlatform = 0
	ClientPayload_WebInfo_APP_STORE   ClientPayload_WebInfo_WebSubPlatform = 1
	ClientPayload_WebInfo_WIN_STORE   ClientPayload_WebInfo_WebSubPlatform = 2
	ClientPayload_WebInfo_DARWIN      ClientPayload_WebInfo_WebSubPlatform = 3
	ClientPayload_WebInfo_WIN32       ClientPayload_WebInfo_WebSubPlatform = 4
)

// Enum value maps for ClientPayload_WebInfo_WebSubPlatform.
var (
	ClientPayload_WebInfo_WebSubPlatform_name = map[int32]string{
		0: "WEB_BROWSER",
		1: "APP_STORE",
		2: "WIN_STORE",
		3: "DARWIN",
		4: "WIN32",
	}
	ClientPayload_WebInfo_WebSubPlatform_value = map[string]int32{
		"WEB_BROWSER": 0,
		"APP_STORE":   1,
		"WIN_STORE":   2,
		"DARWIN":      3,
		"WIN32":       4,
	}
)

func (x ClientPayload_WebInfo_WebSubPlatform) Enum() *ClientPayload_WebInfo_WebSubPlatform {
	p := new(ClientPayload_WebInfo_WebSubPlatform)
	*p = x
	return p
}

func (x ClientPayload_WebInfo_WebSubPlatform) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ClientPayload_WebInfo_WebSubPlatform) Descriptor() protoreflect.EnumDescriptor {
	return file_wa_proto_enumTypes[8].Descriptor()
}

func (ClientPayload_WebInfo_WebSubPlatform) Type() protoreflect.EnumType {
	return &file_wa_proto_enumTypes[8]
}

func (x ClientPayload_WebInfo_WebSubPlatform) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *ClientPayload_WebInfo_WebSubPlatform) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = ClientPayload_WebInfo_WebSubPlatform(num)
	return nil
}

// Deprecated: Use ClientPayload_WebInfo_WebSubPlatform.Descriptor instead.
func (ClientPayload_WebInfo_WebSubPlatform) EnumDescriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{1, 3, 0}
}

type ContextInfo_AdReplyInfo_MediaType int32

const (
	ContextInfo_AdReplyInfo_NONE  ContextInfo_AdReplyInfo_MediaType = 0
	ContextInfo_AdReplyInfo_IMAGE ContextInfo_AdReplyInfo_MediaType = 1
	ContextInfo_AdReplyInfo_VIDEO ContextInfo_AdReplyInfo_MediaType = 2
)

// Enum value maps for ContextInfo_AdReplyInfo_MediaType.
var (
	ContextInfo_AdReplyInfo_MediaType_name = map[int32]string{
		0: "NONE",
		1: "IMAGE",
		2: "VIDEO",
	}
	ContextInfo_AdReplyInfo_MediaType_value = map[string]int32{
		"NONE":  0,
		"IMAGE": 1,
		"VIDEO": 2,
	}
)

func (x ContextInfo_AdReplyInfo_MediaType) Enum() *ContextInfo_AdReplyInfo_MediaType {
	p := new(ContextInfo_AdReplyInfo_MediaType)
	*p = x
	return p
}

func (x ContextInfo_AdReplyInfo_MediaType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ContextInfo_AdReplyInfo_MediaType) Descriptor() protoreflect.EnumDescriptor {
	return file_wa_proto_enumTypes[9].Descriptor()
}

func (ContextInfo_AdReplyInfo_MediaType) Type() protoreflect.EnumType {
	return &file_wa_proto_enumTypes[9]
}

func (x ContextInfo_AdReplyInfo_MediaType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *ContextInfo_AdReplyInfo_MediaType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = ContextInfo_AdReplyInfo_MediaType(num)
	return nil
}

// Deprecated: Use ContextInfo_AdReplyInfo_MediaType.Descriptor instead.
func (ContextInfo_AdReplyInfo_MediaType) EnumDescriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{2, 0, 0}
}

type ContextInfo_ExternalAdReplyInfo_MediaType int32

const (
	ContextInfo_ExternalAdReplyInfo_NONE  ContextInfo_ExternalAdReplyInfo_MediaType = 0
	ContextInfo_ExternalAdReplyInfo_IMAGE ContextInfo_ExternalAdReplyInfo_MediaType = 1
	ContextInfo_ExternalAdReplyInfo_VIDEO ContextInfo_ExternalAdReplyInfo_MediaType = 2
)

// Enum value maps for ContextInfo_ExternalAdReplyInfo_MediaType.
var (
	ContextInfo_ExternalAdReplyInfo_MediaType_name = map[int32]string{
		0: "NONE",
		1: "IMAGE",
		2: "VIDEO",
	}
	ContextInfo_ExternalAdReplyInfo_MediaType_value = map[string]int32{
		"NONE":  0,
		"IMAGE": 1,
		"VIDEO": 2,
	}
)

func (x ContextInfo_ExternalAdReplyInfo_MediaType) Enum() *ContextInfo_ExternalAdReplyInfo_MediaType {
	p := new(ContextInfo_ExternalAdReplyInfo_MediaType)
	*p = x
	return p
}

func (x ContextInfo_ExternalAdReplyInfo_MediaType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ContextInfo_ExternalAdReplyInfo_MediaType) Descriptor() protoreflect.EnumDescriptor {
	return file_wa_proto_enumTypes[10].Descriptor()
}

func (ContextInfo_ExternalAdReplyInfo_MediaType) Type() protoreflect.EnumType {
	return &file_wa_proto_enumTypes[10]
}

func (x ContextInfo_ExternalAdReplyInfo_MediaType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *ContextInfo_ExternalAdReplyInfo_MediaType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = ContextInfo_ExternalAdReplyInfo_MediaType(num)
	return nil
}

// Deprecated: Use ContextInfo_ExternalAdReplyInfo_MediaType.Descriptor instead.
func (ContextInfo_ExternalAdReplyInfo_MediaType) EnumDescriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{2, 1, 0}
}

type DisappearingMode_Initiator int32

const (
	DisappearingMode_CHANGED_IN_CHAT    DisappearingMode_Initiator = 0
	DisappearingMode_INITIATED_BY_ME    DisappearingMode_Initiator = 1
	DisappearingMode_INITIATED_BY_OTHER DisappearingMode_Initiator = 2
)

// Enum value maps for DisappearingMode_Initiator.
var (
	DisappearingMode_Initiator_name = map[int32]string{
		0: "CHANGED_IN_CHAT",
		1: "INITIATED_BY_ME",
		2: "INITIATED_BY_OTHER",
	}
	DisappearingMode_Initiator_value = map[string]int32{
		"CHANGED_IN_CHAT":    0,
		"INITIATED_BY_ME":    1,
		"INITIATED_BY_OTHER": 2,
	}
)

func (x DisappearingMode_Initiator) Enum() *DisappearingMode_Initiator {
	p := new(DisappearingMode_Initiator)
	*p = x
	return p
}

func (x DisappearingMode_Initiator) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DisappearingMode_Initiator) Descriptor() protoreflect.EnumDescriptor {
	return file_wa_proto_enumTypes[11].Descriptor()
}

func (DisappearingMode_Initiator) Type() protoreflect.EnumType {
	return &file_wa_proto_enumTypes[11]
}

func (x DisappearingMode_Initiator) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *DisappearingMode_Initiator) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = DisappearingMode_Initiator(num)
	return nil
}

// Deprecated: Use DisappearingMode_Initiator.Descriptor instead.
func (DisappearingMode_Initiator) EnumDescriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{4, 0}
}

type Message_PeerDataOperationRequestType int32

const (
	Message_UPLOAD_STICKER                Message_PeerDataOperationRequestType = 0
	Message_SEND_RECENT_STICKER_BOOTSTRAP Message_PeerDataOperationRequestType = 1
	Message_GENERATE_LINK_PREVIEW         Message_PeerDataOperationRequestType = 2
)

// Enum value maps for Message_PeerDataOperationRequestType.
var (
	Message_PeerDataOperationRequestType_name = map[int32]string{
		0: "UPLOAD_STICKER",
		1: "SEND_RECENT_STICKER_BOOTSTRAP",
		2: "GENERATE_LINK_PREVIEW",
	}
	Message_PeerDataOperationRequestType_value = map[string]int32{
		"UPLOAD_STICKER":                0,
		"SEND_RECENT_STICKER_BOOTSTRAP": 1,
		"GENERATE_LINK_PREVIEW":         2,
	}
)

func (x Message_PeerDataOperationRequestType) Enum() *Message_PeerDataOperationRequestType {
	p := new(Message_PeerDataOperationRequestType)
	*p = x
	return p
}

func (x Message_PeerDataOperationRequestType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Message_PeerDataOperationRequestType) Descriptor() protoreflect.EnumDescriptor {
	return file_wa_proto_enumTypes[12].Descriptor()
}

func (Message_PeerDataOperationRequestType) Type() protoreflect.EnumType {
	return &file_wa_proto_enumTypes[12]
}

func (x Message_PeerDataOperationRequestType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *Message_PeerDataOperationRequestType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = Message_PeerDataOperationRequestType(num)
	return nil
}

// Deprecated: Use Message_PeerDataOperationRequestType.Descriptor instead.
func (Message_PeerDataOperationRequestType) EnumDescriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{10, 0}
}

type Message_ButtonsMessage_HeaderType int32

const (
	Message_ButtonsMessage_UNKNOWN  Message_ButtonsMessage_HeaderType = 0
	Message_ButtonsMessage_EMPTY    Message_ButtonsMessage_HeaderType = 1
	Message_ButtonsMessage_TEXT     Message_ButtonsMessage_HeaderType = 2
	Message_ButtonsMessage_DOCUMENT Message_ButtonsMessage_HeaderType = 3
	Message_ButtonsMessage_IMAGE    Message_ButtonsMessage_HeaderType = 4
	Message_ButtonsMessage_VIDEO    Message_ButtonsMessage_HeaderType = 5
	Message_ButtonsMessage_LOCATION Message_ButtonsMessage_HeaderType = 6
)

// Enum value maps for Message_ButtonsMessage_HeaderType.
var (
	Message_ButtonsMessage_HeaderType_name = map[int32]string{
		0: "UNKNOWN",
		1: "EMPTY",
		2: "TEXT",
		3: "DOCUMENT",
		4: "IMAGE",
		5: "VIDEO",
		6: "LOCATION",
	}
	Message_ButtonsMessage_HeaderType_value = map[string]int32{
		"UNKNOWN":  0,
		"EMPTY":    1,
		"TEXT":     2,
		"DOCUMENT": 3,
		"IMAGE":    4,
		"VIDEO":    5,
		"LOCATION": 6,
	}
)

func (x Message_ButtonsMessage_HeaderType) Enum() *Message_ButtonsMessage_HeaderType {
	p := new(Message_ButtonsMessage_HeaderType)
	*p = x
	return p
}

func (x Message_ButtonsMessage_HeaderType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Message_ButtonsMessage_HeaderType) Descriptor() protoreflect.EnumDescriptor {
	return file_wa_proto_enumTypes[13].Descriptor()
}

func (Message_ButtonsMessage_HeaderType) Type() protoreflect.EnumType {
	return &file_wa_proto_enumTypes[13]
}

func (x Message_ButtonsMessage_HeaderType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *Message_ButtonsMessage_HeaderType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = Message_ButtonsMessage_HeaderType(num)
	return nil
}

// Deprecated: Use Message_ButtonsMessage_HeaderType.Descriptor instead.
func (Message_ButtonsMessage_HeaderType) EnumDescriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{10, 8, 0}
}

type Message_ButtonsMessage_Button_Type int32

const (
	Message_ButtonsMessage_Button_UNKNOWN     Message_ButtonsMessage_Button_Type = 0
	Message_ButtonsMessage_Button_RESPONSE    Message_ButtonsMessage_Button_Type = 1
	Message_ButtonsMessage_Button_NATIVE_FLOW Message_ButtonsMessage_Button_Type = 2
)

// Enum value maps for Message_ButtonsMessage_Button_Type.
var (
	Message_ButtonsMessage_Button_Type_name = map[int32]string{
		0: "UNKNOWN",
		1: "RESPONSE",
		2: "NATIVE_FLOW",
	}
	Message_ButtonsMessage_Button_Type_value = map[string]int32{
		"UNKNOWN":     0,
		"RESPONSE":    1,
		"NATIVE_FLOW": 2,
	}
)

func (x Message_ButtonsMessage_Button_Type) Enum() *Message_ButtonsMessage_Button_Type {
	p := new(Message_ButtonsMessage_Button_Type)
	*p = x
	return p
}

func (x Message_ButtonsMessage_Button_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Message_ButtonsMessage_Button_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_wa_proto_enumTypes[14].Descriptor()
}

func (Message_ButtonsMessage_Button_Type) Type() protoreflect.EnumType {
	return &file_wa_proto_enumTypes[14]
}

func (x Message_ButtonsMessage_Button_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *Message_ButtonsMessage_Button_Type) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = Message_ButtonsMessage_Button_Type(num)
	return nil
}

// Deprecated: Use Message_ButtonsMessage_Button_Type.Descriptor instead.
func (Message_ButtonsMessage_Button_Type) EnumDescriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{10, 8, 0, 0}
}

type Message_ButtonsResponseMessage_Type int32

const (
	Message_ButtonsResponseMessage_UNKNOWN      Message_ButtonsResponseMessage_Type = 0
	Message_ButtonsResponseMessage_DISPLAY_TEXT Message_ButtonsResponseMessage_Type = 1
)

// Enum value maps for Message_ButtonsResponseMessage_Type.
var (
	Message_ButtonsResponseMessage_Type_name = map[int32]string{
		0: "UNKNOWN",
		1: "DISPLAY_TEXT",
	}
	Message_ButtonsResponseMessage_Type_value = map[string]int32{
		"UNKNOWN":      0,
		"DISPLAY_TEXT": 1,
	}
)

func (x Message_ButtonsResponseMessage_Type) Enum() *Message_ButtonsResponseMessage_Type {
	p := new(Message_ButtonsResponseMessage_Type)
	*p = x
	return p
}

func (x Message_ButtonsResponseMessage_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Message_ButtonsResponseMessage_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_wa_proto_enumTypes[15].Descriptor()
}

func (Message_ButtonsResponseMessage_Type) Type() protoreflect.EnumType {
	return &file_wa_proto_enumTypes[15]
}

func (x Message_ButtonsResponseMessage_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *Message_ButtonsResponseMessage_Type) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = Message_ButtonsResponseMessage_Type(num)
	return nil
}

// Deprecated: Use Message_ButtonsResponseMessage_Type.Descriptor instead.
func (Message_ButtonsResponseMessage_Type) EnumDescriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{10, 9, 0}
}

type Message_ExtendedTextMessage_FontType int32

const (
	Message_ExtendedTextMessage_SANS_SERIF        Message_ExtendedTextMessage_FontType = 0
	Message_ExtendedTextMessage_SERIF             Message_ExtendedTextMessage_FontType = 1
	Message_ExtendedTextMessage_NORICAN_REGULAR   Message_ExtendedTextMessage_FontType = 2
	Message_ExtendedTextMessage_BRYNDAN_WRITE     Message_ExtendedTextMessage_FontType = 3
	Message_ExtendedTextMessage_BEBASNEUE_REGULAR Message_ExtendedTextMessage_FontType = 4
	Message_ExtendedTextMessage_OSWALD_HEAVY      Message_ExtendedTextMessage_FontType = 5
)

// Enum value maps for Message_ExtendedTextMessage_FontType.
var (
	Message_ExtendedTextMessage_FontType_name = map[int32]string{
		0: "SANS_SERIF",
		1: "SERIF",
		2: "NORICAN_REGULAR",
		3: "BRYNDAN_WRITE",
		4: "BEBASNEUE_REGULAR",
		5: "OSWALD_HEAVY",
	}
	Message_ExtendedTextMessage_FontType_value = map[string]int32{
		"SANS_SERIF":        0,
		"SERIF":             1,
		"NORICAN_REGULAR":   2,
		"BRYNDAN_WRITE":     3,
		"BEBASNEUE_REGULAR": 4,
		"OSWALD_HEAVY":      5,
	}
)

func (x Message_ExtendedTextMessage_FontType) Enum() *Message_ExtendedTextMessage_FontType {
	p := new(Message_ExtendedTextMessage_FontType)
	*p = x
	return p
}

func (x Message_ExtendedTextMessage_FontType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Message_ExtendedTextMessage_FontType) Descriptor() protoreflect.EnumDescriptor {
	return file_wa_proto_enumTypes[16].Descriptor()
}

func (Message_ExtendedTextMessage_FontType) Type() protoreflect.EnumType {
	return &file_wa_proto_enumTypes[16]
}

func (x Message_ExtendedTextMessage_FontType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *Message_ExtendedTextMessage_FontType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = Message_ExtendedTextMessage_FontType(num)
	return nil
}

// Deprecated: Use Message_ExtendedTextMessage_FontType.Descriptor instead.
func (Message_ExtendedTextMessage_FontType) EnumDescriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{10, 19, 0}
}

type Message_ExtendedTextMessage_InviteLinkGroupType int32

const (
	Message_ExtendedTextMessage_DEFAULT     Message_ExtendedTextMessage_InviteLinkGroupType = 0
	Message_ExtendedTextMessage_PARENT      Message_ExtendedTextMessage_InviteLinkGroupType = 1
	Message_ExtendedTextMessage_SUB         Message_ExtendedTextMessage_InviteLinkGroupType = 2
	Message_ExtendedTextMessage_DEFAULT_SUB Message_ExtendedTextMessage_InviteLinkGroupType = 3
)

// Enum value maps for Message_ExtendedTextMessage_InviteLinkGroupType.
var (
	Message_ExtendedTextMessage_InviteLinkGroupType_name = map[int32]string{
		0: "DEFAULT",
		1: "PARENT",
		2: "SUB",
		3: "DEFAULT_SUB",
	}
	Message_ExtendedTextMessage_InviteLinkGroupType_value = map[string]int32{
		"DEFAULT":     0,
		"PARENT":      1,
		"SUB":         2,
		"DEFAULT_SUB": 3,
	}
)

func (x Message_ExtendedTextMessage_InviteLinkGroupType) Enum() *Message_ExtendedTextMessage_InviteLinkGroupType {
	p := new(Message_ExtendedTextMessage_InviteLinkGroupType)
	*p = x
	return p
}

func (x Message_ExtendedTextMessage_InviteLinkGroupType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Message_ExtendedTextMessage_InviteLinkGroupType) Descriptor() protoreflect.EnumDescriptor {
	return file_wa_proto_enumTypes[17].Descriptor()
}

func (Message_ExtendedTextMessage_InviteLinkGroupType) Type() protoreflect.EnumType {
	return &file_wa_proto_enumTypes[17]
}

func (x Message_ExtendedTextMessage_InviteLinkGroupType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *Message_ExtendedTextMessage_InviteLinkGroupType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = Message_ExtendedTextMessage_InviteLinkGroupType(num)
	return nil
}

// Deprecated: Use Message_ExtendedTextMessage_InviteLinkGroupType.Descriptor instead.
func (Message_ExtendedTextMessage_InviteLinkGroupType) EnumDescriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{10, 19, 1}
}

type Message_ExtendedTextMessage_PreviewType int32

const (
	Message_ExtendedTextMessage_NONE  Message_ExtendedTextMessage_PreviewType = 0
	Message_ExtendedTextMessage_VIDEO Message_ExtendedTextMessage_PreviewType = 1
)

// Enum value maps for Message_ExtendedTextMessage_PreviewType.
var (
	Message_ExtendedTextMessage_PreviewType_name = map[int32]string{
		0: "NONE",
		1: "VIDEO",
	}
	Message_ExtendedTextMessage_PreviewType_value = map[string]int32{
		"NONE":  0,
		"VIDEO": 1,
	}
)

func (x Message_ExtendedTextMessage_PreviewType) Enum() *Message_ExtendedTextMessage_PreviewType {
	p := new(Message_ExtendedTextMessage_PreviewType)
	*p = x
	return p
}

func (x Message_ExtendedTextMessage_PreviewType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Message_ExtendedTextMessage_PreviewType) Descriptor() protoreflect.EnumDescriptor {
	return file_wa_proto_enumTypes[18].Descriptor()
}

func (Message_ExtendedTextMessage_PreviewType) Type() protoreflect.EnumType {
	return &file_wa_proto_enumTypes[18]
}

func (x Message_ExtendedTextMessage_PreviewType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *Message_ExtendedTextMessage_PreviewType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = Message_ExtendedTextMessage_PreviewType(num)
	return nil
}

// Deprecated: Use Message_ExtendedTextMessage_PreviewType.Descriptor instead.
func (Message_ExtendedTextMessage_PreviewType) EnumDescriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{10, 19, 2}
}

type Message_GroupInviteMessage_GroupType int32

const (
	Message_GroupInviteMessage_DEFAULT Message_GroupInviteMessage_GroupType = 0
	Message_GroupInviteMessage_PARENT  Message_GroupInviteMessage_GroupType = 1
)

// Enum value maps for Message_GroupInviteMessage_GroupType.
var (
	Message_GroupInviteMessage_GroupType_name = map[int32]string{
		0: "DEFAULT",
		1: "PARENT",
	}
	Message_GroupInviteMessage_GroupType_value = map[string]int32{
		"DEFAULT": 0,
		"PARENT":  1,
	}
)

func (x Message_GroupInviteMessage_GroupType) Enum() *Message_GroupInviteMessage_GroupType {
	p := new(Message_GroupInviteMessage_GroupType)
	*p = x
	return p
}

func (x Message_GroupInviteMessage_GroupType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Message_GroupInviteMessage_GroupType) Descriptor() protoreflect.EnumDescriptor {
	return file_wa_proto_enumTypes[19].Descriptor()
}

func (Message_GroupInviteMessage_GroupType) Type() protoreflect.EnumType {
	return &file_wa_proto_enumTypes[19]
}

func (x Message_GroupInviteMessage_GroupType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *Message_GroupInviteMessage_GroupType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = Message_GroupInviteMessage_GroupType(num)
	return nil
}

// Deprecated: Use Message_GroupInviteMessage_GroupType.Descriptor instead.
func (Message_GroupInviteMessage_GroupType) EnumDescriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{10, 21, 0}
}

type Message_HighlyStructuredMessage_HSMLocalizableParameter_HSMDateTime_HSMDateTimeComponent_CalendarType int32

const (
	Message_HighlyStructuredMessage_HSMLocalizableParameter_HSMDateTime_HSMDateTimeComponent_GREGORIAN   Message_HighlyStructuredMessage_HSMLocalizableParameter_HSMDateTime_HSMDateTimeComponent_CalendarType = 1
	Message_HighlyStructuredMessage_HSMLocalizableParameter_HSMDateTime_HSMDateTimeComponent_SOLAR_HIJRI Message_HighlyStructuredMessage_HSMLocalizableParameter_HSMDateTime_HSMDateTimeComponent_CalendarType = 2
)

// Enum value maps for Message_HighlyStructuredMessage_HSMLocalizableParameter_HSMDateTime_HSMDateTimeComponent_CalendarType.
var (
	Message_HighlyStructuredMessage_HSMLocalizableParameter_HSMDateTime_HSMDateTimeComponent_CalendarType_name = map[int32]string{
		1: "GREGORIAN",
		2: "SOLAR_HIJRI",
	}
	Message_HighlyStructuredMessage_HSMLocalizableParameter_HSMDateTime_HSMDateTimeComponent_CalendarType_value = map[string]int32{
		"GREGORIAN":   1,
		"SOLAR_HIJRI": 2,
	}
)

func (x Message_HighlyStructuredMessage_HSMLocalizableParameter_HSMDateTime_HSMDateTimeComponent_CalendarType) Enum() *Message_HighlyStructuredMessage_HSMLocalizableParameter_HSMDateTime_HSMDateTimeComponent_CalendarType {
	p := new(Message_HighlyStructuredMessage_HSMLocalizableParameter_HSMDateTime_HSMDateTimeComponent_CalendarType)
	*p = x
	return p
}

func (x Message_HighlyStructuredMessage_HSMLocalizableParameter_HSMDateTime_HSMDateTimeComponent_CalendarType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Message_HighlyStructuredMessage_HSMLocalizableParameter_HSMDateTime_HSMDateTimeComponent_CalendarType) Descriptor() protoreflect.EnumDescriptor {
	return file_wa_proto_enumTypes[20].Descriptor()
}

func (Message_HighlyStructuredMessage_HSMLocalizableParameter_HSMDateTime_HSMDateTimeComponent_CalendarType) Type() protoreflect.EnumType {
	return &file_wa_proto_enumTypes[20]
}

func (x Message_HighlyStructuredMessage_HSMLocalizableParameter_HSMDateTime_HSMDateTimeComponent_CalendarType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *Message_HighlyStructuredMessage_HSMLocalizableParameter_HSMDateTime_HSMDateTimeComponent_CalendarType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = Message_HighlyStructuredMessage_HSMLocalizableParameter_HSMDateTime_HSMDateTimeComponent_CalendarType(num)
	return nil
}

// Deprecated: Use Message_HighlyStructuredMessage_HSMLocalizableParameter_HSMDateTime_HSMDateTimeComponent_CalendarType.Descriptor instead.
func (Message_HighlyStructuredMessage_HSMLocalizableParameter_HSMDateTime_HSMDateTimeComponent_CalendarType) EnumDescriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{10, 22, 0, 1, 0, 0}
}

type Message_HighlyStructuredMessage_HSMLocalizableParameter_HSMDateTime_HSMDateTimeComponent_DayOfWeekType int32

const (
	Message_HighlyStructuredMessage_HSMLocalizableParameter_HSMDateTime_HSMDateTimeComponent_MONDAY    Message_HighlyStructuredMessage_HSMLocalizableParameter_HSMDateTime_HSMDateTimeComponent_DayOfWeekType = 1
	Message_HighlyStructuredMessage_HSMLocalizableParameter_HSMDateTime_HSMDateTimeComponent_TUESDAY   Message_HighlyStructuredMessage_HSMLocalizableParameter_HSMDateTime_HSMDateTimeComponent_DayOfWeekType = 2
	Message_HighlyStructuredMessage_HSMLocalizableParameter_HSMDateTime_HSMDateTimeComponent_WEDNESDAY Message_HighlyStructuredMessage_HSMLocalizableParameter_HSMDateTime_HSMDateTimeComponent_DayOfWeekType = 3
	Message_HighlyStructuredMessage_HSMLocalizableParameter_HSMDateTime_HSMDateTimeComponent_THURSDAY  Message_HighlyStructuredMessage_HSMLocalizableParameter_HSMDateTime_HSMDateTimeComponent_DayOfWeekType = 4
	Message_HighlyStructuredMessage_HSMLocalizableParameter_HSMDateTime_HSMDateTimeComponent_FRIDAY    Message_HighlyStructuredMessage_HSMLocalizableParameter_HSMDateTime_HSMDateTimeComponent_DayOfWeekType = 5
	Message_HighlyStructuredMessage_HSMLocalizableParameter_HSMDateTime_HSMDateTimeComponent_SATURDAY  Message_HighlyStructuredMessage_HSMLocalizableParameter_HSMDateTime_HSMDateTimeComponent_DayOfWeekType = 6
	Message_HighlyStructuredMessage_HSMLocalizableParameter_HSMDateTime_HSMDateTimeComponent_SUNDAY    Message_HighlyStructuredMessage_HSMLocalizableParameter_HSMDateTime_HSMDateTimeComponent_DayOfWeekType = 7
)

// Enum value maps for Message_HighlyStructuredMessage_HSMLocalizableParameter_HSMDateTime_HSMDateTimeComponent_DayOfWeekType.
var (
	Message_HighlyStructuredMessage_HSMLocalizableParameter_HSMDateTime_HSMDateTimeComponent_DayOfWeekType_name = map[int32]string{
		1: "MONDAY",
		2: "TUESDAY",
		3: "WEDNESDAY",
		4: "THURSDAY",
		5: "FRIDAY",
		6: "SATURDAY",
		7: "SUNDAY",
	}
	Message_HighlyStructuredMessage_HSMLocalizableParameter_HSMDateTime_HSMDateTimeComponent_DayOfWeekType_value = map[string]int32{
		"MONDAY":    1,
		"TUESDAY":   2,
		"WEDNESDAY": 3,
		"THURSDAY":  4,
		"FRIDAY":    5,
		"SATURDAY":  6,
		"SUNDAY":    7,
	}
)

func (x Message_HighlyStructuredMessage_HSMLocalizableParameter_HSMDateTime_HSMDateTimeComponent_DayOfWeekType) Enum() *Message_HighlyStructuredMessage_HSMLocalizableParameter_HSMDateTime_HSMDateTimeComponent_DayOfWeekType {
	p := new(Message_HighlyStructuredMessage_HSMLocalizableParameter_HSMDateTime_HSMDateTimeComponent_DayOfWeekType)
	*p = x
	return p
}

func (x Message_HighlyStructuredMessage_HSMLocalizableParameter_HSMDateTime_HSMDateTimeComponent_DayOfWeekType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Message_HighlyStructuredMessage_HSMLocalizableParameter_HSMDateTime_HSMDateTimeComponent_DayOfWeekType) Descriptor() protoreflect.EnumDescriptor {
	return file_wa_proto_enumTypes[21].Descriptor()
}

func (Message_HighlyStructuredMessage_HSMLocalizableParameter_HSMDateTime_HSMDateTimeComponent_DayOfWeekType) Type() protoreflect.EnumType {
	return &file_wa_proto_enumTypes[21]
}

func (x Message_HighlyStructuredMessage_HSMLocalizableParameter_HSMDateTime_HSMDateTimeComponent_DayOfWeekType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *Message_HighlyStructuredMessage_HSMLocalizableParameter_HSMDateTime_HSMDateTimeComponent_DayOfWeekType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = Message_HighlyStructuredMessage_HSMLocalizableParameter_HSMDateTime_HSMDateTimeComponent_DayOfWeekType(num)
	return nil
}

// Deprecated: Use Message_HighlyStructuredMessage_HSMLocalizableParameter_HSMDateTime_HSMDateTimeComponent_DayOfWeekType.Descriptor instead.
func (Message_HighlyStructuredMessage_HSMLocalizableParameter_HSMDateTime_HSMDateTimeComponent_DayOfWeekType) EnumDescriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{10, 22, 0, 1, 0, 1}
}

type Message_HistorySyncNotification_HistorySyncType int32

const (
	Message_HistorySyncNotification_INITIAL_BOOTSTRAP Message_HistorySyncNotification_HistorySyncType = 0
	Message_HistorySyncNotification_INITIAL_STATUS_V3 Message_HistorySyncNotification_HistorySyncType = 1
	Message_HistorySyncNotification_FULL              Message_HistorySyncNotification_HistorySyncType = 2
	Message_HistorySyncNotification_RECENT            Message_HistorySyncNotification_HistorySyncType = 3
	Message_HistorySyncNotification_PUSH_NAME         Message_HistorySyncNotification_HistorySyncType = 4
	Message_HistorySyncNotification_NON_BLOCKING_DATA Message_HistorySyncNotification_HistorySyncType = 5
)

// Enum value maps for Message_HistorySyncNotification_HistorySyncType.
var (
	Message_HistorySyncNotification_HistorySyncType_name = map[int32]string{
		0: "INITIAL_BOOTSTRAP",
		1: "INITIAL_STATUS_V3",
		2: "FULL",
		3: "RECENT",
		4: "PUSH_NAME",
		5: "NON_BLOCKING_DATA",
	}
	Message_HistorySyncNotification_HistorySyncType_value = map[string]int32{
		"INITIAL_BOOTSTRAP": 0,
		"INITIAL_STATUS_V3": 1,
		"FULL":              2,
		"RECENT":            3,
		"PUSH_NAME":         4,
		"NON_BLOCKING_DATA": 5,
	}
)

func (x Message_HistorySyncNotification_HistorySyncType) Enum() *Message_HistorySyncNotification_HistorySyncType {
	p := new(Message_HistorySyncNotification_HistorySyncType)
	*p = x
	return p
}

func (x Message_HistorySyncNotification_HistorySyncType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Message_HistorySyncNotification_HistorySyncType) Descriptor() protoreflect.EnumDescriptor {
	return file_wa_proto_enumTypes[22].Descriptor()
}

func (Message_HistorySyncNotification_HistorySyncType) Type() protoreflect.EnumType {
	return &file_wa_proto_enumTypes[22]
}

func (x Message_HistorySyncNotification_HistorySyncType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *Message_HistorySyncNotification_HistorySyncType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = Message_HistorySyncNotification_HistorySyncType(num)
	return nil
}

// Deprecated: Use Message_HistorySyncNotification_HistorySyncType.Descriptor instead.
func (Message_HistorySyncNotification_HistorySyncType) EnumDescriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{10, 23, 0}
}

type Message_InteractiveMessage_ShopMessage_Surface int32

const (
	Message_InteractiveMessage_ShopMessage_UNKNOWN_SURFACE Message_InteractiveMessage_ShopMessage_Surface = 0
	Message_InteractiveMessage_ShopMessage_FB              Message_InteractiveMessage_ShopMessage_Surface = 1
	Message_InteractiveMessage_ShopMessage_IG              Message_InteractiveMessage_ShopMessage_Surface = 2
	Message_InteractiveMessage_ShopMessage_WA              Message_InteractiveMessage_ShopMessage_Surface = 3
)

// Enum value maps for Message_InteractiveMessage_ShopMessage_Surface.
var (
	Message_InteractiveMessage_ShopMessage_Surface_name = map[int32]string{
		0: "UNKNOWN_SURFACE",
		1: "FB",
		2: "IG",
		3: "WA",
	}
	Message_InteractiveMessage_ShopMessage_Surface_value = map[string]int32{
		"UNKNOWN_SURFACE": 0,
		"FB":              1,
		"IG":              2,
		"WA":              3,
	}
)

func (x Message_InteractiveMessage_ShopMessage_Surface) Enum() *Message_InteractiveMessage_ShopMessage_Surface {
	p := new(Message_InteractiveMessage_ShopMessage_Surface)
	*p = x
	return p
}

func (x Message_InteractiveMessage_ShopMessage_Surface) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Message_InteractiveMessage_ShopMessage_Surface) Descriptor() protoreflect.EnumDescriptor {
	return file_wa_proto_enumTypes[23].Descriptor()
}

func (Message_InteractiveMessage_ShopMessage_Surface) Type() protoreflect.EnumType {
	return &file_wa_proto_enumTypes[23]
}

func (x Message_InteractiveMessage_ShopMessage_Surface) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *Message_InteractiveMessage_ShopMessage_Surface) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = Message_InteractiveMessage_ShopMessage_Surface(num)
	return nil
}

// Deprecated: Use Message_InteractiveMessage_ShopMessage_Surface.Descriptor instead.
func (Message_InteractiveMessage_ShopMessage_Surface) EnumDescriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{10, 26, 5, 0}
}

type Message_ListMessage_ListType int32

const (
	Message_ListMessage_UNKNOWN       Message_ListMessage_ListType = 0
	Message_ListMessage_SINGLE_SELECT Message_ListMessage_ListType = 1
	Message_ListMessage_PRODUCT_LIST  Message_ListMessage_ListType = 2
)

// Enum value maps for Message_ListMessage_ListType.
var (
	Message_ListMessage_ListType_name = map[int32]string{
		0: "UNKNOWN",
		1: "SINGLE_SELECT",
		2: "PRODUCT_LIST",
	}
	Message_ListMessage_ListType_value = map[string]int32{
		"UNKNOWN":       0,
		"SINGLE_SELECT": 1,
		"PRODUCT_LIST":  2,
	}
)

func (x Message_ListMessage_ListType) Enum() *Message_ListMessage_ListType {
	p := new(Message_ListMessage_ListType)
	*p = x
	return p
}

func (x Message_ListMessage_ListType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Message_ListMessage_ListType) Descriptor() protoreflect.EnumDescriptor {
	return file_wa_proto_enumTypes[24].Descriptor()
}

func (Message_ListMessage_ListType) Type() protoreflect.EnumType {
	return &file_wa_proto_enumTypes[24]
}

func (x Message_ListMessage_ListType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *Message_ListMessage_ListType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = Message_ListMessage_ListType(num)
	return nil
}

// Deprecated: Use Message_ListMessage_ListType.Descriptor instead.
func (Message_ListMessage_ListType) EnumDescriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{10, 29, 0}
}

type Message_ListResponseMessage_ListType int32

const (
	Message_ListResponseMessage_UNKNOWN       Message_ListResponseMessage_ListType = 0
	Message_ListResponseMessage_SINGLE_SELECT Message_ListResponseMessage_ListType = 1
)

// Enum value maps for Message_ListResponseMessage_ListType.
var (
	Message_ListResponseMessage_ListType_name = map[int32]string{
		0: "UNKNOWN",
		1: "SINGLE_SELECT",
	}
	Message_ListResponseMessage_ListType_value = map[string]int32{
		"UNKNOWN":       0,
		"SINGLE_SELECT": 1,
	}
)

func (x Message_ListResponseMessage_ListType) Enum() *Message_ListResponseMessage_ListType {
	p := new(Message_ListResponseMessage_ListType)
	*p = x
	return p
}

func (x Message_ListResponseMessage_ListType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Message_ListResponseMessage_ListType) Descriptor() protoreflect.EnumDescriptor {
	return file_wa_proto_enumTypes[25].Descriptor()
}

func (Message_ListResponseMessage_ListType) Type() protoreflect.EnumType {
	return &file_wa_proto_enumTypes[25]
}

func (x Message_ListResponseMessage_ListType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *Message_ListResponseMessage_ListType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = Message_ListResponseMessage_ListType(num)
	return nil
}

// Deprecated: Use Message_ListResponseMessage_ListType.Descriptor instead.
func (Message_ListResponseMessage_ListType) EnumDescriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{10, 30, 0}
}

type Message_OrderMessage_OrderStatus int32

const (
	Message_OrderMessage_INQUIRY Message_OrderMessage_OrderStatus = 1
)

// Enum value maps for Message_OrderMessage_OrderStatus.
var (
	Message_OrderMessage_OrderStatus_name = map[int32]string{
		1: "INQUIRY",
	}
	Message_OrderMessage_OrderStatus_value = map[string]int32{
		"INQUIRY": 1,
	}
)

func (x Message_OrderMessage_OrderStatus) Enum() *Message_OrderMessage_OrderStatus {
	p := new(Message_OrderMessage_OrderStatus)
	*p = x
	return p
}

func (x Message_OrderMessage_OrderStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Message_OrderMessage_OrderStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_wa_proto_enumTypes[26].Descriptor()
}

func (Message_OrderMessage_OrderStatus) Type() protoreflect.EnumType {
	return &file_wa_proto_enumTypes[26]
}

func (x Message_OrderMessage_OrderStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *Message_OrderMessage_OrderStatus) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = Message_OrderMessage_OrderStatus(num)
	return nil
}

// Deprecated: Use Message_OrderMessage_OrderStatus.Descriptor instead.
func (Message_OrderMessage_OrderStatus) EnumDescriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{10, 33, 0}
}

type Message_OrderMessage_OrderSurface int32

const (
	Message_OrderMessage_CATALOG Message_OrderMessage_OrderSurface = 1
)

// Enum value maps for Message_OrderMessage_OrderSurface.
var (
	Message_OrderMessage_OrderSurface_name = map[int32]string{
		1: "CATALOG",
	}
	Message_OrderMessage_OrderSurface_value = map[string]int32{
		"CATALOG": 1,
	}
)

func (x Message_OrderMessage_OrderSurface) Enum() *Message_OrderMessage_OrderSurface {
	p := new(Message_OrderMessage_OrderSurface)
	*p = x
	return p
}

func (x Message_OrderMessage_OrderSurface) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Message_OrderMessage_OrderSurface) Descriptor() protoreflect.EnumDescriptor {
	return file_wa_proto_enumTypes[27].Descriptor()
}

func (Message_OrderMessage_OrderSurface) Type() protoreflect.EnumType {
	return &file_wa_proto_enumTypes[27]
}

func (x Message_OrderMessage_OrderSurface) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *Message_OrderMessage_OrderSurface) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = Message_OrderMessage_OrderSurface(num)
	return nil
}

// Deprecated: Use Message_OrderMessage_OrderSurface.Descriptor instead.
func (Message_OrderMessage_OrderSurface) EnumDescriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{10, 33, 1}
}

type Message_PaymentInviteMessage_ServiceType int32

const (
	Message_PaymentInviteMessage_UNKNOWN Message_PaymentInviteMessage_ServiceType = 0
	Message_PaymentInviteMessage_FBPAY   Message_PaymentInviteMessage_ServiceType = 1
	Message_PaymentInviteMessage_UPI     Message_PaymentInviteMessage_ServiceType = 3
)

// Enum value maps for Message_PaymentInviteMessage_ServiceType.
var (
	Message_PaymentInviteMessage_ServiceType_name = map[int32]string{
		0: "UNKNOWN",
		1: "FBPAY",
		3: "UPI",
	}
	Message_PaymentInviteMessage_ServiceType_value = map[string]int32{
		"UNKNOWN": 0,
		"FBPAY":   1,
		"UPI":     3,
	}
)

func (x Message_PaymentInviteMessage_ServiceType) Enum() *Message_PaymentInviteMessage_ServiceType {
	p := new(Message_PaymentInviteMessage_ServiceType)
	*p = x
	return p
}

func (x Message_PaymentInviteMessage_ServiceType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Message_PaymentInviteMessage_ServiceType) Descriptor() protoreflect.EnumDescriptor {
	return file_wa_proto_enumTypes[28].Descriptor()
}

func (Message_PaymentInviteMessage_ServiceType) Type() protoreflect.EnumType {
	return &file_wa_proto_enumTypes[28]
}

func (x Message_PaymentInviteMessage_ServiceType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *Message_PaymentInviteMessage_ServiceType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = Message_PaymentInviteMessage_ServiceType(num)
	return nil
}

// Deprecated: Use Message_PaymentInviteMessage_ServiceType.Descriptor instead.
func (Message_PaymentInviteMessage_ServiceType) EnumDescriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{10, 34, 0}
}

type Message_PeerDataOperationRequestResponseMessage_PeerDataOperationResult_MediaRetryNotification_ResultType int32

const (
	Message_PeerDataOperationRequestResponseMessage_PeerDataOperationResult_MediaRetryNotification_GENERAL_ERROR    Message_PeerDataOperationRequestResponseMessage_PeerDataOperationResult_MediaRetryNotification_ResultType = 0
	Message_PeerDataOperationRequestResponseMessage_PeerDataOperationResult_MediaRetryNotification_SUCCESS          Message_PeerDataOperationRequestResponseMessage_PeerDataOperationResult_MediaRetryNotification_ResultType = 1
	Message_PeerDataOperationRequestResponseMessage_PeerDataOperationResult_MediaRetryNotification_NOT_FOUND        Message_PeerDataOperationRequestResponseMessage_PeerDataOperationResult_MediaRetryNotification_ResultType = 2
	Message_PeerDataOperationRequestResponseMessage_PeerDataOperationResult_MediaRetryNotification_DECRYPTION_ERROR Message_PeerDataOperationRequestResponseMessage_PeerDataOperationResult_MediaRetryNotification_ResultType = 3
)

// Enum value maps for Message_PeerDataOperationRequestResponseMessage_PeerDataOperationResult_MediaRetryNotification_ResultType.
var (
	Message_PeerDataOperationRequestResponseMessage_PeerDataOperationResult_MediaRetryNotification_ResultType_name = map[int32]string{
		0: "GENERAL_ERROR",
		1: "SUCCESS",
		2: "NOT_FOUND",
		3: "DECRYPTION_ERROR",
	}
	Message_PeerDataOperationRequestResponseMessage_PeerDataOperationResult_MediaRetryNotification_ResultType_value = map[string]int32{
		"GENERAL_ERROR":    0,
		"SUCCESS":          1,
		"NOT_FOUND":        2,
		"DECRYPTION_ERROR": 3,
	}
)

func (x Message_PeerDataOperationRequestResponseMessage_PeerDataOperationResult_MediaRetryNotification_ResultType) Enum() *Message_PeerDataOperationRequestResponseMessage_PeerDataOperationResult_MediaRetryNotification_ResultType {
	p := new(Message_PeerDataOperationRequestResponseMessage_PeerDataOperationResult_MediaRetryNotification_ResultType)
	*p = x
	return p
}

func (x Message_PeerDataOperationRequestResponseMessage_PeerDataOperationResult_MediaRetryNotification_ResultType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Message_PeerDataOperationRequestResponseMessage_PeerDataOperationResult_MediaRetryNotification_ResultType) Descriptor() protoreflect.EnumDescriptor {
	return file_wa_proto_enumTypes[29].Descriptor()
}

func (Message_PeerDataOperationRequestResponseMessage_PeerDataOperationResult_MediaRetryNotification_ResultType) Type() protoreflect.EnumType {
	return &file_wa_proto_enumTypes[29]
}

func (x Message_PeerDataOperationRequestResponseMessage_PeerDataOperationResult_MediaRetryNotification_ResultType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *Message_PeerDataOperationRequestResponseMessage_PeerDataOperationResult_MediaRetryNotification_ResultType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = Message_PeerDataOperationRequestResponseMessage_PeerDataOperationResult_MediaRetryNotification_ResultType(num)
	return nil
}

// Deprecated: Use Message_PeerDataOperationRequestResponseMessage_PeerDataOperationResult_MediaRetryNotification_ResultType.Descriptor instead.
func (Message_PeerDataOperationRequestResponseMessage_PeerDataOperationResult_MediaRetryNotification_ResultType) EnumDescriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{10, 36, 0, 1, 0}
}

type Message_ProtocolMessage_Type int32

const (
	Message_ProtocolMessage_REVOKE                                       Message_ProtocolMessage_Type = 0
	Message_ProtocolMessage_EPHEMERAL_SETTING                            Message_ProtocolMessage_Type = 3
	Message_ProtocolMessage_EPHEMERAL_SYNC_RESPONSE                      Message_ProtocolMessage_Type = 4
	Message_ProtocolMessage_HISTORY_SYNC_NOTIFICATION                    Message_ProtocolMessage_Type = 5
	Message_ProtocolMessage_APP_STATE_SYNC_KEY_SHARE                     Message_ProtocolMessage_Type = 6
	Message_ProtocolMessage_APP_STATE_SYNC_KEY_REQUEST                   Message_ProtocolMessage_Type = 7
	Message_ProtocolMessage_INITIAL_SECURITY_NOTIFICATION_SETTING_SYNC   Message_ProtocolMessage_Type = 9
	Message_ProtocolMessage_APP_STATE_FATAL_EXCEPTION_NOTIFICATION       Message_ProtocolMessage_Type = 10
	Message_ProtocolMessage_SHARE_PHONE_NUMBER                           Message_ProtocolMessage_Type = 11
	Message_ProtocolMessage_MESSAGE_EDIT                                 Message_ProtocolMessage_Type = 14
	Message_ProtocolMessage_PEER_DATA_OPERATION_REQUEST_MESSAGE          Message_ProtocolMessage_Type = 16
	Message_ProtocolMessage_PEER_DATA_OPERATION_REQUEST_RESPONSE_MESSAGE Message_ProtocolMessage_Type = 17
)

// Enum value maps for Message_ProtocolMessage_Type.
var (
	Message_ProtocolMessage_Type_name = map[int32]string{
		0:  "REVOKE",
		3:  "EPHEMERAL_SETTING",
		4:  "EPHEMERAL_SYNC_RESPONSE",
		5:  "HISTORY_SYNC_NOTIFICATION",
		6:  "APP_STATE_SYNC_KEY_SHARE",
		7:  "APP_STATE_SYNC_KEY_REQUEST",
		9:  "INITIAL_SECURITY_NOTIFICATION_SETTING_SYNC",
		10: "APP_STATE_FATAL_EXCEPTION_NOTIFICATION",
		11: "SHARE_PHONE_NUMBER",
		14: "MESSAGE_EDIT",
		16: "PEER_DATA_OPERATION_REQUEST_MESSAGE",
		17: "PEER_DATA_OPERATION_REQUEST_RESPONSE_MESSAGE",
	}
	Message_ProtocolMessage_Type_value = map[string]int32{
		"REVOKE":                                       0,
		"EPHEMERAL_SETTING":                            3,
		"EPHEMERAL_SYNC_RESPONSE":                      4,
		"HISTORY_SYNC_NOTIFICATION":                    5,
		"APP_STATE_SYNC_KEY_SHARE":                     6,
		"APP_STATE_SYNC_KEY_REQUEST":                   7,
		"INITIAL_SECURITY_NOTIFICATION_SETTING_SYNC":   9,
		"APP_STATE_FATAL_EXCEPTION_NOTIFICATION":       10,
		"SHARE_PHONE_NUMBER":                           11,
		"MESSAGE_EDIT":                                 14,
		"PEER_DATA_OPERATION_REQUEST_MESSAGE":          16,
		"PEER_DATA_OPERATION_REQUEST_RESPONSE_MESSAGE": 17,
	}
)

func (x Message_ProtocolMessage_Type) Enum() *Message_ProtocolMessage_Type {
	p := new(Message_ProtocolMessage_Type)
	*p = x
	return p
}

func (x Message_ProtocolMessage_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Message_ProtocolMessage_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_wa_proto_enumTypes[30].Descriptor()
}

func (Message_ProtocolMessage_Type) Type() protoreflect.EnumType {
	return &file_wa_proto_enumTypes[30]
}

func (x Message_ProtocolMessage_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *Message_ProtocolMessage_Type) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = Message_ProtocolMessage_Type(num)
	return nil
}

// Deprecated: Use Message_ProtocolMessage_Type.Descriptor instead.
func (Message_ProtocolMessage_Type) EnumDescriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{10, 42, 0}
}

type Message_VideoMessage_Attribution int32

const (
	Message_VideoMessage_NONE  Message_VideoMessage_Attribution = 0
	Message_VideoMessage_GIPHY Message_VideoMessage_Attribution = 1
	Message_VideoMessage_TENOR Message_VideoMessage_Attribution = 2
)

// Enum value maps for Message_VideoMessage_Attribution.
var (
	Message_VideoMessage_Attribution_name = map[int32]string{
		0: "NONE",
		1: "GIPHY",
		2: "TENOR",
	}
	Message_VideoMessage_Attribution_value = map[string]int32{
		"NONE":  0,
		"GIPHY": 1,
		"TENOR": 2,
	}
)

func (x Message_VideoMessage_Attribution) Enum() *Message_VideoMessage_Attribution {
	p := new(Message_VideoMessage_Attribution)
	*p = x
	return p
}

func (x Message_VideoMessage_Attribution) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Message_VideoMessage_Attribution) Descriptor() protoreflect.EnumDescriptor {
	return file_wa_proto_enumTypes[31].Descriptor()
}

func (Message_VideoMessage_Attribution) Type() protoreflect.EnumType {
	return &file_wa_proto_enumTypes[31]
}

func (x Message_VideoMessage_Attribution) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *Message_VideoMessage_Attribution) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = Message_VideoMessage_Attribution(num)
	return nil
}

// Deprecated: Use Message_VideoMessage_Attribution.Descriptor instead.
func (Message_VideoMessage_Attribution) EnumDescriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{10, 51, 0}
}

type PaymentBackground_Type int32

const (
	PaymentBackground_UNKNOWN PaymentBackground_Type = 0
	PaymentBackground_DEFAULT PaymentBackground_Type = 1
)

// Enum value maps for PaymentBackground_Type.
var (
	PaymentBackground_Type_name = map[int32]string{
		0: "UNKNOWN",
		1: "DEFAULT",
	}
	PaymentBackground_Type_value = map[string]int32{
		"UNKNOWN": 0,
		"DEFAULT": 1,
	}
)

func (x PaymentBackground_Type) Enum() *PaymentBackground_Type {
	p := new(PaymentBackground_Type)
	*p = x
	return p
}

func (x PaymentBackground_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PaymentBackground_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_wa_proto_enumTypes[32].Descriptor()
}

func (PaymentBackground_Type) Type() protoreflect.EnumType {
	return &file_wa_proto_enumTypes[32]
}

func (x PaymentBackground_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *PaymentBackground_Type) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = PaymentBackground_Type(num)
	return nil
}

// Deprecated: Use PaymentBackground_Type.Descriptor instead.
func (PaymentBackground_Type) EnumDescriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{15, 0}
}

type ActionLink struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url         *string `protobuf:"bytes,1,opt,name=url" json:"url,omitempty"`
	ButtonTitle *string `protobuf:"bytes,2,opt,name=button_title,json=buttonTitle" json:"button_title,omitempty"`
}

func (x *ActionLink) Reset() {
	*x = ActionLink{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wa_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionLink) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionLink) ProtoMessage() {}

func (x *ActionLink) ProtoReflect() protoreflect.Message {
	mi := &file_wa_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionLink.ProtoReflect.Descriptor instead.
func (*ActionLink) Descriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{0}
}

func (x *ActionLink) GetUrl() string {
	if x != nil && x.Url != nil {
		return *x.Url
	}
	return ""
}

func (x *ActionLink) GetButtonTitle() string {
	if x != nil && x.ButtonTitle != nil {
		return *x.ButtonTitle
	}
	return ""
}

type ClientPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username            *uint64                         `protobuf:"varint,1,opt,name=username" json:"username,omitempty"`
	Passive             *bool                           `protobuf:"varint,3,opt,name=passive" json:"passive,omitempty"`
	UserAgent           *ClientPayload_UserAgent        `protobuf:"bytes,5,opt,name=user_agent,json=userAgent" json:"user_agent,omitempty"`
	WebInfo             *ClientPayload_WebInfo          `protobuf:"bytes,6,opt,name=web_info,json=webInfo" json:"web_info,omitempty"`
	PushName            *string                         `protobuf:"bytes,7,opt,name=push_name,json=pushName" json:"push_name,omitempty"`
	SessionId           *int32                          `protobuf:"fixed32,9,opt,name=session_id,json=sessionId" json:"session_id,omitempty"`
	ShortConnect        *bool                           `protobuf:"varint,10,opt,name=short_connect,json=shortConnect" json:"short_connect,omitempty"`
	ConnectType         *ClientPayload_ConnectType      `protobuf:"varint,12,opt,name=connect_type,json=connectType,enum=ClientPayload_ConnectType" json:"connect_type,omitempty"`
	ConnectReason       *ClientPayload_ConnectReason    `protobuf:"varint,13,opt,name=connect_reason,json=connectReason,enum=ClientPayload_ConnectReason" json:"connect_reason,omitempty"`
	Shards              []int32                         `protobuf:"varint,14,rep,name=shards" json:"shards,omitempty"`
	DnsSource           *ClientPayload_DNSSource        `protobuf:"bytes,15,opt,name=dns_source,json=dnsSource" json:"dns_source,omitempty"`
	ConnectAttemptCount *uint32                         `protobuf:"varint,16,opt,name=connect_attempt_count,json=connectAttemptCount" json:"connect_attempt_count,omitempty"`
	Agent               *uint32                         `protobuf:"varint,17,opt,name=agent" json:"agent,omitempty"`
	Device              *uint32                         `protobuf:"varint,18,opt,name=device" json:"device,omitempty"`
	RegData             *ClientPayload_CompanionRegData `protobuf:"bytes,19,opt,name=reg_data,json=regData" json:"reg_data,omitempty"`
	Product             *ClientPayload_Product          `protobuf:"varint,20,opt,name=product,enum=ClientPayload_Product" json:"product,omitempty"`
	FbCat               []byte                          `protobuf:"bytes,21,opt,name=fb_cat,json=fbCat" json:"fb_cat,omitempty"`
	FbUserAgent         []byte                          `protobuf:"bytes,22,opt,name=fb_user_agent,json=fbUserAgent" json:"fb_user_agent,omitempty"`
	Oc                  *bool                           `protobuf:"varint,23,opt,name=oc" json:"oc,omitempty"`
	Lc                  *uint32                         `protobuf:"varint,24,opt,name=lc" json:"lc,omitempty"`
	IosAppExtension     *ClientPayload_IOSAppExtension  `protobuf:"varint,30,opt,name=ios_app_extension,json=iosAppExtension,enum=ClientPayload_IOSAppExtension" json:"ios_app_extension,omitempty"`
	FbAppId             *uint64                         `protobuf:"varint,31,opt,name=fb_app_id,json=fbAppId" json:"fb_app_id,omitempty"`
	FbDeviceId          *string                         `protobuf:"bytes,32,opt,name=fb_device_id,json=fbDeviceId" json:"fb_device_id,omitempty"`
}

func (x *ClientPayload) Reset() {
	*x = ClientPayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wa_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientPayload) ProtoMessage() {}

func (x *ClientPayload) ProtoReflect() protoreflect.Message {
	mi := &file_wa_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientPayload.ProtoReflect.Descriptor instead.
func (*ClientPayload) Descriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{1}
}

func (x *ClientPayload) GetUsername() uint64 {
	if x != nil && x.Username != nil {
		return *x.Username
	}
	return 0
}

func (x *ClientPayload) GetPassive() bool {
	if x != nil && x.Passive != nil {
		return *x.Passive
	}
	return false
}

func (x *ClientPayload) GetUserAgent() *ClientPayload_UserAgent {
	if x != nil {
		return x.UserAgent
	}
	return nil
}

func (x *ClientPayload) GetWebInfo() *ClientPayload_WebInfo {
	if x != nil {
		return x.WebInfo
	}
	return nil
}

func (x *ClientPayload) GetPushName() string {
	if x != nil && x.PushName != nil {
		return *x.PushName
	}
	return ""
}

func (x *ClientPayload) GetSessionId() int32 {
	if x != nil && x.SessionId != nil {
		return *x.SessionId
	}
	return 0
}

func (x *ClientPayload) GetShortConnect() bool {
	if x != nil && x.ShortConnect != nil {
		return *x.ShortConnect
	}
	return false
}

func (x *ClientPayload) GetConnectType() ClientPayload_ConnectType {
	if x != nil && x.ConnectType != nil {
		return *x.ConnectType
	}
	return ClientPayload_CELLULAR_UNKNOWN
}

func (x *ClientPayload) GetConnectReason() ClientPayload_ConnectReason {
	if x != nil && x.ConnectReason != nil {
		return *x.ConnectReason
	}
	return ClientPayload_PUSH
}

func (x *ClientPayload) GetShards() []int32 {
	if x != nil {
		return x.Shards
	}
	return nil
}

func (x *ClientPayload) GetDnsSource() *ClientPayload_DNSSource {
	if x != nil {
		return x.DnsSource
	}
	return nil
}

func (x *ClientPayload) GetConnectAttemptCount() uint32 {
	if x != nil && x.ConnectAttemptCount != nil {
		return *x.ConnectAttemptCount
	}
	return 0
}

func (x *ClientPayload) GetAgent() uint32 {
	if x != nil && x.Agent != nil {
		return *x.Agent
	}
	return 0
}

func (x *ClientPayload) GetDevice() uint32 {
	if x != nil && x.Device != nil {
		return *x.Device
	}
	return 0
}

func (x *ClientPayload) GetRegData() *ClientPayload_CompanionRegData {
	if x != nil {
		return x.RegData
	}
	return nil
}

func (x *ClientPayload) GetProduct() ClientPayload_Product {
	if x != nil && x.Product != nil {
		return *x.Product
	}
	return ClientPayload_WHATSAPP
}

func (x *ClientPayload) GetFbCat() []byte {
	if x != nil {
		return x.FbCat
	}
	return nil
}

func (x *ClientPayload) GetFbUserAgent() []byte {
	if x != nil {
		return x.FbUserAgent
	}
	return nil
}

func (x *ClientPayload) GetOc() bool {
	if x != nil && x.Oc != nil {
		return *x.Oc
	}
	return false
}

func (x *ClientPayload) GetLc() uint32 {
	if x != nil && x.Lc != nil {
		return *x.Lc
	}
	return 0
}

func (x *ClientPayload) GetIosAppExtension() ClientPayload_IOSAppExtension {
	if x != nil && x.IosAppExtension != nil {
		return *x.IosAppExtension
	}
	return ClientPayload_SHARE_EXTENSION
}

func (x *ClientPayload) GetFbAppId() uint64 {
	if x != nil && x.FbAppId != nil {
		return *x.FbAppId
	}
	return 0
}

func (x *ClientPayload) GetFbDeviceId() string {
	if x != nil && x.FbDeviceId != nil {
		return *x.FbDeviceId
	}
	return ""
}

type ContextInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StanzaId                         *string                          `protobuf:"bytes,1,opt,name=stanza_id,json=stanzaId" json:"stanza_id,omitempty"`
	Participant                      *string                          `protobuf:"bytes,2,opt,name=participant" json:"participant,omitempty"`
	QuotedMessage                    *Message                         `protobuf:"bytes,3,opt,name=quoted_message,json=quotedMessage" json:"quoted_message,omitempty"`
	RemoteJid                        *string                          `protobuf:"bytes,4,opt,name=remote_jid,json=remoteJid" json:"remote_jid,omitempty"`
	MentionedJid                     []string                         `protobuf:"bytes,15,rep,name=mentioned_jid,json=mentionedJid" json:"mentioned_jid,omitempty"`
	ConversionSource                 *string                          `protobuf:"bytes,18,opt,name=conversion_source,json=conversionSource" json:"conversion_source,omitempty"`
	ConversionData                   []byte                           `protobuf:"bytes,19,opt,name=conversion_data,json=conversionData" json:"conversion_data,omitempty"`
	ConversionDelaySeconds           *uint32                          `protobuf:"varint,20,opt,name=conversion_delay_seconds,json=conversionDelaySeconds" json:"conversion_delay_seconds,omitempty"`
	ForwardingScore                  *uint32                          `protobuf:"varint,21,opt,name=forwarding_score,json=forwardingScore" json:"forwarding_score,omitempty"`
	IsForwarded                      *bool                            `protobuf:"varint,22,opt,name=is_forwarded,json=isForwarded" json:"is_forwarded,omitempty"`
	QuotedAd                         *ContextInfo_AdReplyInfo         `protobuf:"bytes,23,opt,name=quoted_ad,json=quotedAd" json:"quoted_ad,omitempty"`
	PlaceholderKey                   *MessageKey                      `protobuf:"bytes,24,opt,name=placeholder_key,json=placeholderKey" json:"placeholder_key,omitempty"`
	Expiration                       *uint32                          `protobuf:"varint,25,opt,name=expiration" json:"expiration,omitempty"`
	EphemeralSettingTimestamp        *int64                           `protobuf:"varint,26,opt,name=ephemeral_setting_timestamp,json=ephemeralSettingTimestamp" json:"ephemeral_setting_timestamp,omitempty"`
	EphemeralSharedSecret            []byte                           `protobuf:"bytes,27,opt,name=ephemeral_shared_secret,json=ephemeralSharedSecret" json:"ephemeral_shared_secret,omitempty"`
	ExternalAdReply                  *ContextInfo_ExternalAdReplyInfo `protobuf:"bytes,28,opt,name=external_ad_reply,json=externalAdReply" json:"external_ad_reply,omitempty"`
	EntryPointConversionSource       *string                          `protobuf:"bytes,29,opt,name=entry_point_conversion_source,json=entryPointConversionSource" json:"entry_point_conversion_source,omitempty"`
	EntryPointConversionApp          *string                          `protobuf:"bytes,30,opt,name=entry_point_conversion_app,json=entryPointConversionApp" json:"entry_point_conversion_app,omitempty"`
	EntryPointConversionDelaySeconds *uint32                          `protobuf:"varint,31,opt,name=entry_point_conversion_delay_seconds,json=entryPointConversionDelaySeconds" json:"entry_point_conversion_delay_seconds,omitempty"`
	DisappearingMode                 *DisappearingMode                `protobuf:"bytes,32,opt,name=disappearing_mode,json=disappearingMode" json:"disappearing_mode,omitempty"`
	ActionLink                       *ActionLink                      `protobuf:"bytes,33,opt,name=action_link,json=actionLink" json:"action_link,omitempty"`
	GroupSubject                     *string                          `protobuf:"bytes,34,opt,name=group_subject,json=groupSubject" json:"group_subject,omitempty"`
	ParentGroupJid                   *string                          `protobuf:"bytes,35,opt,name=parent_group_jid,json=parentGroupJid" json:"parent_group_jid,omitempty"`
}

func (x *ContextInfo) Reset() {
	*x = ContextInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wa_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContextInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContextInfo) ProtoMessage() {}

func (x *ContextInfo) ProtoReflect() protoreflect.Message {
	mi := &file_wa_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContextInfo.ProtoReflect.Descriptor instead.
func (*ContextInfo) Descriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{2}
}

func (x *ContextInfo) GetStanzaId() string {
	if x != nil && x.StanzaId != nil {
		return *x.StanzaId
	}
	return ""
}

func (x *ContextInfo) GetParticipant() string {
	if x != nil && x.Participant != nil {
		return *x.Participant
	}
	return ""
}

func (x *ContextInfo) GetQuotedMessage() *Message {
	if x != nil {
		return x.QuotedMessage
	}
	return nil
}

func (x *ContextInfo) GetRemoteJid() string {
	if x != nil && x.RemoteJid != nil {
		return *x.RemoteJid
	}
	return ""
}

func (x *ContextInfo) GetMentionedJid() []string {
	if x != nil {
		return x.MentionedJid
	}
	return nil
}

func (x *ContextInfo) GetConversionSource() string {
	if x != nil && x.ConversionSource != nil {
		return *x.ConversionSource
	}
	return ""
}

func (x *ContextInfo) GetConversionData() []byte {
	if x != nil {
		return x.ConversionData
	}
	return nil
}

func (x *ContextInfo) GetConversionDelaySeconds() uint32 {
	if x != nil && x.ConversionDelaySeconds != nil {
		return *x.ConversionDelaySeconds
	}
	return 0
}

func (x *ContextInfo) GetForwardingScore() uint32 {
	if x != nil && x.ForwardingScore != nil {
		return *x.ForwardingScore
	}
	return 0
}

func (x *ContextInfo) GetIsForwarded() bool {
	if x != nil && x.IsForwarded != nil {
		return *x.IsForwarded
	}
	return false
}

func (x *ContextInfo) GetQuotedAd() *ContextInfo_AdReplyInfo {
	if x != nil {
		return x.QuotedAd
	}
	return nil
}

func (x *ContextInfo) GetPlaceholderKey() *MessageKey {
	if x != nil {
		return x.PlaceholderKey
	}
	return nil
}

func (x *ContextInfo) GetExpiration() uint32 {
	if x != nil && x.Expiration != nil {
		return *x.Expiration
	}
	return 0
}

func (x *ContextInfo) GetEphemeralSettingTimestamp() int64 {
	if x != nil && x.EphemeralSettingTimestamp != nil {
		return *x.EphemeralSettingTimestamp
	}
	return 0
}

func (x *ContextInfo) GetEphemeralSharedSecret() []byte {
	if x != nil {
		return x.EphemeralSharedSecret
	}
	return nil
}

func (x *ContextInfo) GetExternalAdReply() *ContextInfo_ExternalAdReplyInfo {
	if x != nil {
		return x.ExternalAdReply
	}
	return nil
}

func (x *ContextInfo) GetEntryPointConversionSource() string {
	if x != nil && x.EntryPointConversionSource != nil {
		return *x.EntryPointConversionSource
	}
	return ""
}

func (x *ContextInfo) GetEntryPointConversionApp() string {
	if x != nil && x.EntryPointConversionApp != nil {
		return *x.EntryPointConversionApp
	}
	return ""
}

func (x *ContextInfo) GetEntryPointConversionDelaySeconds() uint32 {
	if x != nil && x.EntryPointConversionDelaySeconds != nil {
		return *x.EntryPointConversionDelaySeconds
	}
	return 0
}

func (x *ContextInfo) GetDisappearingMode() *DisappearingMode {
	if x != nil {
		return x.DisappearingMode
	}
	return nil
}

func (x *ContextInfo) GetActionLink() *ActionLink {
	if x != nil {
		return x.ActionLink
	}
	return nil
}

func (x *ContextInfo) GetGroupSubject() string {
	if x != nil && x.GroupSubject != nil {
		return *x.GroupSubject
	}
	return ""
}

func (x *ContextInfo) GetParentGroupJid() string {
	if x != nil && x.ParentGroupJid != nil {
		return *x.ParentGroupJid
	}
	return ""
}

type DeviceListMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SenderKeyHash       []byte   `protobuf:"bytes,1,opt,name=sender_key_hash,json=senderKeyHash" json:"sender_key_hash,omitempty"`
	SenderTimestamp     *uint64  `protobuf:"varint,2,opt,name=sender_timestamp,json=senderTimestamp" json:"sender_timestamp,omitempty"`
	SenderKeyIndexes    []uint32 `protobuf:"varint,3,rep,packed,name=sender_key_indexes,json=senderKeyIndexes" json:"sender_key_indexes,omitempty"`
	RecipientKeyHash    []byte   `protobuf:"bytes,8,opt,name=recipient_key_hash,json=recipientKeyHash" json:"recipient_key_hash,omitempty"`
	RecipientTimestamp  *uint64  `protobuf:"varint,9,opt,name=recipient_timestamp,json=recipientTimestamp" json:"recipient_timestamp,omitempty"`
	RecipientKeyIndexes []uint32 `protobuf:"varint,10,rep,packed,name=recipient_key_indexes,json=recipientKeyIndexes" json:"recipient_key_indexes,omitempty"`
}

func (x *DeviceListMetadata) Reset() {
	*x = DeviceListMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wa_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceListMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceListMetadata) ProtoMessage() {}

func (x *DeviceListMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_wa_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceListMetadata.ProtoReflect.Descriptor instead.
func (*DeviceListMetadata) Descriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{3}
}

func (x *DeviceListMetadata) GetSenderKeyHash() []byte {
	if x != nil {
		return x.SenderKeyHash
	}
	return nil
}

func (x *DeviceListMetadata) GetSenderTimestamp() uint64 {
	if x != nil && x.SenderTimestamp != nil {
		return *x.SenderTimestamp
	}
	return 0
}

func (x *DeviceListMetadata) GetSenderKeyIndexes() []uint32 {
	if x != nil {
		return x.SenderKeyIndexes
	}
	return nil
}

func (x *DeviceListMetadata) GetRecipientKeyHash() []byte {
	if x != nil {
		return x.RecipientKeyHash
	}
	return nil
}

func (x *DeviceListMetadata) GetRecipientTimestamp() uint64 {
	if x != nil && x.RecipientTimestamp != nil {
		return *x.RecipientTimestamp
	}
	return 0
}

func (x *DeviceListMetadata) GetRecipientKeyIndexes() []uint32 {
	if x != nil {
		return x.RecipientKeyIndexes
	}
	return nil
}

type DisappearingMode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Initiator *DisappearingMode_Initiator `protobuf:"varint,1,opt,name=initiator,enum=DisappearingMode_Initiator" json:"initiator,omitempty"`
}

func (x *DisappearingMode) Reset() {
	*x = DisappearingMode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wa_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisappearingMode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisappearingMode) ProtoMessage() {}

func (x *DisappearingMode) ProtoReflect() protoreflect.Message {
	mi := &file_wa_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisappearingMode.ProtoReflect.Descriptor instead.
func (*DisappearingMode) Descriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{4}
}

func (x *DisappearingMode) GetInitiator() DisappearingMode_Initiator {
	if x != nil && x.Initiator != nil {
		return *x.Initiator
	}
	return DisappearingMode_CHANGED_IN_CHAT
}

type HandshakeMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientHello  *HandshakeMessage_ClientHello  `protobuf:"bytes,2,opt,name=client_hello,json=clientHello" json:"client_hello,omitempty"`
	ServerHello  *HandshakeMessage_ServerHello  `protobuf:"bytes,3,opt,name=server_hello,json=serverHello" json:"server_hello,omitempty"`
	ClientFinish *HandshakeMessage_ClientFinish `protobuf:"bytes,4,opt,name=client_finish,json=clientFinish" json:"client_finish,omitempty"`
}

func (x *HandshakeMessage) Reset() {
	*x = HandshakeMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wa_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HandshakeMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HandshakeMessage) ProtoMessage() {}

func (x *HandshakeMessage) ProtoReflect() protoreflect.Message {
	mi := &file_wa_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HandshakeMessage.ProtoReflect.Descriptor instead.
func (*HandshakeMessage) Descriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{5}
}

func (x *HandshakeMessage) GetClientHello() *HandshakeMessage_ClientHello {
	if x != nil {
		return x.ClientHello
	}
	return nil
}

func (x *HandshakeMessage) GetServerHello() *HandshakeMessage_ServerHello {
	if x != nil {
		return x.ServerHello
	}
	return nil
}

func (x *HandshakeMessage) GetClientFinish() *HandshakeMessage_ClientFinish {
	if x != nil {
		return x.ClientFinish
	}
	return nil
}

type HydratedTemplateButton struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index *uint32 `protobuf:"varint,4,opt,name=index" json:"index,omitempty"`
	// Types that are assignable to HydratedButton:
	//
	//	*HydratedTemplateButton_QuickReplyButton
	//	*HydratedTemplateButton_UrlButton
	//	*HydratedTemplateButton_CallButton
	HydratedButton isHydratedTemplateButton_HydratedButton `protobuf_oneof:"hydrated_button"`
}

func (x *HydratedTemplateButton) Reset() {
	*x = HydratedTemplateButton{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wa_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HydratedTemplateButton) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HydratedTemplateButton) ProtoMessage() {}

func (x *HydratedTemplateButton) ProtoReflect() protoreflect.Message {
	mi := &file_wa_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HydratedTemplateButton.ProtoReflect.Descriptor instead.
func (*HydratedTemplateButton) Descriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{6}
}

func (x *HydratedTemplateButton) GetIndex() uint32 {
	if x != nil && x.Index != nil {
		return *x.Index
	}
	return 0
}

func (m *HydratedTemplateButton) GetHydratedButton() isHydratedTemplateButton_HydratedButton {
	if m != nil {
		return m.HydratedButton
	}
	return nil
}

func (x *HydratedTemplateButton) GetQuickReplyButton() *HydratedTemplateButton_HydratedQuickReplyButton {
	if x, ok := x.GetHydratedButton().(*HydratedTemplateButton_QuickReplyButton); ok {
		return x.QuickReplyButton
	}
	return nil
}

func (x *HydratedTemplateButton) GetUrlButton() *HydratedTemplateButton_HydratedURLButton {
	if x, ok := x.GetHydratedButton().(*HydratedTemplateButton_UrlButton); ok {
		return x.UrlButton
	}
	return nil
}

func (x *HydratedTemplateButton) GetCallButton() *HydratedTemplateButton_HydratedCallButton {
	if x, ok := x.GetHydratedButton().(*HydratedTemplateButton_CallButton); ok {
		return x.CallButton
	}
	return nil
}

type isHydratedTemplateButton_HydratedButton interface {
	isHydratedTemplateButton_HydratedButton()
}

type HydratedTemplateButton_QuickReplyButton struct {
	QuickReplyButton *HydratedTemplateButton_HydratedQuickReplyButton `protobuf:"bytes,1,opt,name=quick_reply_button,json=quickReplyButton,oneof"`
}

type HydratedTemplateButton_UrlButton struct {
	UrlButton *HydratedTemplateButton_HydratedURLButton `protobuf:"bytes,2,opt,name=url_button,json=urlButton,oneof"`
}

type HydratedTemplateButton_CallButton struct {
	CallButton *HydratedTemplateButton_HydratedCallButton `protobuf:"bytes,3,opt,name=call_button,json=callButton,oneof"`
}

func (*HydratedTemplateButton_QuickReplyButton) isHydratedTemplateButton_HydratedButton() {}

func (*HydratedTemplateButton_UrlButton) isHydratedTemplateButton_HydratedButton() {}

func (*HydratedTemplateButton_CallButton) isHydratedTemplateButton_HydratedButton() {}

type InteractiveAnnotation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PolygonVertices []*Point `protobuf:"bytes,1,rep,name=polygonVertices" json:"polygonVertices,omitempty"`
	// Types that are assignable to Action:
	//
	//	*InteractiveAnnotation_Location
	Action isInteractiveAnnotation_Action `protobuf_oneof:"action"`
}

func (x *InteractiveAnnotation) Reset() {
	*x = InteractiveAnnotation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wa_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InteractiveAnnotation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InteractiveAnnotation) ProtoMessage() {}

func (x *InteractiveAnnotation) ProtoReflect() protoreflect.Message {
	mi := &file_wa_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InteractiveAnnotation.ProtoReflect.Descriptor instead.
func (*InteractiveAnnotation) Descriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{7}
}

func (x *InteractiveAnnotation) GetPolygonVertices() []*Point {
	if x != nil {
		return x.PolygonVertices
	}
	return nil
}

func (m *InteractiveAnnotation) GetAction() isInteractiveAnnotation_Action {
	if m != nil {
		return m.Action
	}
	return nil
}

func (x *InteractiveAnnotation) GetLocation() *Location {
	if x, ok := x.GetAction().(*InteractiveAnnotation_Location); ok {
		return x.Location
	}
	return nil
}

type isInteractiveAnnotation_Action interface {
	isInteractiveAnnotation_Action()
}

type InteractiveAnnotation_Location struct {
	Location *Location `protobuf:"bytes,2,opt,name=location,oneof"`
}

func (*InteractiveAnnotation_Location) isInteractiveAnnotation_Action() {}

type LocalizedName struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lg           *string `protobuf:"bytes,1,opt,name=lg" json:"lg,omitempty"`
	Lc           *string `protobuf:"bytes,2,opt,name=lc" json:"lc,omitempty"`
	VerifiedName *string `protobuf:"bytes,3,opt,name=verified_name,json=verifiedName" json:"verified_name,omitempty"`
}

func (x *LocalizedName) Reset() {
	*x = LocalizedName{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wa_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocalizedName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocalizedName) ProtoMessage() {}

func (x *LocalizedName) ProtoReflect() protoreflect.Message {
	mi := &file_wa_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocalizedName.ProtoReflect.Descriptor instead.
func (*LocalizedName) Descriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{8}
}

func (x *LocalizedName) GetLg() string {
	if x != nil && x.Lg != nil {
		return *x.Lg
	}
	return ""
}

func (x *LocalizedName) GetLc() string {
	if x != nil && x.Lc != nil {
		return *x.Lc
	}
	return ""
}

func (x *LocalizedName) GetVerifiedName() string {
	if x != nil && x.VerifiedName != nil {
		return *x.VerifiedName
	}
	return ""
}

type Location struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DegreesLatitude  *float64 `protobuf:"fixed64,1,opt,name=degrees_latitude,json=degreesLatitude" json:"degrees_latitude,omitempty"`
	DegreesLongitude *float64 `protobuf:"fixed64,2,opt,name=degrees_longitude,json=degreesLongitude" json:"degrees_longitude,omitempty"`
	Name             *string  `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
}

func (x *Location) Reset() {
	*x = Location{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wa_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Location) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Location) ProtoMessage() {}

func (x *Location) ProtoReflect() protoreflect.Message {
	mi := &file_wa_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Location.ProtoReflect.Descriptor instead.
func (*Location) Descriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{9}
}

func (x *Location) GetDegreesLatitude() float64 {
	if x != nil && x.DegreesLatitude != nil {
		return *x.DegreesLatitude
	}
	return 0
}

func (x *Location) GetDegreesLongitude() float64 {
	if x != nil && x.DegreesLongitude != nil {
		return *x.DegreesLongitude
	}
	return 0
}

func (x *Location) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conversation                               *string                               `protobuf:"bytes,1,opt,name=conversation" json:"conversation,omitempty"`
	SenderKeyDistributionMessage               *Message_SenderKeyDistributionMessage `protobuf:"bytes,2,opt,name=sender_key_distribution_message,json=senderKeyDistributionMessage" json:"sender_key_distribution_message,omitempty"`
	ImageMessage                               *Message_ImageMessage                 `protobuf:"bytes,3,opt,name=image_message,json=imageMessage" json:"image_message,omitempty"`
	ContactMessage                             *Message_ContactMessage               `protobuf:"bytes,4,opt,name=contact_message,json=contactMessage" json:"contact_message,omitempty"`
	LocationMessage                            *Message_LocationMessage              `protobuf:"bytes,5,opt,name=location_message,json=locationMessage" json:"location_message,omitempty"`
	ExtendedTextMessage                        *Message_ExtendedTextMessage          `protobuf:"bytes,6,opt,name=extended_text_message,json=extendedTextMessage" json:"extended_text_message,omitempty"`
	DocumentMessage                            *Message_DocumentMessage              `protobuf:"bytes,7,opt,name=document_message,json=documentMessage" json:"document_message,omitempty"`
	AudioMessage                               *Message_AudioMessage                 `protobuf:"bytes,8,opt,name=audio_message,json=audioMessage" json:"audio_message,omitempty"`
	VideoMessage                               *Message_VideoMessage                 `protobuf:"bytes,9,opt,name=video_message,json=videoMessage" json:"video_message,omitempty"`
	Call                                       *Message_Call                         `protobuf:"bytes,10,opt,name=call" json:"call,omitempty"`
	Chat                                       *Message_Chat                         `protobuf:"bytes,11,opt,name=chat" json:"chat,omitempty"`
	ProtocolMessage                            *Message_ProtocolMessage              `protobuf:"bytes,12,opt,name=protocol_message,json=protocolMessage" json:"protocol_message,omitempty"`
	ContactsArrayMessage                       *Message_ContactsArrayMessage         `protobuf:"bytes,13,opt,name=contacts_array_message,json=contactsArrayMessage" json:"contacts_array_message,omitempty"`
	HighlyStructuredMessage                    *Message_HighlyStructuredMessage      `protobuf:"bytes,14,opt,name=highly_structured_message,json=highlyStructuredMessage" json:"highly_structured_message,omitempty"`
	FastRatchetKeySenderKeyDistributionMessage *Message_SenderKeyDistributionMessage `protobuf:"bytes,15,opt,name=fast_ratchet_key_sender_key_distribution_message,json=fastRatchetKeySenderKeyDistributionMessage" json:"fast_ratchet_key_sender_key_distribution_message,omitempty"`
	SendPaymentMessage                         *Message_SendPaymentMessage           `protobuf:"bytes,16,opt,name=send_payment_message,json=sendPaymentMessage" json:"send_payment_message,omitempty"`
	LiveLocationMessage                        *Message_LiveLocationMessage          `protobuf:"bytes,18,opt,name=live_location_message,json=liveLocationMessage" json:"live_location_message,omitempty"`
	RequestPaymentMessage                      *Message_RequestPaymentMessage        `protobuf:"bytes,22,opt,name=request_payment_message,json=requestPaymentMessage" json:"request_payment_message,omitempty"`
	DeclinePaymentRequestMessage               *Message_DeclinePaymentRequestMessage `protobuf:"bytes,23,opt,name=decline_payment_request_message,json=declinePaymentRequestMessage" json:"decline_payment_request_message,omitempty"`
	CancelPaymentRequestMessage                *Message_CancelPaymentRequestMessage  `protobuf:"bytes,24,opt,name=cancel_payment_request_message,json=cancelPaymentRequestMessage" json:"cancel_payment_request_message,omitempty"`
	TemplateMessage                            *Message_TemplateMessage              `protobuf:"bytes,25,opt,name=template_message,json=templateMessage" json:"template_message,omitempty"`
	StickerMessage                             *Message_StickerMessage               `protobuf:"bytes,26,opt,name=sticker_message,json=stickerMessage" json:"sticker_message,omitempty"`
	GroupInviteMessage                         *Message_GroupInviteMessage           `protobuf:"bytes,28,opt,name=group_invite_message,json=groupInviteMessage" json:"group_invite_message,omitempty"`
	TemplateButtonReplyMessage                 *Message_TemplateButtonReplyMessage   `protobuf:"bytes,29,opt,name=template_button_reply_message,json=templateButtonReplyMessage" json:"template_button_reply_message,omitempty"`
	ProductMessage                             *Message_ProductMessage               `protobuf:"bytes,30,opt,name=product_message,json=productMessage" json:"product_message,omitempty"`
	DeviceSentMessage                          *Message_DeviceSentMessage            `protobuf:"bytes,31,opt,name=device_sent_message,json=deviceSentMessage" json:"device_sent_message,omitempty"`
	MessageContextInfo                         *MessageContextInfo                   `protobuf:"bytes,35,opt,name=message_context_info,json=messageContextInfo" json:"message_context_info,omitempty"`
	ListMessage                                *Message_ListMessage                  `protobuf:"bytes,36,opt,name=list_message,json=listMessage" json:"list_message,omitempty"`
	ViewOnceMessage                            *Message_FutureProofMessage           `protobuf:"bytes,37,opt,name=view_once_message,json=viewOnceMessage" json:"view_once_message,omitempty"`
	OrderMessage                               *Message_OrderMessage                 `protobuf:"bytes,38,opt,name=order_message,json=orderMessage" json:"order_message,omitempty"`
	ListResponseMessage                        *Message_ListResponseMessage          `protobuf:"bytes,39,opt,name=list_response_message,json=listResponseMessage" json:"list_response_message,omitempty"`
	EphemeralMessage                           *Message_FutureProofMessage           `protobuf:"bytes,40,opt,name=ephemeral_message,json=ephemeralMessage" json:"ephemeral_message,omitempty"`
	ButtonsMessage                             *Message_ButtonsMessage               `protobuf:"bytes,42,opt,name=buttons_message,json=buttonsMessage" json:"buttons_message,omitempty"`
	ButtonsResponseMessage                     *Message_ButtonsResponseMessage       `protobuf:"bytes,43,opt,name=buttons_response_message,json=buttonsResponseMessage" json:"buttons_response_message,omitempty"`
	PaymentInviteMessage                       *Message_PaymentInviteMessage         `protobuf:"bytes,44,opt,name=payment_invite_message,json=paymentInviteMessage" json:"payment_invite_message,omitempty"`
	InteractiveMessage                         *Message_InteractiveMessage           `protobuf:"bytes,45,opt,name=interactive_message,json=interactiveMessage" json:"interactive_message,omitempty"`
	ReactionMessage                            *Message_ReactionMessage              `protobuf:"bytes,46,opt,name=reaction_message,json=reactionMessage" json:"reaction_message,omitempty"`
	InteractiveResponseMessage                 *Message_InteractiveResponseMessage   `protobuf:"bytes,48,opt,name=interactive_response_message,json=interactiveResponseMessage" json:"interactive_response_message,omitempty"`
	PollCreationMessage                        *Message_PollCreationMessage          `protobuf:"bytes,49,opt,name=poll_creation_message,json=pollCreationMessage" json:"poll_creation_message,omitempty"`
	PollUpdateMessage                          *Message_PollUpdateMessage            `protobuf:"bytes,50,opt,name=poll_update_message,json=pollUpdateMessage" json:"poll_update_message,omitempty"`
	KeepInChatMessage                          *Message_KeepInChatMessage            `protobuf:"bytes,51,opt,name=keep_in_chat_message,json=keepInChatMessage" json:"keep_in_chat_message,omitempty"`
	DocumentWithCaptionMessage                 *Message_FutureProofMessage           `protobuf:"bytes,53,opt,name=document_with_caption_message,json=documentWithCaptionMessage" json:"document_with_caption_message,omitempty"`
	RequestPhoneNumberMessage                  *Message_RequestPhoneNumberMessage    `protobuf:"bytes,54,opt,name=request_phone_number_message,json=requestPhoneNumberMessage" json:"request_phone_number_message,omitempty"`
	ViewOnceMessageV2                          *Message_FutureProofMessage           `protobuf:"bytes,55,opt,name=view_once_message_v2,json=viewOnceMessageV2" json:"view_once_message_v2,omitempty"`
	EncReactionMessage                         *Message_EncReactionMessage           `protobuf:"bytes,56,opt,name=enc_reaction_message,json=encReactionMessage" json:"enc_reaction_message,omitempty"`
	EditedMessage                              *Message_FutureProofMessage           `protobuf:"bytes,58,opt,name=edited_message,json=editedMessage" json:"edited_message,omitempty"`
	PollCreationMessageV2                      *Message_PollCreationMessage          `protobuf:"bytes,60,opt,name=poll_creation_message_v2,json=pollCreationMessageV2" json:"poll_creation_message_v2,omitempty"`
}

func (x *Message) Reset() {
	*x = Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wa_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_wa_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{10}
}

func (x *Message) GetConversation() string {
	if x != nil && x.Conversation != nil {
		return *x.Conversation
	}
	return ""
}

func (x *Message) GetSenderKeyDistributionMessage() *Message_SenderKeyDistributionMessage {
	if x != nil {
		return x.SenderKeyDistributionMessage
	}
	return nil
}

func (x *Message) GetImageMessage() *Message_ImageMessage {
	if x != nil {
		return x.ImageMessage
	}
	return nil
}

func (x *Message) GetContactMessage() *Message_ContactMessage {
	if x != nil {
		return x.ContactMessage
	}
	return nil
}

func (x *Message) GetLocationMessage() *Message_LocationMessage {
	if x != nil {
		return x.LocationMessage
	}
	return nil
}

func (x *Message) GetExtendedTextMessage() *Message_ExtendedTextMessage {
	if x != nil {
		return x.ExtendedTextMessage
	}
	return nil
}

func (x *Message) GetDocumentMessage() *Message_DocumentMessage {
	if x != nil {
		return x.DocumentMessage
	}
	return nil
}

func (x *Message) GetAudioMessage() *Message_AudioMessage {
	if x != nil {
		return x.AudioMessage
	}
	return nil
}

func (x *Message) GetVideoMessage() *Message_VideoMessage {
	if x != nil {
		return x.VideoMessage
	}
	return nil
}

func (x *Message) GetCall() *Message_Call {
	if x != nil {
		return x.Call
	}
	return nil
}

func (x *Message) GetChat() *Message_Chat {
	if x != nil {
		return x.Chat
	}
	return nil
}

func (x *Message) GetProtocolMessage() *Message_ProtocolMessage {
	if x != nil {
		return x.ProtocolMessage
	}
	return nil
}

func (x *Message) GetContactsArrayMessage() *Message_ContactsArrayMessage {
	if x != nil {
		return x.ContactsArrayMessage
	}
	return nil
}

func (x *Message) GetHighlyStructuredMessage() *Message_HighlyStructuredMessage {
	if x != nil {
		return x.HighlyStructuredMessage
	}
	return nil
}

func (x *Message) GetFastRatchetKeySenderKeyDistributionMessage() *Message_SenderKeyDistributionMessage {
	if x != nil {
		return x.FastRatchetKeySenderKeyDistributionMessage
	}
	return nil
}

func (x *Message) GetSendPaymentMessage() *Message_SendPaymentMessage {
	if x != nil {
		return x.SendPaymentMessage
	}
	return nil
}

func (x *Message) GetLiveLocationMessage() *Message_LiveLocationMessage {
	if x != nil {
		return x.LiveLocationMessage
	}
	return nil
}

func (x *Message) GetRequestPaymentMessage() *Message_RequestPaymentMessage {
	if x != nil {
		return x.RequestPaymentMessage
	}
	return nil
}

func (x *Message) GetDeclinePaymentRequestMessage() *Message_DeclinePaymentRequestMessage {
	if x != nil {
		return x.DeclinePaymentRequestMessage
	}
	return nil
}

func (x *Message) GetCancelPaymentRequestMessage() *Message_CancelPaymentRequestMessage {
	if x != nil {
		return x.CancelPaymentRequestMessage
	}
	return nil
}

func (x *Message) GetTemplateMessage() *Message_TemplateMessage {
	if x != nil {
		return x.TemplateMessage
	}
	return nil
}

func (x *Message) GetStickerMessage() *Message_StickerMessage {
	if x != nil {
		return x.StickerMessage
	}
	return nil
}

func (x *Message) GetGroupInviteMessage() *Message_GroupInviteMessage {
	if x != nil {
		return x.GroupInviteMessage
	}
	return nil
}

func (x *Message) GetTemplateButtonReplyMessage() *Message_TemplateButtonReplyMessage {
	if x != nil {
		return x.TemplateButtonReplyMessage
	}
	return nil
}

func (x *Message) GetProductMessage() *Message_ProductMessage {
	if x != nil {
		return x.ProductMessage
	}
	return nil
}

func (x *Message) GetDeviceSentMessage() *Message_DeviceSentMessage {
	if x != nil {
		return x.DeviceSentMessage
	}
	return nil
}

func (x *Message) GetMessageContextInfo() *MessageContextInfo {
	if x != nil {
		return x.MessageContextInfo
	}
	return nil
}

func (x *Message) GetListMessage() *Message_ListMessage {
	if x != nil {
		return x.ListMessage
	}
	return nil
}

func (x *Message) GetViewOnceMessage() *Message_FutureProofMessage {
	if x != nil {
		return x.ViewOnceMessage
	}
	return nil
}

func (x *Message) GetOrderMessage() *Message_OrderMessage {
	if x != nil {
		return x.OrderMessage
	}
	return nil
}

func (x *Message) GetListResponseMessage() *Message_ListResponseMessage {
	if x != nil {
		return x.ListResponseMessage
	}
	return nil
}

func (x *Message) GetEphemeralMessage() *Message_FutureProofMessage {
	if x != nil {
		return x.EphemeralMessage
	}
	return nil
}

func (x *Message) GetButtonsMessage() *Message_ButtonsMessage {
	if x != nil {
		return x.ButtonsMessage
	}
	return nil
}

func (x *Message) GetButtonsResponseMessage() *Message_ButtonsResponseMessage {
	if x != nil {
		return x.ButtonsResponseMessage
	}
	return nil
}

func (x *Message) GetPaymentInviteMessage() *Message_PaymentInviteMessage {
	if x != nil {
		return x.PaymentInviteMessage
	}
	return nil
}

func (x *Message) GetInteractiveMessage() *Message_InteractiveMessage {
	if x != nil {
		return x.InteractiveMessage
	}
	return nil
}

func (x *Message) GetReactionMessage() *Message_ReactionMessage {
	if x != nil {
		return x.ReactionMessage
	}
	return nil
}

func (x *Message) GetInteractiveResponseMessage() *Message_InteractiveResponseMessage {
	if x != nil {
		return x.InteractiveResponseMessage
	}
	return nil
}

func (x *Message) GetPollCreationMessage() *Message_PollCreationMessage {
	if x != nil {
		return x.PollCreationMessage
	}
	return nil
}

func (x *Message) GetPollUpdateMessage() *Message_PollUpdateMessage {
	if x != nil {
		return x.PollUpdateMessage
	}
	return nil
}

func (x *Message) GetKeepInChatMessage() *Message_KeepInChatMessage {
	if x != nil {
		return x.KeepInChatMessage
	}
	return nil
}

func (x *Message) GetDocumentWithCaptionMessage() *Message_FutureProofMessage {
	if x != nil {
		return x.DocumentWithCaptionMessage
	}
	return nil
}

func (x *Message) GetRequestPhoneNumberMessage() *Message_RequestPhoneNumberMessage {
	if x != nil {
		return x.RequestPhoneNumberMessage
	}
	return nil
}

func (x *Message) GetViewOnceMessageV2() *Message_FutureProofMessage {
	if x != nil {
		return x.ViewOnceMessageV2
	}
	return nil
}

func (x *Message) GetEncReactionMessage() *Message_EncReactionMessage {
	if x != nil {
		return x.EncReactionMessage
	}
	return nil
}

func (x *Message) GetEditedMessage() *Message_FutureProofMessage {
	if x != nil {
		return x.EditedMessage
	}
	return nil
}

func (x *Message) GetPollCreationMessageV2() *Message_PollCreationMessage {
	if x != nil {
		return x.PollCreationMessageV2
	}
	return nil
}

type MessageContextInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceListMetadata        *DeviceListMetadata `protobuf:"bytes,1,opt,name=device_list_metadata,json=deviceListMetadata" json:"device_list_metadata,omitempty"`
	DeviceListMetadataVersion *int32              `protobuf:"varint,2,opt,name=device_list_metadata_version,json=deviceListMetadataVersion" json:"device_list_metadata_version,omitempty"`
	MessageSecret             []byte              `protobuf:"bytes,3,opt,name=message_secret,json=messageSecret" json:"message_secret,omitempty"`
}

func (x *MessageContextInfo) Reset() {
	*x = MessageContextInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wa_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageContextInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageContextInfo) ProtoMessage() {}

func (x *MessageContextInfo) ProtoReflect() protoreflect.Message {
	mi := &file_wa_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageContextInfo.ProtoReflect.Descriptor instead.
func (*MessageContextInfo) Descriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{11}
}

func (x *MessageContextInfo) GetDeviceListMetadata() *DeviceListMetadata {
	if x != nil {
		return x.DeviceListMetadata
	}
	return nil
}

func (x *MessageContextInfo) GetDeviceListMetadataVersion() int32 {
	if x != nil && x.DeviceListMetadataVersion != nil {
		return *x.DeviceListMetadataVersion
	}
	return 0
}

func (x *MessageContextInfo) GetMessageSecret() []byte {
	if x != nil {
		return x.MessageSecret
	}
	return nil
}

type MessageKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RemoteJid   *string `protobuf:"bytes,1,opt,name=remote_jid,json=remoteJid" json:"remote_jid,omitempty"`
	FromMe      *bool   `protobuf:"varint,2,opt,name=from_me,json=fromMe" json:"from_me,omitempty"`
	Id          *string `protobuf:"bytes,3,opt,name=id" json:"id,omitempty"`
	Participant *string `protobuf:"bytes,4,opt,name=participant" json:"participant,omitempty"`
}

func (x *MessageKey) Reset() {
	*x = MessageKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wa_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageKey) ProtoMessage() {}

func (x *MessageKey) ProtoReflect() protoreflect.Message {
	mi := &file_wa_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageKey.ProtoReflect.Descriptor instead.
func (*MessageKey) Descriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{12}
}

func (x *MessageKey) GetRemoteJid() string {
	if x != nil && x.RemoteJid != nil {
		return *x.RemoteJid
	}
	return ""
}

func (x *MessageKey) GetFromMe() bool {
	if x != nil && x.FromMe != nil {
		return *x.FromMe
	}
	return false
}

func (x *MessageKey) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *MessageKey) GetParticipant() string {
	if x != nil && x.Participant != nil {
		return *x.Participant
	}
	return ""
}

type Money struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value        *int64  `protobuf:"varint,1,opt,name=value" json:"value,omitempty"`
	Offset       *uint32 `protobuf:"varint,2,opt,name=offset" json:"offset,omitempty"`
	CurrencyCode *string `protobuf:"bytes,3,opt,name=currency_code,json=currencyCode" json:"currency_code,omitempty"`
}

func (x *Money) Reset() {
	*x = Money{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wa_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Money) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Money) ProtoMessage() {}

func (x *Money) ProtoReflect() protoreflect.Message {
	mi := &file_wa_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Money.ProtoReflect.Descriptor instead.
func (*Money) Descriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{13}
}

func (x *Money) GetValue() int64 {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return 0
}

func (x *Money) GetOffset() uint32 {
	if x != nil && x.Offset != nil {
		return *x.Offset
	}
	return 0
}

func (x *Money) GetCurrencyCode() string {
	if x != nil && x.CurrencyCode != nil {
		return *x.CurrencyCode
	}
	return ""
}

type NoiseCertificate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details   []byte `protobuf:"bytes,1,opt,name=details" json:"details,omitempty"`
	Signature []byte `protobuf:"bytes,2,opt,name=signature" json:"signature,omitempty"`
}

func (x *NoiseCertificate) Reset() {
	*x = NoiseCertificate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wa_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NoiseCertificate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoiseCertificate) ProtoMessage() {}

func (x *NoiseCertificate) ProtoReflect() protoreflect.Message {
	mi := &file_wa_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoiseCertificate.ProtoReflect.Descriptor instead.
func (*NoiseCertificate) Descriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{14}
}

func (x *NoiseCertificate) GetDetails() []byte {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *NoiseCertificate) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

type PaymentBackground struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              *string                      `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	FileLength      *uint64                      `protobuf:"varint,2,opt,name=file_length,json=fileLength" json:"file_length,omitempty"`
	Width           *uint32                      `protobuf:"varint,3,opt,name=width" json:"width,omitempty"`
	Height          *uint32                      `protobuf:"varint,4,opt,name=height" json:"height,omitempty"`
	Mimetype        *string                      `protobuf:"bytes,5,opt,name=mimetype" json:"mimetype,omitempty"`
	PlaceholderArgb *uint32                      `protobuf:"fixed32,6,opt,name=placeholder_argb,json=placeholderArgb" json:"placeholder_argb,omitempty"`
	TextArgb        *uint32                      `protobuf:"fixed32,7,opt,name=text_argb,json=textArgb" json:"text_argb,omitempty"`
	SubtextArgb     *uint32                      `protobuf:"fixed32,8,opt,name=subtext_argb,json=subtextArgb" json:"subtext_argb,omitempty"`
	MediaData       *PaymentBackground_MediaData `protobuf:"bytes,9,opt,name=media_data,json=mediaData" json:"media_data,omitempty"`
	Type            *PaymentBackground_Type      `protobuf:"varint,10,opt,name=type,enum=PaymentBackground_Type" json:"type,omitempty"`
}

func (x *PaymentBackground) Reset() {
	*x = PaymentBackground{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wa_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentBackground) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentBackground) ProtoMessage() {}

func (x *PaymentBackground) ProtoReflect() protoreflect.Message {
	mi := &file_wa_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentBackground.ProtoReflect.Descriptor instead.
func (*PaymentBackground) Descriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{15}
}

func (x *PaymentBackground) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *PaymentBackground) GetFileLength() uint64 {
	if x != nil && x.FileLength != nil {
		return *x.FileLength
	}
	return 0
}

func (x *PaymentBackground) GetWidth() uint32 {
	if x != nil && x.Width != nil {
		return *x.Width
	}
	return 0
}

func (x *PaymentBackground) GetHeight() uint32 {
	if x != nil && x.Height != nil {
		return *x.Height
	}
	return 0
}

func (x *PaymentBackground) GetMimetype() string {
	if x != nil && x.Mimetype != nil {
		return *x.Mimetype
	}
	return ""
}

func (x *PaymentBackground) GetPlaceholderArgb() uint32 {
	if x != nil && x.PlaceholderArgb != nil {
		return *x.PlaceholderArgb
	}
	return 0
}

func (x *PaymentBackground) GetTextArgb() uint32 {
	if x != nil && x.TextArgb != nil {
		return *x.TextArgb
	}
	return 0
}

func (x *PaymentBackground) GetSubtextArgb() uint32 {
	if x != nil && x.SubtextArgb != nil {
		return *x.SubtextArgb
	}
	return 0
}

func (x *PaymentBackground) GetMediaData() *PaymentBackground_MediaData {
	if x != nil {
		return x.MediaData
	}
	return nil
}

func (x *PaymentBackground) GetType() PaymentBackground_Type {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return PaymentBackground_UNKNOWN
}

type Point struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	XDeprecated *int32   `protobuf:"varint,1,opt,name=x_deprecated,json=xDeprecated" json:"x_deprecated,omitempty"`
	YDeprecated *int32   `protobuf:"varint,2,opt,name=y_deprecated,json=yDeprecated" json:"y_deprecated,omitempty"`
	X           *float64 `protobuf:"fixed64,3,opt,name=x" json:"x,omitempty"`
	Y           *float64 `protobuf:"fixed64,4,opt,name=y" json:"y,omitempty"`
}

func (x *Point) Reset() {
	*x = Point{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wa_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Point) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Point) ProtoMessage() {}

func (x *Point) ProtoReflect() protoreflect.Message {
	mi := &file_wa_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Point.ProtoReflect.Descriptor instead.
func (*Point) Descriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{16}
}

func (x *Point) GetXDeprecated() int32 {
	if x != nil && x.XDeprecated != nil {
		return *x.XDeprecated
	}
	return 0
}

func (x *Point) GetYDeprecated() int32 {
	if x != nil && x.YDeprecated != nil {
		return *x.YDeprecated
	}
	return 0
}

func (x *Point) GetX() float64 {
	if x != nil && x.X != nil {
		return *x.X
	}
	return 0
}

func (x *Point) GetY() float64 {
	if x != nil && x.Y != nil {
		return *x.Y
	}
	return 0
}

type TemplateButton struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index *uint32 `protobuf:"varint,4,opt,name=index" json:"index,omitempty"`
	// Types that are assignable to Button:
	//
	//	*TemplateButton_QuickReplyButton_
	//	*TemplateButton_UrlButton
	//	*TemplateButton_CallButton_
	Button isTemplateButton_Button `protobuf_oneof:"button"`
}

func (x *TemplateButton) Reset() {
	*x = TemplateButton{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wa_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TemplateButton) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TemplateButton) ProtoMessage() {}

func (x *TemplateButton) ProtoReflect() protoreflect.Message {
	mi := &file_wa_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TemplateButton.ProtoReflect.Descriptor instead.
func (*TemplateButton) Descriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{17}
}

func (x *TemplateButton) GetIndex() uint32 {
	if x != nil && x.Index != nil {
		return *x.Index
	}
	return 0
}

func (m *TemplateButton) GetButton() isTemplateButton_Button {
	if m != nil {
		return m.Button
	}
	return nil
}

func (x *TemplateButton) GetQuickReplyButton() *TemplateButton_QuickReplyButton {
	if x, ok := x.GetButton().(*TemplateButton_QuickReplyButton_); ok {
		return x.QuickReplyButton
	}
	return nil
}

func (x *TemplateButton) GetUrlButton() *TemplateButton_URLButton {
	if x, ok := x.GetButton().(*TemplateButton_UrlButton); ok {
		return x.UrlButton
	}
	return nil
}

func (x *TemplateButton) GetCallButton() *TemplateButton_CallButton {
	if x, ok := x.GetButton().(*TemplateButton_CallButton_); ok {
		return x.CallButton
	}
	return nil
}

type isTemplateButton_Button interface {
	isTemplateButton_Button()
}

type TemplateButton_QuickReplyButton_ struct {
	QuickReplyButton *TemplateButton_QuickReplyButton `protobuf:"bytes,1,opt,name=quick_reply_button,json=quickReplyButton,oneof"`
}

type TemplateButton_UrlButton struct {
	UrlButton *TemplateButton_URLButton `protobuf:"bytes,2,opt,name=url_button,json=urlButton,oneof"`
}

type TemplateButton_CallButton_ struct {
	CallButton *TemplateButton_CallButton `protobuf:"bytes,3,opt,name=call_button,json=callButton,oneof"`
}

func (*TemplateButton_QuickReplyButton_) isTemplateButton_Button() {}

func (*TemplateButton_UrlButton) isTemplateButton_Button() {}

func (*TemplateButton_CallButton_) isTemplateButton_Button() {}

type VerifiedNameCertificate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details         []byte `protobuf:"bytes,1,opt,name=details" json:"details,omitempty"`
	Signature       []byte `protobuf:"bytes,2,opt,name=signature" json:"signature,omitempty"`
	ServerSignature []byte `protobuf:"bytes,3,opt,name=server_signature,json=serverSignature" json:"server_signature,omitempty"`
}

func (x *VerifiedNameCertificate) Reset() {
	*x = VerifiedNameCertificate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wa_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifiedNameCertificate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifiedNameCertificate) ProtoMessage() {}

func (x *VerifiedNameCertificate) ProtoReflect() protoreflect.Message {
	mi := &file_wa_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifiedNameCertificate.ProtoReflect.Descriptor instead.
func (*VerifiedNameCertificate) Descriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{18}
}

func (x *VerifiedNameCertificate) GetDetails() []byte {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *VerifiedNameCertificate) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *VerifiedNameCertificate) GetServerSignature() []byte {
	if x != nil {
		return x.ServerSignature
	}
	return nil
}

type ClientPayload_CompanionRegData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ERegid         []byte `protobuf:"bytes,1,opt,name=e_regid,json=eRegid" json:"e_regid,omitempty"`
	EKeytype       []byte `protobuf:"bytes,2,opt,name=e_keytype,json=eKeytype" json:"e_keytype,omitempty"`
	EIdent         []byte `protobuf:"bytes,3,opt,name=e_ident,json=eIdent" json:"e_ident,omitempty"`
	ESkeyId        []byte `protobuf:"bytes,4,opt,name=e_skey_id,json=eSkeyId" json:"e_skey_id,omitempty"`
	ESkeyVal       []byte `protobuf:"bytes,5,opt,name=e_skey_val,json=eSkeyVal" json:"e_skey_val,omitempty"`
	ESkeySig       []byte `protobuf:"bytes,6,opt,name=e_skey_sig,json=eSkeySig" json:"e_skey_sig,omitempty"`
	BuildHash      []byte `protobuf:"bytes,7,opt,name=build_hash,json=buildHash" json:"build_hash,omitempty"`
	CompanionProps []byte `protobuf:"bytes,8,opt,name=companion_props,json=companionProps" json:"companion_props,omitempty"`
}

func (x *ClientPayload_CompanionRegData) Reset() {
	*x = ClientPayload_CompanionRegData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wa_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientPayload_CompanionRegData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientPayload_CompanionRegData) ProtoMessage() {}

func (x *ClientPayload_CompanionRegData) ProtoReflect() protoreflect.Message {
	mi := &file_wa_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientPayload_CompanionRegData.ProtoReflect.Descriptor instead.
func (*ClientPayload_CompanionRegData) Descriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{1, 0}
}

func (x *ClientPayload_CompanionRegData) GetERegid() []byte {
	if x != nil {
		return x.ERegid
	}
	return nil
}

func (x *ClientPayload_CompanionRegData) GetEKeytype() []byte {
	if x != nil {
		return x.EKeytype
	}
	return nil
}

func (x *ClientPayload_CompanionRegData) GetEIdent() []byte {
	if x != nil {
		return x.EIdent
	}
	return nil
}

func (x *ClientPayload_CompanionRegData) GetESkeyId() []byte {
	if x != nil {
		return x.ESkeyId
	}
	return nil
}

func (x *ClientPayload_CompanionRegData) GetESkeyVal() []byte {
	if x != nil {
		return x.ESkeyVal
	}
	return nil
}

func (x *ClientPayload_CompanionRegData) GetESkeySig() []byte {
	if x != nil {
		return x.ESkeySig
	}
	return nil
}

func (x *ClientPayload_CompanionRegData) GetBuildHash() []byte {
	if x != nil {
		return x.BuildHash
	}
	return nil
}

func (x *ClientPayload_CompanionRegData) GetCompanionProps() []byte {
	if x != nil {
		return x.CompanionProps
	}
	return nil
}

type ClientPayload_DNSSource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DnsMethod *ClientPayload_DNSSource_DNSResolutionMethod `protobuf:"varint,15,opt,name=dns_method,json=dnsMethod,enum=ClientPayload_DNSSource_DNSResolutionMethod" json:"dns_method,omitempty"`
	AppCached *bool                                        `protobuf:"varint,16,opt,name=app_cached,json=appCached" json:"app_cached,omitempty"`
}

func (x *ClientPayload_DNSSource) Reset() {
	*x = ClientPayload_DNSSource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wa_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientPayload_DNSSource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientPayload_DNSSource) ProtoMessage() {}

func (x *ClientPayload_DNSSource) ProtoReflect() protoreflect.Message {
	mi := &file_wa_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientPayload_DNSSource.ProtoReflect.Descriptor instead.
func (*ClientPayload_DNSSource) Descriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{1, 1}
}

func (x *ClientPayload_DNSSource) GetDnsMethod() ClientPayload_DNSSource_DNSResolutionMethod {
	if x != nil && x.DnsMethod != nil {
		return *x.DnsMethod
	}
	return ClientPayload_DNSSource_SYSTEM
}

func (x *ClientPayload_DNSSource) GetAppCached() bool {
	if x != nil && x.AppCached != nil {
		return *x.AppCached
	}
	return false
}

type ClientPayload_UserAgent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Platform                       *ClientPayload_UserAgent_Platform       `protobuf:"varint,1,opt,name=platform,enum=ClientPayload_UserAgent_Platform" json:"platform,omitempty"`
	AppVersion                     *ClientPayload_UserAgent_AppVersion     `protobuf:"bytes,2,opt,name=app_version,json=appVersion" json:"app_version,omitempty"`
	Mcc                            *string                                 `protobuf:"bytes,3,opt,name=mcc" json:"mcc,omitempty"`
	Mnc                            *string                                 `protobuf:"bytes,4,opt,name=mnc" json:"mnc,omitempty"`
	OsVersion                      *string                                 `protobuf:"bytes,5,opt,name=os_version,json=osVersion" json:"os_version,omitempty"`
	Manufacturer                   *string                                 `protobuf:"bytes,6,opt,name=manufacturer" json:"manufacturer,omitempty"`
	Device                         *string                                 `protobuf:"bytes,7,opt,name=device" json:"device,omitempty"`
	OsBuildNumber                  *string                                 `protobuf:"bytes,8,opt,name=os_build_number,json=osBuildNumber" json:"os_build_number,omitempty"`
	PhoneId                        *string                                 `protobuf:"bytes,9,opt,name=phone_id,json=phoneId" json:"phone_id,omitempty"`
	ReleaseChannel                 *ClientPayload_UserAgent_ReleaseChannel `protobuf:"varint,10,opt,name=release_channel,json=releaseChannel,enum=ClientPayload_UserAgent_ReleaseChannel" json:"release_channel,omitempty"`
	LocaleLanguageIso_639_1        *string                                 `protobuf:"bytes,11,opt,name=locale_language_iso_639_1,json=localeLanguageIso6391" json:"locale_language_iso_639_1,omitempty"`
	LocaleCountryIso_3166_1Alpha_2 *string                                 `protobuf:"bytes,12,opt,name=locale_country_iso_3166_1_alpha_2,json=localeCountryIso31661Alpha2" json:"locale_country_iso_3166_1_alpha_2,omitempty"`
	DeviceBoard                    *string                                 `protobuf:"bytes,13,opt,name=device_board,json=deviceBoard" json:"device_board,omitempty"`
}

func (x *ClientPayload_UserAgent) Reset() {
	*x = ClientPayload_UserAgent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wa_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientPayload_UserAgent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientPayload_UserAgent) ProtoMessage() {}

func (x *ClientPayload_UserAgent) ProtoReflect() protoreflect.Message {
	mi := &file_wa_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientPayload_UserAgent.ProtoReflect.Descriptor instead.
func (*ClientPayload_UserAgent) Descriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{1, 2}
}

func (x *ClientPayload_UserAgent) GetPlatform() ClientPayload_UserAgent_Platform {
	if x != nil && x.Platform != nil {
		return *x.Platform
	}
	return ClientPayload_UserAgent_ANDROID
}

func (x *ClientPayload_UserAgent) GetAppVersion() *ClientPayload_UserAgent_AppVersion {
	if x != nil {
		return x.AppVersion
	}
	return nil
}

func (x *ClientPayload_UserAgent) GetMcc() string {
	if x != nil && x.Mcc != nil {
		return *x.Mcc
	}
	return ""
}

func (x *ClientPayload_UserAgent) GetMnc() string {
	if x != nil && x.Mnc != nil {
		return *x.Mnc
	}
	return ""
}

func (x *ClientPayload_UserAgent) GetOsVersion() string {
	if x != nil && x.OsVersion != nil {
		return *x.OsVersion
	}
	return ""
}

func (x *ClientPayload_UserAgent) GetManufacturer() string {
	if x != nil && x.Manufacturer != nil {
		return *x.Manufacturer
	}
	return ""
}

func (x *ClientPayload_UserAgent) GetDevice() string {
	if x != nil && x.Device != nil {
		return *x.Device
	}
	return ""
}

func (x *ClientPayload_UserAgent) GetOsBuildNumber() string {
	if x != nil && x.OsBuildNumber != nil {
		return *x.OsBuildNumber
	}
	return ""
}

func (x *ClientPayload_UserAgent) GetPhoneId() string {
	if x != nil && x.PhoneId != nil {
		return *x.PhoneId
	}
	return ""
}

func (x *ClientPayload_UserAgent) GetReleaseChannel() ClientPayload_UserAgent_ReleaseChannel {
	if x != nil && x.ReleaseChannel != nil {
		return *x.ReleaseChannel
	}
	return ClientPayload_UserAgent_RELEASE
}

func (x *ClientPayload_UserAgent) GetLocaleLanguageIso_639_1() string {
	if x != nil && x.LocaleLanguageIso_639_1 != nil {
		return *x.LocaleLanguageIso_639_1
	}
	return ""
}

func (x *ClientPayload_UserAgent) GetLocaleCountryIso_3166_1Alpha_2() string {
	if x != nil && x.LocaleCountryIso_3166_1Alpha_2 != nil {
		return *x.LocaleCountryIso_3166_1Alpha_2
	}
	return ""
}

func (x *ClientPayload_UserAgent) GetDeviceBoard() string {
	if x != nil && x.DeviceBoard != nil {
		return *x.DeviceBoard
	}
	return ""
}

type ClientPayload_WebInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RefToken       *string                               `protobuf:"bytes,1,opt,name=ref_token,json=refToken" json:"ref_token,omitempty"`
	Version        *string                               `protobuf:"bytes,2,opt,name=version" json:"version,omitempty"`
	WebdPayload    *ClientPayload_WebInfo_WebdPayload    `protobuf:"bytes,3,opt,name=webd_payload,json=webdPayload" json:"webd_payload,omitempty"`
	WebSubPlatform *ClientPayload_WebInfo_WebSubPlatform `protobuf:"varint,4,opt,name=web_sub_platform,json=webSubPlatform,enum=ClientPayload_WebInfo_WebSubPlatform" json:"web_sub_platform,omitempty"`
}

func (x *ClientPayload_WebInfo) Reset() {
	*x = ClientPayload_WebInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wa_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientPayload_WebInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientPayload_WebInfo) ProtoMessage() {}

func (x *ClientPayload_WebInfo) ProtoReflect() protoreflect.Message {
	mi := &file_wa_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientPayload_WebInfo.ProtoReflect.Descriptor instead.
func (*ClientPayload_WebInfo) Descriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{1, 3}
}

func (x *ClientPayload_WebInfo) GetRefToken() string {
	if x != nil && x.RefToken != nil {
		return *x.RefToken
	}
	return ""
}

func (x *ClientPayload_WebInfo) GetVersion() string {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return ""
}

func (x *ClientPayload_WebInfo) GetWebdPayload() *ClientPayload_WebInfo_WebdPayload {
	if x != nil {
		return x.WebdPayload
	}
	return nil
}

func (x *ClientPayload_WebInfo) GetWebSubPlatform() ClientPayload_WebInfo_WebSubPlatform {
	if x != nil && x.WebSubPlatform != nil {
		return *x.WebSubPlatform
	}
	return ClientPayload_WebInfo_WEB_BROWSER
}

type ClientPayload_UserAgent_AppVersion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Primary    *uint32 `protobuf:"varint,1,opt,name=primary" json:"primary,omitempty"`
	Secondary  *uint32 `protobuf:"varint,2,opt,name=secondary" json:"secondary,omitempty"`
	Tertiary   *uint32 `protobuf:"varint,3,opt,name=tertiary" json:"tertiary,omitempty"`
	Quaternary *uint32 `protobuf:"varint,4,opt,name=quaternary" json:"quaternary,omitempty"`
	Quinary    *uint32 `protobuf:"varint,5,opt,name=quinary" json:"quinary,omitempty"`
}

func (x *ClientPayload_UserAgent_AppVersion) Reset() {
	*x = ClientPayload_UserAgent_AppVersion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wa_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientPayload_UserAgent_AppVersion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientPayload_UserAgent_AppVersion) ProtoMessage() {}

func (x *ClientPayload_UserAgent_AppVersion) ProtoReflect() protoreflect.Message {
	mi := &file_wa_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientPayload_UserAgent_AppVersion.ProtoReflect.Descriptor instead.
func (*ClientPayload_UserAgent_AppVersion) Descriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{1, 2, 0}
}

func (x *ClientPayload_UserAgent_AppVersion) GetPrimary() uint32 {
	if x != nil && x.Primary != nil {
		return *x.Primary
	}
	return 0
}

func (x *ClientPayload_UserAgent_AppVersion) GetSecondary() uint32 {
	if x != nil && x.Secondary != nil {
		return *x.Secondary
	}
	return 0
}

func (x *ClientPayload_UserAgent_AppVersion) GetTertiary() uint32 {
	if x != nil && x.Tertiary != nil {
		return *x.Tertiary
	}
	return 0
}

func (x *ClientPayload_UserAgent_AppVersion) GetQuaternary() uint32 {
	if x != nil && x.Quaternary != nil {
		return *x.Quaternary
	}
	return 0
}

func (x *ClientPayload_UserAgent_AppVersion) GetQuinary() uint32 {
	if x != nil && x.Quinary != nil {
		return *x.Quinary
	}
	return 0
}

type ClientPayload_WebInfo_WebdPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UsesParticipantInKey     *bool   `protobuf:"varint,1,opt,name=uses_participant_in_key,json=usesParticipantInKey" json:"uses_participant_in_key,omitempty"`
	SupportsStarredMessages  *bool   `protobuf:"varint,2,opt,name=supports_starred_messages,json=supportsStarredMessages" json:"supports_starred_messages,omitempty"`
	SupportsDocumentMessages *bool   `protobuf:"varint,3,opt,name=supports_document_messages,json=supportsDocumentMessages" json:"supports_document_messages,omitempty"`
	SupportsUrlMessages      *bool   `protobuf:"varint,4,opt,name=supports_url_messages,json=supportsUrlMessages" json:"supports_url_messages,omitempty"`
	SupportsMediaRetry       *bool   `protobuf:"varint,5,opt,name=supports_media_retry,json=supportsMediaRetry" json:"supports_media_retry,omitempty"`
	SupportsE2EImage         *bool   `protobuf:"varint,6,opt,name=supports_e2e_image,json=supportsE2eImage" json:"supports_e2e_image,omitempty"`
	SupportsE2EVideo         *bool   `protobuf:"varint,7,opt,name=supports_e2e_video,json=supportsE2eVideo" json:"supports_e2e_video,omitempty"`
	SupportsE2EAudio         *bool   `protobuf:"varint,8,opt,name=supports_e2e_audio,json=supportsE2eAudio" json:"supports_e2e_audio,omitempty"`
	SupportsE2EDocument      *bool   `protobuf:"varint,9,opt,name=supports_e2e_document,json=supportsE2eDocument" json:"supports_e2e_document,omitempty"`
	DocumentTypes            *string `protobuf:"bytes,10,opt,name=document_types,json=documentTypes" json:"document_types,omitempty"`
	Features                 []byte  `protobuf:"bytes,11,opt,name=features" json:"features,omitempty"`
}

func (x *ClientPayload_WebInfo_WebdPayload) Reset() {
	*x = ClientPayload_WebInfo_WebdPayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wa_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientPayload_WebInfo_WebdPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientPayload_WebInfo_WebdPayload) ProtoMessage() {}

func (x *ClientPayload_WebInfo_WebdPayload) ProtoReflect() protoreflect.Message {
	mi := &file_wa_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientPayload_WebInfo_WebdPayload.ProtoReflect.Descriptor instead.
func (*ClientPayload_WebInfo_WebdPayload) Descriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{1, 3, 0}
}

func (x *ClientPayload_WebInfo_WebdPayload) GetUsesParticipantInKey() bool {
	if x != nil && x.UsesParticipantInKey != nil {
		return *x.UsesParticipantInKey
	}
	return false
}

func (x *ClientPayload_WebInfo_WebdPayload) GetSupportsStarredMessages() bool {
	if x != nil && x.SupportsStarredMessages != nil {
		return *x.SupportsStarredMessages
	}
	return false
}

func (x *ClientPayload_WebInfo_WebdPayload) GetSupportsDocumentMessages() bool {
	if x != nil && x.SupportsDocumentMessages != nil {
		return *x.SupportsDocumentMessages
	}
	return false
}

func (x *ClientPayload_WebInfo_WebdPayload) GetSupportsUrlMessages() bool {
	if x != nil && x.SupportsUrlMessages != nil {
		return *x.SupportsUrlMessages
	}
	return false
}

func (x *ClientPayload_WebInfo_WebdPayload) GetSupportsMediaRetry() bool {
	if x != nil && x.SupportsMediaRetry != nil {
		return *x.SupportsMediaRetry
	}
	return false
}

func (x *ClientPayload_WebInfo_WebdPayload) GetSupportsE2EImage() bool {
	if x != nil && x.SupportsE2EImage != nil {
		return *x.SupportsE2EImage
	}
	return false
}

func (x *ClientPayload_WebInfo_WebdPayload) GetSupportsE2EVideo() bool {
	if x != nil && x.SupportsE2EVideo != nil {
		return *x.SupportsE2EVideo
	}
	return false
}

func (x *ClientPayload_WebInfo_WebdPayload) GetSupportsE2EAudio() bool {
	if x != nil && x.SupportsE2EAudio != nil {
		return *x.SupportsE2EAudio
	}
	return false
}

func (x *ClientPayload_WebInfo_WebdPayload) GetSupportsE2EDocument() bool {
	if x != nil && x.SupportsE2EDocument != nil {
		return *x.SupportsE2EDocument
	}
	return false
}

func (x *ClientPayload_WebInfo_WebdPayload) GetDocumentTypes() string {
	if x != nil && x.DocumentTypes != nil {
		return *x.DocumentTypes
	}
	return ""
}

func (x *ClientPayload_WebInfo_WebdPayload) GetFeatures() []byte {
	if x != nil {
		return x.Features
	}
	return nil
}

type ContextInfo_AdReplyInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AdvertiserName *string                            `protobuf:"bytes,1,opt,name=advertiser_name,json=advertiserName" json:"advertiser_name,omitempty"`
	MediaType      *ContextInfo_AdReplyInfo_MediaType `protobuf:"varint,2,opt,name=media_type,json=mediaType,enum=ContextInfo_AdReplyInfo_MediaType" json:"media_type,omitempty"`
	JpegThumbnail  []byte                             `protobuf:"bytes,16,opt,name=jpeg_thumbnail,json=jpegThumbnail" json:"jpeg_thumbnail,omitempty"`
	Caption        *string                            `protobuf:"bytes,17,opt,name=caption" json:"caption,omitempty"`
}

func (x *ContextInfo_AdReplyInfo) Reset() {
	*x = ContextInfo_AdReplyInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wa_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContextInfo_AdReplyInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContextInfo_AdReplyInfo) ProtoMessage() {}

func (x *ContextInfo_AdReplyInfo) ProtoReflect() protoreflect.Message {
	mi := &file_wa_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContextInfo_AdReplyInfo.ProtoReflect.Descriptor instead.
func (*ContextInfo_AdReplyInfo) Descriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{2, 0}
}

func (x *ContextInfo_AdReplyInfo) GetAdvertiserName() string {
	if x != nil && x.AdvertiserName != nil {
		return *x.AdvertiserName
	}
	return ""
}

func (x *ContextInfo_AdReplyInfo) GetMediaType() ContextInfo_AdReplyInfo_MediaType {
	if x != nil && x.MediaType != nil {
		return *x.MediaType
	}
	return ContextInfo_AdReplyInfo_NONE
}

func (x *ContextInfo_AdReplyInfo) GetJpegThumbnail() []byte {
	if x != nil {
		return x.JpegThumbnail
	}
	return nil
}

func (x *ContextInfo_AdReplyInfo) GetCaption() string {
	if x != nil && x.Caption != nil {
		return *x.Caption
	}
	return ""
}

type ContextInfo_ExternalAdReplyInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title                 *string                                    `protobuf:"bytes,1,opt,name=title" json:"title,omitempty"`
	Body                  *string                                    `protobuf:"bytes,2,opt,name=body" json:"body,omitempty"`
	MediaType             *ContextInfo_ExternalAdReplyInfo_MediaType `protobuf:"varint,3,opt,name=media_type,json=mediaType,enum=ContextInfo_ExternalAdReplyInfo_MediaType" json:"media_type,omitempty"`
	ThumbnailUrl          *string                                    `protobuf:"bytes,4,opt,name=thumbnail_url,json=thumbnailUrl" json:"thumbnail_url,omitempty"`
	MediaUrl              *string                                    `protobuf:"bytes,5,opt,name=media_url,json=mediaUrl" json:"media_url,omitempty"`
	Thumbnail             []byte                                     `protobuf:"bytes,6,opt,name=thumbnail" json:"thumbnail,omitempty"`
	SourceType            *string                                    `protobuf:"bytes,7,opt,name=source_type,json=sourceType" json:"source_type,omitempty"`
	SourceId              *string                                    `protobuf:"bytes,8,opt,name=source_id,json=sourceId" json:"source_id,omitempty"`
	SourceUrl             *string                                    `protobuf:"bytes,9,opt,name=source_url,json=sourceUrl" json:"source_url,omitempty"`
	ContainsAutoReply     *bool                                      `protobuf:"varint,10,opt,name=contains_auto_reply,json=containsAutoReply" json:"contains_auto_reply,omitempty"`
	RenderLargerThumbnail *bool                                      `protobuf:"varint,11,opt,name=render_larger_thumbnail,json=renderLargerThumbnail" json:"render_larger_thumbnail,omitempty"`
	ShowAdAttribution     *bool                                      `protobuf:"varint,12,opt,name=show_ad_attribution,json=showAdAttribution" json:"show_ad_attribution,omitempty"`
}

func (x *ContextInfo_ExternalAdReplyInfo) Reset() {
	*x = ContextInfo_ExternalAdReplyInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wa_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContextInfo_ExternalAdReplyInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContextInfo_ExternalAdReplyInfo) ProtoMessage() {}

func (x *ContextInfo_ExternalAdReplyInfo) ProtoReflect() protoreflect.Message {
	mi := &file_wa_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContextInfo_ExternalAdReplyInfo.ProtoReflect.Descriptor instead.
func (*ContextInfo_ExternalAdReplyInfo) Descriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{2, 1}
}

func (x *ContextInfo_ExternalAdReplyInfo) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

func (x *ContextInfo_ExternalAdReplyInfo) GetBody() string {
	if x != nil && x.Body != nil {
		return *x.Body
	}
	return ""
}

func (x *ContextInfo_ExternalAdReplyInfo) GetMediaType() ContextInfo_ExternalAdReplyInfo_MediaType {
	if x != nil && x.MediaType != nil {
		return *x.MediaType
	}
	return ContextInfo_ExternalAdReplyInfo_NONE
}

func (x *ContextInfo_ExternalAdReplyInfo) GetThumbnailUrl() string {
	if x != nil && x.ThumbnailUrl != nil {
		return *x.ThumbnailUrl
	}
	return ""
}

func (x *ContextInfo_ExternalAdReplyInfo) GetMediaUrl() string {
	if x != nil && x.MediaUrl != nil {
		return *x.MediaUrl
	}
	return ""
}

func (x *ContextInfo_ExternalAdReplyInfo) GetThumbnail() []byte {
	if x != nil {
		return x.Thumbnail
	}
	return nil
}

func (x *ContextInfo_ExternalAdReplyInfo) GetSourceType() string {
	if x != nil && x.SourceType != nil {
		return *x.SourceType
	}
	return ""
}

func (x *ContextInfo_ExternalAdReplyInfo) GetSourceId() string {
	if x != nil && x.SourceId != nil {
		return *x.SourceId
	}
	return ""
}

func (x *ContextInfo_ExternalAdReplyInfo) GetSourceUrl() string {
	if x != nil && x.SourceUrl != nil {
		return *x.SourceUrl
	}
	return ""
}

func (x *ContextInfo_ExternalAdReplyInfo) GetContainsAutoReply() bool {
	if x != nil && x.ContainsAutoReply != nil {
		return *x.ContainsAutoReply
	}
	return false
}

func (x *ContextInfo_ExternalAdReplyInfo) GetRenderLargerThumbnail() bool {
	if x != nil && x.RenderLargerThumbnail != nil {
		return *x.RenderLargerThumbnail
	}
	return false
}

func (x *ContextInfo_ExternalAdReplyInfo) GetShowAdAttribution() bool {
	if x != nil && x.ShowAdAttribution != nil {
		return *x.ShowAdAttribution
	}
	return false
}

type HandshakeMessage_ClientFinish struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Static  []byte `protobuf:"bytes,1,opt,name=static" json:"static,omitempty"`
	Payload []byte `protobuf:"bytes,2,opt,name=payload" json:"payload,omitempty"`
}

func (x *HandshakeMessage_ClientFinish) Reset() {
	*x = HandshakeMessage_ClientFinish{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wa_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HandshakeMessage_ClientFinish) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HandshakeMessage_ClientFinish) ProtoMessage() {}

func (x *HandshakeMessage_ClientFinish) ProtoReflect() protoreflect.Message {
	mi := &file_wa_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HandshakeMessage_ClientFinish.ProtoReflect.Descriptor instead.
func (*HandshakeMessage_ClientFinish) Descriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{5, 0}
}

func (x *HandshakeMessage_ClientFinish) GetStatic() []byte {
	if x != nil {
		return x.Static
	}
	return nil
}

func (x *HandshakeMessage_ClientFinish) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

type HandshakeMessage_ClientHello struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ephemeral []byte `protobuf:"bytes,1,opt,name=ephemeral" json:"ephemeral,omitempty"`
	Static    []byte `protobuf:"bytes,2,opt,name=static" json:"static,omitempty"`
	Payload   []byte `protobuf:"bytes,3,opt,name=payload" json:"payload,omitempty"`
}

func (x *HandshakeMessage_ClientHello) Reset() {
	*x = HandshakeMessage_ClientHello{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wa_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HandshakeMessage_ClientHello) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HandshakeMessage_ClientHello) ProtoMessage() {}

func (x *HandshakeMessage_ClientHello) ProtoReflect() protoreflect.Message {
	mi := &file_wa_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HandshakeMessage_ClientHello.ProtoReflect.Descriptor instead.
func (*HandshakeMessage_ClientHello) Descriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{5, 1}
}

func (x *HandshakeMessage_ClientHello) GetEphemeral() []byte {
	if x != nil {
		return x.Ephemeral
	}
	return nil
}

func (x *HandshakeMessage_ClientHello) GetStatic() []byte {
	if x != nil {
		return x.Static
	}
	return nil
}

func (x *HandshakeMessage_ClientHello) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

type HandshakeMessage_ServerHello struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ephemeral []byte `protobuf:"bytes,1,opt,name=ephemeral" json:"ephemeral,omitempty"`
	Static    []byte `protobuf:"bytes,2,opt,name=static" json:"static,omitempty"`
	Payload   []byte `protobuf:"bytes,3,opt,name=payload" json:"payload,omitempty"`
}

func (x *HandshakeMessage_ServerHello) Reset() {
	*x = HandshakeMessage_ServerHello{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wa_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HandshakeMessage_ServerHello) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HandshakeMessage_ServerHello) ProtoMessage() {}

func (x *HandshakeMessage_ServerHello) ProtoReflect() protoreflect.Message {
	mi := &file_wa_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HandshakeMessage_ServerHello.ProtoReflect.Descriptor instead.
func (*HandshakeMessage_ServerHello) Descriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{5, 2}
}

func (x *HandshakeMessage_ServerHello) GetEphemeral() []byte {
	if x != nil {
		return x.Ephemeral
	}
	return nil
}

func (x *HandshakeMessage_ServerHello) GetStatic() []byte {
	if x != nil {
		return x.Static
	}
	return nil
}

func (x *HandshakeMessage_ServerHello) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

type HydratedTemplateButton_HydratedCallButton struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DisplayText *string `protobuf:"bytes,1,opt,name=display_text,json=displayText" json:"display_text,omitempty"`
	PhoneNumber *string `protobuf:"bytes,2,opt,name=phone_number,json=phoneNumber" json:"phone_number,omitempty"`
}

func (x *HydratedTemplateButton_HydratedCallButton) Reset() {
	*x = HydratedTemplateButton_HydratedCallButton{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wa_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HydratedTemplateButton_HydratedCallButton) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HydratedTemplateButton_HydratedCallButton) ProtoMessage() {}

func (x *HydratedTemplateButton_HydratedCallButton) ProtoReflect() protoreflect.Message {
	mi := &file_wa_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HydratedTemplateButton_HydratedCallButton.ProtoReflect.Descriptor instead.
func (*HydratedTemplateButton_HydratedCallButton) Descriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{6, 0}
}

func (x *HydratedTemplateButton_HydratedCallButton) GetDisplayText() string {
	if x != nil && x.DisplayText != nil {
		return *x.DisplayText
	}
	return ""
}

func (x *HydratedTemplateButton_HydratedCallButton) GetPhoneNumber() string {
	if x != nil && x.PhoneNumber != nil {
		return *x.PhoneNumber
	}
	return ""
}

type HydratedTemplateButton_HydratedQuickReplyButton struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DisplayText *string `protobuf:"bytes,1,opt,name=display_text,json=displayText" json:"display_text,omitempty"`
	Id          *string `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
}

func (x *HydratedTemplateButton_HydratedQuickReplyButton) Reset() {
	*x = HydratedTemplateButton_HydratedQuickReplyButton{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wa_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HydratedTemplateButton_HydratedQuickReplyButton) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HydratedTemplateButton_HydratedQuickReplyButton) ProtoMessage() {}

func (x *HydratedTemplateButton_HydratedQuickReplyButton) ProtoReflect() protoreflect.Message {
	mi := &file_wa_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HydratedTemplateButton_HydratedQuickReplyButton.ProtoReflect.Descriptor instead.
func (*HydratedTemplateButton_HydratedQuickReplyButton) Descriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{6, 1}
}

func (x *HydratedTemplateButton_HydratedQuickReplyButton) GetDisplayText() string {
	if x != nil && x.DisplayText != nil {
		return *x.DisplayText
	}
	return ""
}

func (x *HydratedTemplateButton_HydratedQuickReplyButton) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

type HydratedTemplateButton_HydratedURLButton struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DisplayText *string `protobuf:"bytes,1,opt,name=display_text,json=displayText" json:"display_text,omitempty"`
	Url         *string `protobuf:"bytes,2,opt,name=url" json:"url,omitempty"`
}

func (x *HydratedTemplateButton_HydratedURLButton) Reset() {
	*x = HydratedTemplateButton_HydratedURLButton{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wa_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HydratedTemplateButton_HydratedURLButton) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HydratedTemplateButton_HydratedURLButton) ProtoMessage() {}

func (x *HydratedTemplateButton_HydratedURLButton) ProtoReflect() protoreflect.Message {
	mi := &file_wa_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HydratedTemplateButton_HydratedURLButton.ProtoReflect.Descriptor instead.
func (*HydratedTemplateButton_HydratedURLButton) Descriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{6, 2}
}

func (x *HydratedTemplateButton_HydratedURLButton) GetDisplayText() string {
	if x != nil && x.DisplayText != nil {
		return *x.DisplayText
	}
	return ""
}

func (x *HydratedTemplateButton_HydratedURLButton) GetUrl() string {
	if x != nil && x.Url != nil {
		return *x.Url
	}
	return ""
}

type Message_AppStateFatalExceptionNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CollectionNames []string `protobuf:"bytes,1,rep,name=collection_names,json=collectionNames" json:"collection_names,omitempty"`
	Timestamp       *int64   `protobuf:"varint,2,opt,name=timestamp" json:"timestamp,omitempty"`
}

func (x *Message_AppStateFatalExceptionNotification) Reset() {
	*x = Message_AppStateFatalExceptionNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wa_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_AppStateFatalExceptionNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_AppStateFatalExceptionNotification) ProtoMessage() {}

func (x *Message_AppStateFatalExceptionNotification) ProtoReflect() protoreflect.Message {
	mi := &file_wa_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_AppStateFatalExceptionNotification.ProtoReflect.Descriptor instead.
func (*Message_AppStateFatalExceptionNotification) Descriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{10, 0}
}

func (x *Message_AppStateFatalExceptionNotification) GetCollectionNames() []string {
	if x != nil {
		return x.CollectionNames
	}
	return nil
}

func (x *Message_AppStateFatalExceptionNotification) GetTimestamp() int64 {
	if x != nil && x.Timestamp != nil {
		return *x.Timestamp
	}
	return 0
}

type Message_AppStateSyncKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyId   *Message_AppStateSyncKeyId   `protobuf:"bytes,1,opt,name=key_id,json=keyId" json:"key_id,omitempty"`
	KeyData *Message_AppStateSyncKeyData `protobuf:"bytes,2,opt,name=key_data,json=keyData" json:"key_data,omitempty"`
}

func (x *Message_AppStateSyncKey) Reset() {
	*x = Message_AppStateSyncKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wa_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_AppStateSyncKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_AppStateSyncKey) ProtoMessage() {}

func (x *Message_AppStateSyncKey) ProtoReflect() protoreflect.Message {
	mi := &file_wa_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_AppStateSyncKey.ProtoReflect.Descriptor instead.
func (*Message_AppStateSyncKey) Descriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{10, 1}
}

func (x *Message_AppStateSyncKey) GetKeyId() *Message_AppStateSyncKeyId {
	if x != nil {
		return x.KeyId
	}
	return nil
}

func (x *Message_AppStateSyncKey) GetKeyData() *Message_AppStateSyncKeyData {
	if x != nil {
		return x.KeyData
	}
	return nil
}

type Message_AppStateSyncKeyData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyData     []byte                              `protobuf:"bytes,1,opt,name=key_data,json=keyData" json:"key_data,omitempty"`
	Fingerprint *Message_AppStateSyncKeyFingerprint `protobuf:"bytes,2,opt,name=fingerprint" json:"fingerprint,omitempty"`
	Timestamp   *int64                              `protobuf:"varint,3,opt,name=timestamp" json:"timestamp,omitempty"`
}

func (x *Message_AppStateSyncKeyData) Reset() {
	*x = Message_AppStateSyncKeyData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wa_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_AppStateSyncKeyData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_AppStateSyncKeyData) ProtoMessage() {}

func (x *Message_AppStateSyncKeyData) ProtoReflect() protoreflect.Message {
	mi := &file_wa_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_AppStateSyncKeyData.ProtoReflect.Descriptor instead.
func (*Message_AppStateSyncKeyData) Descriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{10, 2}
}

func (x *Message_AppStateSyncKeyData) GetKeyData() []byte {
	if x != nil {
		return x.KeyData
	}
	return nil
}

func (x *Message_AppStateSyncKeyData) GetFingerprint() *Message_AppStateSyncKeyFingerprint {
	if x != nil {
		return x.Fingerprint
	}
	return nil
}

func (x *Message_AppStateSyncKeyData) GetTimestamp() int64 {
	if x != nil && x.Timestamp != nil {
		return *x.Timestamp
	}
	return 0
}

type Message_AppStateSyncKeyFingerprint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RawId         *uint32  `protobuf:"varint,1,opt,name=raw_id,json=rawId" json:"raw_id,omitempty"`
	CurrentIndex  *uint32  `protobuf:"varint,2,opt,name=current_index,json=currentIndex" json:"current_index,omitempty"`
	DeviceIndexes []uint32 `protobuf:"varint,3,rep,packed,name=device_indexes,json=deviceIndexes" json:"device_indexes,omitempty"`
}

func (x *Message_AppStateSyncKeyFingerprint) Reset() {
	*x = Message_AppStateSyncKeyFingerprint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wa_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_AppStateSyncKeyFingerprint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_AppStateSyncKeyFingerprint) ProtoMessage() {}

func (x *Message_AppStateSyncKeyFingerprint) ProtoReflect() protoreflect.Message {
	mi := &file_wa_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_AppStateSyncKeyFingerprint.ProtoReflect.Descriptor instead.
func (*Message_AppStateSyncKeyFingerprint) Descriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{10, 3}
}

func (x *Message_AppStateSyncKeyFingerprint) GetRawId() uint32 {
	if x != nil && x.RawId != nil {
		return *x.RawId
	}
	return 0
}

func (x *Message_AppStateSyncKeyFingerprint) GetCurrentIndex() uint32 {
	if x != nil && x.CurrentIndex != nil {
		return *x.CurrentIndex
	}
	return 0
}

func (x *Message_AppStateSyncKeyFingerprint) GetDeviceIndexes() []uint32 {
	if x != nil {
		return x.DeviceIndexes
	}
	return nil
}

type Message_AppStateSyncKeyId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyId []byte `protobuf:"bytes,1,opt,name=key_id,json=keyId" json:"key_id,omitempty"`
}

func (x *Message_AppStateSyncKeyId) Reset() {
	*x = Message_AppStateSyncKeyId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wa_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_AppStateSyncKeyId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_AppStateSyncKeyId) ProtoMessage() {}

func (x *Message_AppStateSyncKeyId) ProtoReflect() protoreflect.Message {
	mi := &file_wa_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_AppStateSyncKeyId.ProtoReflect.Descriptor instead.
func (*Message_AppStateSyncKeyId) Descriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{10, 4}
}

func (x *Message_AppStateSyncKeyId) GetKeyId() []byte {
	if x != nil {
		return x.KeyId
	}
	return nil
}

type Message_AppStateSyncKeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyIds []*Message_AppStateSyncKeyId `protobuf:"bytes,1,rep,name=key_ids,json=keyIds" json:"key_ids,omitempty"`
}

func (x *Message_AppStateSyncKeyRequest) Reset() {
	*x = Message_AppStateSyncKeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wa_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_AppStateSyncKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_AppStateSyncKeyRequest) ProtoMessage() {}

func (x *Message_AppStateSyncKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wa_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_AppStateSyncKeyRequest.ProtoReflect.Descriptor instead.
func (*Message_AppStateSyncKeyRequest) Descriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{10, 5}
}

func (x *Message_AppStateSyncKeyRequest) GetKeyIds() []*Message_AppStateSyncKeyId {
	if x != nil {
		return x.KeyIds
	}
	return nil
}

type Message_AppStateSyncKeyShare struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keys []*Message_AppStateSyncKey `protobuf:"bytes,1,rep,name=keys" json:"keys,omitempty"`
}

func (x *Message_AppStateSyncKeyShare) Reset() {
	*x = Message_AppStateSyncKeyShare{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wa_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_AppStateSyncKeyShare) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_AppStateSyncKeyShare) ProtoMessage() {}

func (x *Message_AppStateSyncKeyShare) ProtoReflect() protoreflect.Message {
	mi := &file_wa_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_AppStateSyncKeyShare.ProtoReflect.Descriptor instead.
func (*Message_AppStateSyncKeyShare) Descriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{10, 6}
}

func (x *Message_AppStateSyncKeyShare) GetKeys() []*Message_AppStateSyncKey {
	if x != nil {
		return x.Keys
	}
	return nil
}

type Message_AudioMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url               *string      `protobuf:"bytes,1,opt,name=url" json:"url,omitempty"`
	Mimetype          *string      `protobuf:"bytes,2,opt,name=mimetype" json:"mimetype,omitempty"`
	FileSha256        []byte       `protobuf:"bytes,3,opt,name=file_sha256,json=fileSha256" json:"file_sha256,omitempty"`
	FileLength        *uint64      `protobuf:"varint,4,opt,name=file_length,json=fileLength" json:"file_length,omitempty"`
	Seconds           *uint32      `protobuf:"varint,5,opt,name=seconds" json:"seconds,omitempty"`
	Ptt               *bool        `protobuf:"varint,6,opt,name=ptt" json:"ptt,omitempty"`
	MediaKey          []byte       `protobuf:"bytes,7,opt,name=media_key,json=mediaKey" json:"media_key,omitempty"`
	FileEncSha256     []byte       `protobuf:"bytes,8,opt,name=file_enc_sha256,json=fileEncSha256" json:"file_enc_sha256,omitempty"`
	DirectPath        *string      `protobuf:"bytes,9,opt,name=direct_path,json=directPath" json:"direct_path,omitempty"`
	MediaKeyTimestamp *int64       `protobuf:"varint,10,opt,name=media_key_timestamp,json=mediaKeyTimestamp" json:"media_key_timestamp,omitempty"`
	ContextInfo       *ContextInfo `protobuf:"bytes,17,opt,name=context_info,json=contextInfo" json:"context_info,omitempty"`
	StreamingSidecar  []byte       `protobuf:"bytes,18,opt,name=streaming_sidecar,json=streamingSidecar" json:"streaming_sidecar,omitempty"`
	Waveform          []byte       `protobuf:"bytes,19,opt,name=waveform" json:"waveform,omitempty"`
	BackgroundArgb    *uint32      `protobuf:"fixed32,20,opt,name=background_argb,json=backgroundArgb" json:"background_argb,omitempty"`
}

func (x *Message_AudioMessage) Reset() {
	*x = Message_AudioMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wa_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_AudioMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_AudioMessage) ProtoMessage() {}

func (x *Message_AudioMessage) ProtoReflect() protoreflect.Message {
	mi := &file_wa_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_AudioMessage.ProtoReflect.Descriptor instead.
func (*Message_AudioMessage) Descriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{10, 7}
}

func (x *Message_AudioMessage) GetUrl() string {
	if x != nil && x.Url != nil {
		return *x.Url
	}
	return ""
}

func (x *Message_AudioMessage) GetMimetype() string {
	if x != nil && x.Mimetype != nil {
		return *x.Mimetype
	}
	return ""
}

func (x *Message_AudioMessage) GetFileSha256() []byte {
	if x != nil {
		return x.FileSha256
	}
	return nil
}

func (x *Message_AudioMessage) GetFileLength() uint64 {
	if x != nil && x.FileLength != nil {
		return *x.FileLength
	}
	return 0
}

func (x *Message_AudioMessage) GetSeconds() uint32 {
	if x != nil && x.Seconds != nil {
		return *x.Seconds
	}
	return 0
}

func (x *Message_AudioMessage) GetPtt() bool {
	if x != nil && x.Ptt != nil {
		return *x.Ptt
	}
	return false
}

func (x *Message_AudioMessage) GetMediaKey() []byte {
	if x != nil {
		return x.MediaKey
	}
	return nil
}

func (x *Message_AudioMessage) GetFileEncSha256() []byte {
	if x != nil {
		return x.FileEncSha256
	}
	return nil
}

func (x *Message_AudioMessage) GetDirectPath() string {
	if x != nil && x.DirectPath != nil {
		return *x.DirectPath
	}
	return ""
}

func (x *Message_AudioMessage) GetMediaKeyTimestamp() int64 {
	if x != nil && x.MediaKeyTimestamp != nil {
		return *x.MediaKeyTimestamp
	}
	return 0
}

func (x *Message_AudioMessage) GetContextInfo() *ContextInfo {
	if x != nil {
		return x.ContextInfo
	}
	return nil
}

func (x *Message_AudioMessage) GetStreamingSidecar() []byte {
	if x != nil {
		return x.StreamingSidecar
	}
	return nil
}

func (x *Message_AudioMessage) GetWaveform() []byte {
	if x != nil {
		return x.Waveform
	}
	return nil
}

func (x *Message_AudioMessage) GetBackgroundArgb() uint32 {
	if x != nil && x.BackgroundArgb != nil {
		return *x.BackgroundArgb
	}
	return 0
}

type Message_ButtonsMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContentText *string                            `protobuf:"bytes,6,opt,name=content_text,json=contentText" json:"content_text,omitempty"`
	FooterText  *string                            `protobuf:"bytes,7,opt,name=footer_text,json=footerText" json:"footer_text,omitempty"`
	ContextInfo *ContextInfo                       `protobuf:"bytes,8,opt,name=context_info,json=contextInfo" json:"context_info,omitempty"`
	Buttons     []*Message_ButtonsMessage_Button   `protobuf:"bytes,9,rep,name=buttons" json:"buttons,omitempty"`
	HeaderType  *Message_ButtonsMessage_HeaderType `protobuf:"varint,10,opt,name=header_type,json=headerType,enum=Message_ButtonsMessage_HeaderType" json:"header_type,omitempty"`
	// Types that are assignable to Header:
	//
	//	*Message_ButtonsMessage_Text
	//	*Message_ButtonsMessage_DocumentMessage
	//	*Message_ButtonsMessage_ImageMessage
	//	*Message_ButtonsMessage_VideoMessage
	//	*Message_ButtonsMessage_LocationMessage
	Header isMessage_ButtonsMessage_Header `protobuf_oneof:"header"`
}

func (x *Message_ButtonsMessage) Reset() {
	*x = Message_ButtonsMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wa_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_ButtonsMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_ButtonsMessage) ProtoMessage() {}

func (x *Message_ButtonsMessage) ProtoReflect() protoreflect.Message {
	mi := &file_wa_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_ButtonsMessage.ProtoReflect.Descriptor instead.
func (*Message_ButtonsMessage) Descriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{10, 8}
}

func (x *Message_ButtonsMessage) GetContentText() string {
	if x != nil && x.ContentText != nil {
		return *x.ContentText
	}
	return ""
}

func (x *Message_ButtonsMessage) GetFooterText() string {
	if x != nil && x.FooterText != nil {
		return *x.FooterText
	}
	return ""
}

func (x *Message_ButtonsMessage) GetContextInfo() *ContextInfo {
	if x != nil {
		return x.ContextInfo
	}
	return nil
}

func (x *Message_ButtonsMessage) GetButtons() []*Message_ButtonsMessage_Button {
	if x != nil {
		return x.Buttons
	}
	return nil
}

func (x *Message_ButtonsMessage) GetHeaderType() Message_ButtonsMessage_HeaderType {
	if x != nil && x.HeaderType != nil {
		return *x.HeaderType
	}
	return Message_ButtonsMessage_UNKNOWN
}

func (m *Message_ButtonsMessage) GetHeader() isMessage_ButtonsMessage_Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (x *Message_ButtonsMessage) GetText() string {
	if x, ok := x.GetHeader().(*Message_ButtonsMessage_Text); ok {
		return x.Text
	}
	return ""
}

func (x *Message_ButtonsMessage) GetDocumentMessage() *Message_DocumentMessage {
	if x, ok := x.GetHeader().(*Message_ButtonsMessage_DocumentMessage); ok {
		return x.DocumentMessage
	}
	return nil
}

func (x *Message_ButtonsMessage) GetImageMessage() *Message_ImageMessage {
	if x, ok := x.GetHeader().(*Message_ButtonsMessage_ImageMessage); ok {
		return x.ImageMessage
	}
	return nil
}

func (x *Message_ButtonsMessage) GetVideoMessage() *Message_VideoMessage {
	if x, ok := x.GetHeader().(*Message_ButtonsMessage_VideoMessage); ok {
		return x.VideoMessage
	}
	return nil
}

func (x *Message_ButtonsMessage) GetLocationMessage() *Message_LocationMessage {
	if x, ok := x.GetHeader().(*Message_ButtonsMessage_LocationMessage); ok {
		return x.LocationMessage
	}
	return nil
}

type isMessage_ButtonsMessage_Header interface {
	isMessage_ButtonsMessage_Header()
}

type Message_ButtonsMessage_Text struct {
	Text string `protobuf:"bytes,1,opt,name=text,oneof"`
}

type Message_ButtonsMessage_DocumentMessage struct {
	DocumentMessage *Message_DocumentMessage `protobuf:"bytes,2,opt,name=document_message,json=documentMessage,oneof"`
}

type Message_ButtonsMessage_ImageMessage struct {
	ImageMessage *Message_ImageMessage `protobuf:"bytes,3,opt,name=image_message,json=imageMessage,oneof"`
}

type Message_ButtonsMessage_VideoMessage struct {
	VideoMessage *Message_VideoMessage `protobuf:"bytes,4,opt,name=video_message,json=videoMessage,oneof"`
}

type Message_ButtonsMessage_LocationMessage struct {
	LocationMessage *Message_LocationMessage `protobuf:"bytes,5,opt,name=location_message,json=locationMessage,oneof"`
}

func (*Message_ButtonsMessage_Text) isMessage_ButtonsMessage_Header() {}

func (*Message_ButtonsMessage_DocumentMessage) isMessage_ButtonsMessage_Header() {}

func (*Message_ButtonsMessage_ImageMessage) isMessage_ButtonsMessage_Header() {}

func (*Message_ButtonsMessage_VideoMessage) isMessage_ButtonsMessage_Header() {}

func (*Message_ButtonsMessage_LocationMessage) isMessage_ButtonsMessage_Header() {}

type Message_ButtonsResponseMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SelectedButtonId *string                              `protobuf:"bytes,1,opt,name=selected_button_id,json=selectedButtonId" json:"selected_button_id,omitempty"`
	ContextInfo      *ContextInfo                         `protobuf:"bytes,3,opt,name=context_info,json=contextInfo" json:"context_info,omitempty"`
	Type             *Message_ButtonsResponseMessage_Type `protobuf:"varint,4,opt,name=type,enum=Message_ButtonsResponseMessage_Type" json:"type,omitempty"`
	// Types that are assignable to Response:
	//
	//	*Message_ButtonsResponseMessage_SelectedDisplayText
	Response isMessage_ButtonsResponseMessage_Response `protobuf_oneof:"response"`
}

func (x *Message_ButtonsResponseMessage) Reset() {
	*x = Message_ButtonsResponseMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wa_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_ButtonsResponseMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_ButtonsResponseMessage) ProtoMessage() {}

func (x *Message_ButtonsResponseMessage) ProtoReflect() protoreflect.Message {
	mi := &file_wa_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_ButtonsResponseMessage.ProtoReflect.Descriptor instead.
func (*Message_ButtonsResponseMessage) Descriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{10, 9}
}

func (x *Message_ButtonsResponseMessage) GetSelectedButtonId() string {
	if x != nil && x.SelectedButtonId != nil {
		return *x.SelectedButtonId
	}
	return ""
}

func (x *Message_ButtonsResponseMessage) GetContextInfo() *ContextInfo {
	if x != nil {
		return x.ContextInfo
	}
	return nil
}

func (x *Message_ButtonsResponseMessage) GetType() Message_ButtonsResponseMessage_Type {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return Message_ButtonsResponseMessage_UNKNOWN
}

func (m *Message_ButtonsResponseMessage) GetResponse() isMessage_ButtonsResponseMessage_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *Message_ButtonsResponseMessage) GetSelectedDisplayText() string {
	if x, ok := x.GetResponse().(*Message_ButtonsResponseMessage_SelectedDisplayText); ok {
		return x.SelectedDisplayText
	}
	return ""
}

type isMessage_ButtonsResponseMessage_Response interface {
	isMessage_ButtonsResponseMessage_Response()
}

type Message_ButtonsResponseMessage_SelectedDisplayText struct {
	SelectedDisplayText string `protobuf:"bytes,2,opt,name=selected_display_text,json=selectedDisplayText,oneof"`
}

func (*Message_ButtonsResponseMessage_SelectedDisplayText) isMessage_ButtonsResponseMessage_Response() {
}

type Message_Call struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CallKey                []byte  `protobuf:"bytes,1,opt,name=call_key,json=callKey" json:"call_key,omitempty"`
	ConversionSource       *string `protobuf:"bytes,2,opt,name=conversion_source,json=conversionSource" json:"conversion_source,omitempty"`
	ConversionData         []byte  `protobuf:"bytes,3,opt,name=conversion_data,json=conversionData" json:"conversion_data,omitempty"`
	ConversionDelaySeconds *uint32 `protobuf:"varint,4,opt,name=conversion_delay_seconds,json=conversionDelaySeconds" json:"conversion_delay_seconds,omitempty"`
}

func (x *Message_Call) Reset() {
	*x = Message_Call{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wa_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_Call) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_Call) ProtoMessage() {}

func (x *Message_Call) ProtoReflect() protoreflect.Message {
	mi := &file_wa_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_Call.ProtoReflect.Descriptor instead.
func (*Message_Call) Descriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{10, 10}
}

func (x *Message_Call) GetCallKey() []byte {
	if x != nil {
		return x.CallKey
	}
	return nil
}

func (x *Message_Call) GetConversionSource() string {
	if x != nil && x.ConversionSource != nil {
		return *x.ConversionSource
	}
	return ""
}

func (x *Message_Call) GetConversionData() []byte {
	if x != nil {
		return x.ConversionData
	}
	return nil
}

func (x *Message_Call) GetConversionDelaySeconds() uint32 {
	if x != nil && x.ConversionDelaySeconds != nil {
		return *x.ConversionDelaySeconds
	}
	return 0
}

type Message_CancelPaymentRequestMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key *MessageKey `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
}

func (x *Message_CancelPaymentRequestMessage) Reset() {
	*x = Message_CancelPaymentRequestMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wa_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_CancelPaymentRequestMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_CancelPaymentRequestMessage) ProtoMessage() {}

func (x *Message_CancelPaymentRequestMessage) ProtoReflect() protoreflect.Message {
	mi := &file_wa_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_CancelPaymentRequestMessage.ProtoReflect.Descriptor instead.
func (*Message_CancelPaymentRequestMessage) Descriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{10, 11}
}

func (x *Message_CancelPaymentRequestMessage) GetKey() *MessageKey {
	if x != nil {
		return x.Key
	}
	return nil
}

type Message_Chat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DisplayName *string `protobuf:"bytes,1,opt,name=display_name,json=displayName" json:"display_name,omitempty"`
	Id          *string `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
}

func (x *Message_Chat) Reset() {
	*x = Message_Chat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wa_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_Chat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_Chat) ProtoMessage() {}

func (x *Message_Chat) ProtoReflect() protoreflect.Message {
	mi := &file_wa_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_Chat.ProtoReflect.Descriptor instead.
func (*Message_Chat) Descriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{10, 12}
}

func (x *Message_Chat) GetDisplayName() string {
	if x != nil && x.DisplayName != nil {
		return *x.DisplayName
	}
	return ""
}

func (x *Message_Chat) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

type Message_ContactMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DisplayName *string      `protobuf:"bytes,1,opt,name=display_name,json=displayName" json:"display_name,omitempty"`
	Vcard       *string      `protobuf:"bytes,16,opt,name=vcard" json:"vcard,omitempty"`
	ContextInfo *ContextInfo `protobuf:"bytes,17,opt,name=context_info,json=contextInfo" json:"context_info,omitempty"`
}

func (x *Message_ContactMessage) Reset() {
	*x = Message_ContactMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wa_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_ContactMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_ContactMessage) ProtoMessage() {}

func (x *Message_ContactMessage) ProtoReflect() protoreflect.Message {
	mi := &file_wa_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_ContactMessage.ProtoReflect.Descriptor instead.
func (*Message_ContactMessage) Descriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{10, 13}
}

func (x *Message_ContactMessage) GetDisplayName() string {
	if x != nil && x.DisplayName != nil {
		return *x.DisplayName
	}
	return ""
}

func (x *Message_ContactMessage) GetVcard() string {
	if x != nil && x.Vcard != nil {
		return *x.Vcard
	}
	return ""
}

func (x *Message_ContactMessage) GetContextInfo() *ContextInfo {
	if x != nil {
		return x.ContextInfo
	}
	return nil
}

type Message_ContactsArrayMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DisplayName *string                   `protobuf:"bytes,1,opt,name=display_name,json=displayName" json:"display_name,omitempty"`
	Contacts    []*Message_ContactMessage `protobuf:"bytes,2,rep,name=contacts" json:"contacts,omitempty"`
	ContextInfo *ContextInfo              `protobuf:"bytes,17,opt,name=context_info,json=contextInfo" json:"context_info,omitempty"`
}

func (x *Message_ContactsArrayMessage) Reset() {
	*x = Message_ContactsArrayMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wa_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_ContactsArrayMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_ContactsArrayMessage) ProtoMessage() {}

func (x *Message_ContactsArrayMessage) ProtoReflect() protoreflect.Message {
	mi := &file_wa_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_ContactsArrayMessage.ProtoReflect.Descriptor instead.
func (*Message_ContactsArrayMessage) Descriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{10, 14}
}

func (x *Message_ContactsArrayMessage) GetDisplayName() string {
	if x != nil && x.DisplayName != nil {
		return *x.DisplayName
	}
	return ""
}

func (x *Message_ContactsArrayMessage) GetContacts() []*Message_ContactMessage {
	if x != nil {
		return x.Contacts
	}
	return nil
}

func (x *Message_ContactsArrayMessage) GetContextInfo() *ContextInfo {
	if x != nil {
		return x.ContextInfo
	}
	return nil
}

type Message_DeclinePaymentRequestMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key *MessageKey `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
}

func (x *Message_DeclinePaymentRequestMessage) Reset() {
	*x = Message_DeclinePaymentRequestMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wa_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_DeclinePaymentRequestMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_DeclinePaymentRequestMessage) ProtoMessage() {}

func (x *Message_DeclinePaymentRequestMessage) ProtoReflect() protoreflect.Message {
	mi := &file_wa_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_DeclinePaymentRequestMessage.ProtoReflect.Descriptor instead.
func (*Message_DeclinePaymentRequestMessage) Descriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{10, 15}
}

func (x *Message_DeclinePaymentRequestMessage) GetKey() *MessageKey {
	if x != nil {
		return x.Key
	}
	return nil
}

type Message_DeviceSentMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DestinationJid *string  `protobuf:"bytes,1,opt,name=destination_jid,json=destinationJid" json:"destination_jid,omitempty"`
	Message        *Message `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Phash          *string  `protobuf:"bytes,3,opt,name=phash" json:"phash,omitempty"`
}

func (x *Message_DeviceSentMessage) Reset() {
	*x = Message_DeviceSentMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wa_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_DeviceSentMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_DeviceSentMessage) ProtoMessage() {}

func (x *Message_DeviceSentMessage) ProtoReflect() protoreflect.Message {
	mi := &file_wa_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_DeviceSentMessage.ProtoReflect.Descriptor instead.
func (*Message_DeviceSentMessage) Descriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{10, 16}
}

func (x *Message_DeviceSentMessage) GetDestinationJid() string {
	if x != nil && x.DestinationJid != nil {
		return *x.DestinationJid
	}
	return ""
}

func (x *Message_DeviceSentMessage) GetMessage() *Message {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *Message_DeviceSentMessage) GetPhash() string {
	if x != nil && x.Phash != nil {
		return *x.Phash
	}
	return ""
}

type Message_DocumentMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url                 *string      `protobuf:"bytes,1,opt,name=url" json:"url,omitempty"`
	Mimetype            *string      `protobuf:"bytes,2,opt,name=mimetype" json:"mimetype,omitempty"`
	Title               *string      `protobuf:"bytes,3,opt,name=title" json:"title,omitempty"`
	FileSha256          []byte       `protobuf:"bytes,4,opt,name=file_sha256,json=fileSha256" json:"file_sha256,omitempty"`
	FileLength          *uint64      `protobuf:"varint,5,opt,name=file_length,json=fileLength" json:"file_length,omitempty"`
	PageCount           *uint32      `protobuf:"varint,6,opt,name=page_count,json=pageCount" json:"page_count,omitempty"`
	MediaKey            []byte       `protobuf:"bytes,7,opt,name=media_key,json=mediaKey" json:"media_key,omitempty"`
	FileName            *string      `protobuf:"bytes,8,opt,name=file_name,json=fileName" json:"file_name,omitempty"`
	FileEncSha256       []byte       `protobuf:"bytes,9,opt,name=file_enc_sha256,json=fileEncSha256" json:"file_enc_sha256,omitempty"`
	DirectPath          *string      `protobuf:"bytes,10,opt,name=direct_path,json=directPath" json:"direct_path,omitempty"`
	MediaKeyTimestamp   *int64       `protobuf:"varint,11,opt,name=media_key_timestamp,json=mediaKeyTimestamp" json:"media_key_timestamp,omitempty"`
	ContactVcard        *bool        `protobuf:"varint,12,opt,name=contact_vcard,json=contactVcard" json:"contact_vcard,omitempty"`
	ThumbnailDirectPath *string      `protobuf:"bytes,13,opt,name=thumbnail_direct_path,json=thumbnailDirectPath" json:"thumbnail_direct_path,omitempty"`
	ThumbnailSha256     []byte       `protobuf:"bytes,14,opt,name=thumbnail_sha256,json=thumbnailSha256" json:"thumbnail_sha256,omitempty"`
	ThumbnailEncSha256  []byte       `protobuf:"bytes,15,opt,name=thumbnail_enc_sha256,json=thumbnailEncSha256" json:"thumbnail_enc_sha256,omitempty"`
	JpegThumbnail       []byte       `protobuf:"bytes,16,opt,name=jpeg_thumbnail,json=jpegThumbnail" json:"jpeg_thumbnail,omitempty"`
	ContextInfo         *ContextInfo `protobuf:"bytes,17,opt,name=context_info,json=contextInfo" json:"context_info,omitempty"`
	ThumbnailHeight     *uint32      `protobuf:"varint,18,opt,name=thumbnail_height,json=thumbnailHeight" json:"thumbnail_height,omitempty"`
	ThumbnailWidth      *uint32      `protobuf:"varint,19,opt,name=thumbnail_width,json=thumbnailWidth" json:"thumbnail_width,omitempty"`
	Caption             *string      `protobuf:"bytes,20,opt,name=caption" json:"caption,omitempty"`
}

func (x *Message_DocumentMessage) Reset() {
	*x = Message_DocumentMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wa_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_DocumentMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_DocumentMessage) ProtoMessage() {}

func (x *Message_DocumentMessage) ProtoReflect() protoreflect.Message {
	mi := &file_wa_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_DocumentMessage.ProtoReflect.Descriptor instead.
func (*Message_DocumentMessage) Descriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{10, 17}
}

func (x *Message_DocumentMessage) GetUrl() string {
	if x != nil && x.Url != nil {
		return *x.Url
	}
	return ""
}

func (x *Message_DocumentMessage) GetMimetype() string {
	if x != nil && x.Mimetype != nil {
		return *x.Mimetype
	}
	return ""
}

func (x *Message_DocumentMessage) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

func (x *Message_DocumentMessage) GetFileSha256() []byte {
	if x != nil {
		return x.FileSha256
	}
	return nil
}

func (x *Message_DocumentMessage) GetFileLength() uint64 {
	if x != nil && x.FileLength != nil {
		return *x.FileLength
	}
	return 0
}

func (x *Message_DocumentMessage) GetPageCount() uint32 {
	if x != nil && x.PageCount != nil {
		return *x.PageCount
	}
	return 0
}

func (x *Message_DocumentMessage) GetMediaKey() []byte {
	if x != nil {
		return x.MediaKey
	}
	return nil
}

func (x *Message_DocumentMessage) GetFileName() string {
	if x != nil && x.FileName != nil {
		return *x.FileName
	}
	return ""
}

func (x *Message_DocumentMessage) GetFileEncSha256() []byte {
	if x != nil {
		return x.FileEncSha256
	}
	return nil
}

func (x *Message_DocumentMessage) GetDirectPath() string {
	if x != nil && x.DirectPath != nil {
		return *x.DirectPath
	}
	return ""
}

func (x *Message_DocumentMessage) GetMediaKeyTimestamp() int64 {
	if x != nil && x.MediaKeyTimestamp != nil {
		return *x.MediaKeyTimestamp
	}
	return 0
}

func (x *Message_DocumentMessage) GetContactVcard() bool {
	if x != nil && x.ContactVcard != nil {
		return *x.ContactVcard
	}
	return false
}

func (x *Message_DocumentMessage) GetThumbnailDirectPath() string {
	if x != nil && x.ThumbnailDirectPath != nil {
		return *x.ThumbnailDirectPath
	}
	return ""
}

func (x *Message_DocumentMessage) GetThumbnailSha256() []byte {
	if x != nil {
		return x.ThumbnailSha256
	}
	return nil
}

func (x *Message_DocumentMessage) GetThumbnailEncSha256() []byte {
	if x != nil {
		return x.ThumbnailEncSha256
	}
	return nil
}

func (x *Message_DocumentMessage) GetJpegThumbnail() []byte {
	if x != nil {
		return x.JpegThumbnail
	}
	return nil
}

func (x *Message_DocumentMessage) GetContextInfo() *ContextInfo {
	if x != nil {
		return x.ContextInfo
	}
	return nil
}

func (x *Message_DocumentMessage) GetThumbnailHeight() uint32 {
	if x != nil && x.ThumbnailHeight != nil {
		return *x.ThumbnailHeight
	}
	return 0
}

func (x *Message_DocumentMessage) GetThumbnailWidth() uint32 {
	if x != nil && x.ThumbnailWidth != nil {
		return *x.ThumbnailWidth
	}
	return 0
}

func (x *Message_DocumentMessage) GetCaption() string {
	if x != nil && x.Caption != nil {
		return *x.Caption
	}
	return ""
}

type Message_EncReactionMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetMessageKey *MessageKey `protobuf:"bytes,1,opt,name=target_message_key,json=targetMessageKey" json:"target_message_key,omitempty"`
	EncPayload       []byte      `protobuf:"bytes,2,opt,name=enc_payload,json=encPayload" json:"enc_payload,omitempty"`
	EncIv            []byte      `protobuf:"bytes,3,opt,name=enc_iv,json=encIv" json:"enc_iv,omitempty"`
}

func (x *Message_EncReactionMessage) Reset() {
	*x = Message_EncReactionMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wa_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_EncReactionMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_EncReactionMessage) ProtoMessage() {}

func (x *Message_EncReactionMessage) ProtoReflect() protoreflect.Message {
	mi := &file_wa_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_EncReactionMessage.ProtoReflect.Descriptor instead.
func (*Message_EncReactionMessage) Descriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{10, 18}
}

func (x *Message_EncReactionMessage) GetTargetMessageKey() *MessageKey {
	if x != nil {
		return x.TargetMessageKey
	}
	return nil
}

func (x *Message_EncReactionMessage) GetEncPayload() []byte {
	if x != nil {
		return x.EncPayload
	}
	return nil
}

func (x *Message_EncReactionMessage) GetEncIv() []byte {
	if x != nil {
		return x.EncIv
	}
	return nil
}

type Message_ExtendedTextMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text                             *string                                          `protobuf:"bytes,1,opt,name=text" json:"text,omitempty"`
	MatchedText                      *string                                          `protobuf:"bytes,2,opt,name=matched_text,json=matchedText" json:"matched_text,omitempty"`
	CanonicalUrl                     *string                                          `protobuf:"bytes,4,opt,name=canonical_url,json=canonicalUrl" json:"canonical_url,omitempty"`
	Description                      *string                                          `protobuf:"bytes,5,opt,name=description" json:"description,omitempty"`
	Title                            *string                                          `protobuf:"bytes,6,opt,name=title" json:"title,omitempty"`
	TextArgb                         *uint32                                          `protobuf:"fixed32,7,opt,name=text_argb,json=textArgb" json:"text_argb,omitempty"`
	BackgroundArgb                   *uint32                                          `protobuf:"fixed32,8,opt,name=background_argb,json=backgroundArgb" json:"background_argb,omitempty"`
	Font                             *Message_ExtendedTextMessage_FontType            `protobuf:"varint,9,opt,name=font,enum=Message_ExtendedTextMessage_FontType" json:"font,omitempty"`
	PreviewType                      *Message_ExtendedTextMessage_PreviewType         `protobuf:"varint,10,opt,name=preview_type,json=previewType,enum=Message_ExtendedTextMessage_PreviewType" json:"preview_type,omitempty"`
	JpegThumbnail                    []byte                                           `protobuf:"bytes,16,opt,name=jpeg_thumbnail,json=jpegThumbnail" json:"jpeg_thumbnail,omitempty"`
	ContextInfo                      *ContextInfo                                     `protobuf:"bytes,17,opt,name=context_info,json=contextInfo" json:"context_info,omitempty"`
	DoNotPlayInline                  *bool                                            `protobuf:"varint,18,opt,name=doNotPlayInline" json:"doNotPlayInline,omitempty"`
	ThumbnailDirectPath              *string                                          `protobuf:"bytes,19,opt,name=thumbnail_direct_path,json=thumbnailDirectPath" json:"thumbnail_direct_path,omitempty"`
	ThumbnailSha256                  []byte                                           `protobuf:"bytes,20,opt,name=thumbnail_sha256,json=thumbnailSha256" json:"thumbnail_sha256,omitempty"`
	ThumbnailEncSha256               []byte                                           `protobuf:"bytes,21,opt,name=thumbnail_enc_sha256,json=thumbnailEncSha256" json:"thumbnail_enc_sha256,omitempty"`
	MediaKey                         []byte                                           `protobuf:"bytes,22,opt,name=media_key,json=mediaKey" json:"media_key,omitempty"`
	MediaKeyTimestamp                *int64                                           `protobuf:"varint,23,opt,name=media_key_timestamp,json=mediaKeyTimestamp" json:"media_key_timestamp,omitempty"`
	ThumbnailHeight                  *uint32                                          `protobuf:"varint,24,opt,name=thumbnail_height,json=thumbnailHeight" json:"thumbnail_height,omitempty"`
	ThumbnailWidth                   *uint32                                          `protobuf:"varint,25,opt,name=thumbnail_width,json=thumbnailWidth" json:"thumbnail_width,omitempty"`
	InviteLinkGroupType              *Message_ExtendedTextMessage_InviteLinkGroupType `protobuf:"varint,26,opt,name=invite_link_group_type,json=inviteLinkGroupType,enum=Message_ExtendedTextMessage_InviteLinkGroupType" json:"invite_link_group_type,omitempty"`
	InviteLinkParentGroupSubjectV2   *string                                          `protobuf:"bytes,27,opt,name=invite_link_parent_group_subject_v2,json=inviteLinkParentGroupSubjectV2" json:"invite_link_parent_group_subject_v2,omitempty"`
	InviteLinkParentGroupThumbnailV2 []byte                                           `protobuf:"bytes,28,opt,name=invite_link_parent_group_thumbnail_v2,json=inviteLinkParentGroupThumbnailV2" json:"invite_link_parent_group_thumbnail_v2,omitempty"`
	InviteLinkGroupTypeV2            *Message_ExtendedTextMessage_InviteLinkGroupType `protobuf:"varint,29,opt,name=invite_link_group_type_v2,json=inviteLinkGroupTypeV2,enum=Message_ExtendedTextMessage_InviteLinkGroupType" json:"invite_link_group_type_v2,omitempty"`
}

func (x *Message_ExtendedTextMessage) Reset() {
	*x = Message_ExtendedTextMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wa_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_ExtendedTextMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_ExtendedTextMessage) ProtoMessage() {}

func (x *Message_ExtendedTextMessage) ProtoReflect() protoreflect.Message {
	mi := &file_wa_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_ExtendedTextMessage.ProtoReflect.Descriptor instead.
func (*Message_ExtendedTextMessage) Descriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{10, 19}
}

func (x *Message_ExtendedTextMessage) GetText() string {
	if x != nil && x.Text != nil {
		return *x.Text
	}
	return ""
}

func (x *Message_ExtendedTextMessage) GetMatchedText() string {
	if x != nil && x.MatchedText != nil {
		return *x.MatchedText
	}
	return ""
}

func (x *Message_ExtendedTextMessage) GetCanonicalUrl() string {
	if x != nil && x.CanonicalUrl != nil {
		return *x.CanonicalUrl
	}
	return ""
}

func (x *Message_ExtendedTextMessage) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *Message_ExtendedTextMessage) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

func (x *Message_ExtendedTextMessage) GetTextArgb() uint32 {
	if x != nil && x.TextArgb != nil {
		return *x.TextArgb
	}
	return 0
}

func (x *Message_ExtendedTextMessage) GetBackgroundArgb() uint32 {
	if x != nil && x.BackgroundArgb != nil {
		return *x.BackgroundArgb
	}
	return 0
}

func (x *Message_ExtendedTextMessage) GetFont() Message_ExtendedTextMessage_FontType {
	if x != nil && x.Font != nil {
		return *x.Font
	}
	return Message_ExtendedTextMessage_SANS_SERIF
}

func (x *Message_ExtendedTextMessage) GetPreviewType() Message_ExtendedTextMessage_PreviewType {
	if x != nil && x.PreviewType != nil {
		return *x.PreviewType
	}
	return Message_ExtendedTextMessage_NONE
}

func (x *Message_ExtendedTextMessage) GetJpegThumbnail() []byte {
	if x != nil {
		return x.JpegThumbnail
	}
	return nil
}

func (x *Message_ExtendedTextMessage) GetContextInfo() *ContextInfo {
	if x != nil {
		return x.ContextInfo
	}
	return nil
}

func (x *Message_ExtendedTextMessage) GetDoNotPlayInline() bool {
	if x != nil && x.DoNotPlayInline != nil {
		return *x.DoNotPlayInline
	}
	return false
}

func (x *Message_ExtendedTextMessage) GetThumbnailDirectPath() string {
	if x != nil && x.ThumbnailDirectPath != nil {
		return *x.ThumbnailDirectPath
	}
	return ""
}

func (x *Message_ExtendedTextMessage) GetThumbnailSha256() []byte {
	if x != nil {
		return x.ThumbnailSha256
	}
	return nil
}

func (x *Message_ExtendedTextMessage) GetThumbnailEncSha256() []byte {
	if x != nil {
		return x.ThumbnailEncSha256
	}
	return nil
}

func (x *Message_ExtendedTextMessage) GetMediaKey() []byte {
	if x != nil {
		return x.MediaKey
	}
	return nil
}

func (x *Message_ExtendedTextMessage) GetMediaKeyTimestamp() int64 {
	if x != nil && x.MediaKeyTimestamp != nil {
		return *x.MediaKeyTimestamp
	}
	return 0
}

func (x *Message_ExtendedTextMessage) GetThumbnailHeight() uint32 {
	if x != nil && x.ThumbnailHeight != nil {
		return *x.ThumbnailHeight
	}
	return 0
}

func (x *Message_ExtendedTextMessage) GetThumbnailWidth() uint32 {
	if x != nil && x.ThumbnailWidth != nil {
		return *x.ThumbnailWidth
	}
	return 0
}

func (x *Message_ExtendedTextMessage) GetInviteLinkGroupType() Message_ExtendedTextMessage_InviteLinkGroupType {
	if x != nil && x.InviteLinkGroupType != nil {
		return *x.InviteLinkGroupType
	}
	return Message_ExtendedTextMessage_DEFAULT
}

func (x *Message_ExtendedTextMessage) GetInviteLinkParentGroupSubjectV2() string {
	if x != nil && x.InviteLinkParentGroupSubjectV2 != nil {
		return *x.InviteLinkParentGroupSubjectV2
	}
	return ""
}

func (x *Message_ExtendedTextMessage) GetInviteLinkParentGroupThumbnailV2() []byte {
	if x != nil {
		return x.InviteLinkParentGroupThumbnailV2
	}
	return nil
}

func (x *Message_ExtendedTextMessage) GetInviteLinkGroupTypeV2() Message_ExtendedTextMessage_InviteLinkGroupType {
	if x != nil && x.InviteLinkGroupTypeV2 != nil {
		return *x.InviteLinkGroupTypeV2
	}
	return Message_ExtendedTextMessage_DEFAULT
}

type Message_FutureProofMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message *Message `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
}

func (x *Message_FutureProofMessage) Reset() {
	*x = Message_FutureProofMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wa_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_FutureProofMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_FutureProofMessage) ProtoMessage() {}

func (x *Message_FutureProofMessage) ProtoReflect() protoreflect.Message {
	mi := &file_wa_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_FutureProofMessage.ProtoReflect.Descriptor instead.
func (*Message_FutureProofMessage) Descriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{10, 20}
}

func (x *Message_FutureProofMessage) GetMessage() *Message {
	if x != nil {
		return x.Message
	}
	return nil
}

type Message_GroupInviteMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupJid         *string                               `protobuf:"bytes,1,opt,name=group_jid,json=groupJid" json:"group_jid,omitempty"`
	InviteCode       *string                               `protobuf:"bytes,2,opt,name=invite_code,json=inviteCode" json:"invite_code,omitempty"`
	InviteExpiration *int64                                `protobuf:"varint,3,opt,name=invite_expiration,json=inviteExpiration" json:"invite_expiration,omitempty"`
	GroupName        *string                               `protobuf:"bytes,4,opt,name=group_name,json=groupName" json:"group_name,omitempty"`
	JpegThumbnail    []byte                                `protobuf:"bytes,5,opt,name=jpeg_thumbnail,json=jpegThumbnail" json:"jpeg_thumbnail,omitempty"`
	Caption          *string                               `protobuf:"bytes,6,opt,name=caption" json:"caption,omitempty"`
	ContextInfo      *ContextInfo                          `protobuf:"bytes,7,opt,name=context_info,json=contextInfo" json:"context_info,omitempty"`
	GroupType        *Message_GroupInviteMessage_GroupType `protobuf:"varint,8,opt,name=group_type,json=groupType,enum=Message_GroupInviteMessage_GroupType" json:"group_type,omitempty"`
}

func (x *Message_GroupInviteMessage) Reset() {
	*x = Message_GroupInviteMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wa_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_GroupInviteMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_GroupInviteMessage) ProtoMessage() {}

func (x *Message_GroupInviteMessage) ProtoReflect() protoreflect.Message {
	mi := &file_wa_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_GroupInviteMessage.ProtoReflect.Descriptor instead.
func (*Message_GroupInviteMessage) Descriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{10, 21}
}

func (x *Message_GroupInviteMessage) GetGroupJid() string {
	if x != nil && x.GroupJid != nil {
		return *x.GroupJid
	}
	return ""
}

func (x *Message_GroupInviteMessage) GetInviteCode() string {
	if x != nil && x.InviteCode != nil {
		return *x.InviteCode
	}
	return ""
}

func (x *Message_GroupInviteMessage) GetInviteExpiration() int64 {
	if x != nil && x.InviteExpiration != nil {
		return *x.InviteExpiration
	}
	return 0
}

func (x *Message_GroupInviteMessage) GetGroupName() string {
	if x != nil && x.GroupName != nil {
		return *x.GroupName
	}
	return ""
}

func (x *Message_GroupInviteMessage) GetJpegThumbnail() []byte {
	if x != nil {
		return x.JpegThumbnail
	}
	return nil
}

func (x *Message_GroupInviteMessage) GetCaption() string {
	if x != nil && x.Caption != nil {
		return *x.Caption
	}
	return ""
}

func (x *Message_GroupInviteMessage) GetContextInfo() *ContextInfo {
	if x != nil {
		return x.ContextInfo
	}
	return nil
}

func (x *Message_GroupInviteMessage) GetGroupType() Message_GroupInviteMessage_GroupType {
	if x != nil && x.GroupType != nil {
		return *x.GroupType
	}
	return Message_GroupInviteMessage_DEFAULT
}

type Message_HighlyStructuredMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace         *string                                                    `protobuf:"bytes,1,opt,name=namespace" json:"namespace,omitempty"`
	ElementName       *string                                                    `protobuf:"bytes,2,opt,name=element_name,json=elementName" json:"element_name,omitempty"`
	Params            []string                                                   `protobuf:"bytes,3,rep,name=params" json:"params,omitempty"`
	FallbackLg        *string                                                    `protobuf:"bytes,4,opt,name=fallback_lg,json=fallbackLg" json:"fallback_lg,omitempty"`
	FallbackLc        *string                                                    `protobuf:"bytes,5,opt,name=fallback_lc,json=fallbackLc" json:"fallback_lc,omitempty"`
	LocalizableParams []*Message_HighlyStructuredMessage_HSMLocalizableParameter `protobuf:"bytes,6,rep,name=localizable_params,json=localizableParams" json:"localizable_params,omitempty"`
	DeterministicLg   *string                                                    `protobuf:"bytes,7,opt,name=deterministic_lg,json=deterministicLg" json:"deterministic_lg,omitempty"`
	DeterministicLc   *string                                                    `protobuf:"bytes,8,opt,name=deterministic_lc,json=deterministicLc" json:"deterministic_lc,omitempty"`
	HydratedHsm       *Message_TemplateMessage                                   `protobuf:"bytes,9,opt,name=hydrated_hsm,json=hydratedHsm" json:"hydrated_hsm,omitempty"`
}

func (x *Message_HighlyStructuredMessage) Reset() {
	*x = Message_HighlyStructuredMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wa_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_HighlyStructuredMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_HighlyStructuredMessage) ProtoMessage() {}

func (x *Message_HighlyStructuredMessage) ProtoReflect() protoreflect.Message {
	mi := &file_wa_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_HighlyStructuredMessage.ProtoReflect.Descriptor instead.
func (*Message_HighlyStructuredMessage) Descriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{10, 22}
}

func (x *Message_HighlyStructuredMessage) GetNamespace() string {
	if x != nil && x.Namespace != nil {
		return *x.Namespace
	}
	return ""
}

func (x *Message_HighlyStructuredMessage) GetElementName() string {
	if x != nil && x.ElementName != nil {
		return *x.ElementName
	}
	return ""
}

func (x *Message_HighlyStructuredMessage) GetParams() []string {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *Message_HighlyStructuredMessage) GetFallbackLg() string {
	if x != nil && x.FallbackLg != nil {
		return *x.FallbackLg
	}
	return ""
}

func (x *Message_HighlyStructuredMessage) GetFallbackLc() string {
	if x != nil && x.FallbackLc != nil {
		return *x.FallbackLc
	}
	return ""
}

func (x *Message_HighlyStructuredMessage) GetLocalizableParams() []*Message_HighlyStructuredMessage_HSMLocalizableParameter {
	if x != nil {
		return x.LocalizableParams
	}
	return nil
}

func (x *Message_HighlyStructuredMessage) GetDeterministicLg() string {
	if x != nil && x.DeterministicLg != nil {
		return *x.DeterministicLg
	}
	return ""
}

func (x *Message_HighlyStructuredMessage) GetDeterministicLc() string {
	if x != nil && x.DeterministicLc != nil {
		return *x.DeterministicLc
	}
	return ""
}

func (x *Message_HighlyStructuredMessage) GetHydratedHsm() *Message_TemplateMessage {
	if x != nil {
		return x.HydratedHsm
	}
	return nil
}

type Message_HistorySyncNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileSha256                   []byte                                           `protobuf:"bytes,1,opt,name=file_sha256,json=fileSha256" json:"file_sha256,omitempty"`
	FileLength                   *uint64                                          `protobuf:"varint,2,opt,name=file_length,json=fileLength" json:"file_length,omitempty"`
	MediaKey                     []byte                                           `protobuf:"bytes,3,opt,name=media_key,json=mediaKey" json:"media_key,omitempty"`
	FileEncSha256                []byte                                           `protobuf:"bytes,4,opt,name=file_enc_sha256,json=fileEncSha256" json:"file_enc_sha256,omitempty"`
	DirectPath                   *string                                          `protobuf:"bytes,5,opt,name=direct_path,json=directPath" json:"direct_path,omitempty"`
	SyncType                     *Message_HistorySyncNotification_HistorySyncType `protobuf:"varint,6,opt,name=sync_type,json=syncType,enum=Message_HistorySyncNotification_HistorySyncType" json:"sync_type,omitempty"`
	ChunkOrder                   *uint32                                          `protobuf:"varint,7,opt,name=chunk_order,json=chunkOrder" json:"chunk_order,omitempty"`
	OriginalMessageId            *string                                          `protobuf:"bytes,8,opt,name=original_message_id,json=originalMessageId" json:"original_message_id,omitempty"`
	Progress                     *uint32                                          `protobuf:"varint,9,opt,name=progress" json:"progress,omitempty"`
	OldestMsgInChunkTimestampSec *int64                                           `protobuf:"varint,10,opt,name=oldest_msg_in_chunk_timestamp_sec,json=oldestMsgInChunkTimestampSec" json:"oldest_msg_in_chunk_timestamp_sec,omitempty"`
}

func (x *Message_HistorySyncNotification) Reset() {
	*x = Message_HistorySyncNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wa_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_HistorySyncNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_HistorySyncNotification) ProtoMessage() {}

func (x *Message_HistorySyncNotification) ProtoReflect() protoreflect.Message {
	mi := &file_wa_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_HistorySyncNotification.ProtoReflect.Descriptor instead.
func (*Message_HistorySyncNotification) Descriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{10, 23}
}

func (x *Message_HistorySyncNotification) GetFileSha256() []byte {
	if x != nil {
		return x.FileSha256
	}
	return nil
}

func (x *Message_HistorySyncNotification) GetFileLength() uint64 {
	if x != nil && x.FileLength != nil {
		return *x.FileLength
	}
	return 0
}

func (x *Message_HistorySyncNotification) GetMediaKey() []byte {
	if x != nil {
		return x.MediaKey
	}
	return nil
}

func (x *Message_HistorySyncNotification) GetFileEncSha256() []byte {
	if x != nil {
		return x.FileEncSha256
	}
	return nil
}

func (x *Message_HistorySyncNotification) GetDirectPath() string {
	if x != nil && x.DirectPath != nil {
		return *x.DirectPath
	}
	return ""
}

func (x *Message_HistorySyncNotification) GetSyncType() Message_HistorySyncNotification_HistorySyncType {
	if x != nil && x.SyncType != nil {
		return *x.SyncType
	}
	return Message_HistorySyncNotification_INITIAL_BOOTSTRAP
}

func (x *Message_HistorySyncNotification) GetChunkOrder() uint32 {
	if x != nil && x.ChunkOrder != nil {
		return *x.ChunkOrder
	}
	return 0
}

func (x *Message_HistorySyncNotification) GetOriginalMessageId() string {
	if x != nil && x.OriginalMessageId != nil {
		return *x.OriginalMessageId
	}
	return ""
}

func (x *Message_HistorySyncNotification) GetProgress() uint32 {
	if x != nil && x.Progress != nil {
		return *x.Progress
	}
	return 0
}

func (x *Message_HistorySyncNotification) GetOldestMsgInChunkTimestampSec() int64 {
	if x != nil && x.OldestMsgInChunkTimestampSec != nil {
		return *x.OldestMsgInChunkTimestampSec
	}
	return 0
}

type Message_ImageMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url                     *string                  `protobuf:"bytes,1,opt,name=url" json:"url,omitempty"`
	Mimetype                *string                  `protobuf:"bytes,2,opt,name=mimetype" json:"mimetype,omitempty"`
	Caption                 *string                  `protobuf:"bytes,3,opt,name=caption" json:"caption,omitempty"`
	FileSha256              []byte                   `protobuf:"bytes,4,opt,name=file_sha256,json=fileSha256" json:"file_sha256,omitempty"`
	FileLength              *uint64                  `protobuf:"varint,5,opt,name=file_length,json=fileLength" json:"file_length,omitempty"`
	Height                  *uint32                  `protobuf:"varint,6,opt,name=height" json:"height,omitempty"`
	Width                   *uint32                  `protobuf:"varint,7,opt,name=width" json:"width,omitempty"`
	MediaKey                []byte                   `protobuf:"bytes,8,opt,name=media_key,json=mediaKey" json:"media_key,omitempty"`
	FileEncSha256           []byte                   `protobuf:"bytes,9,opt,name=file_enc_sha256,json=fileEncSha256" json:"file_enc_sha256,omitempty"`
	InteractiveAnnotations  []*InteractiveAnnotation `protobuf:"bytes,10,rep,name=interactive_annotations,json=interactiveAnnotations" json:"interactive_annotations,omitempty"`
	DirectPath              *string                  `protobuf:"bytes,11,opt,name=direct_path,json=directPath" json:"direct_path,omitempty"`
	MediaKeyTimestamp       *int64                   `protobuf:"varint,12,opt,name=media_key_timestamp,json=mediaKeyTimestamp" json:"media_key_timestamp,omitempty"`
	JpegThumbnail           []byte                   `protobuf:"bytes,16,opt,name=jpeg_thumbnail,json=jpegThumbnail" json:"jpeg_thumbnail,omitempty"`
	ContextInfo             *ContextInfo             `protobuf:"bytes,17,opt,name=context_info,json=contextInfo" json:"context_info,omitempty"`
	FirstScanSidecar        []byte                   `protobuf:"bytes,18,opt,name=first_scan_sidecar,json=firstScanSidecar" json:"first_scan_sidecar,omitempty"`
	FirstScanLength         *uint32                  `protobuf:"varint,19,opt,name=first_scan_length,json=firstScanLength" json:"first_scan_length,omitempty"`
	ExperimentGroupId       *uint32                  `protobuf:"varint,20,opt,name=experiment_group_id,json=experimentGroupId" json:"experiment_group_id,omitempty"`
	ScansSidecar            []byte                   `protobuf:"bytes,21,opt,name=scans_sidecar,json=scansSidecar" json:"scans_sidecar,omitempty"`
	ScanLengths             []uint32                 `protobuf:"varint,22,rep,name=scan_lengths,json=scanLengths" json:"scan_lengths,omitempty"`
	MidQualityFileSha256    []byte                   `protobuf:"bytes,23,opt,name=mid_quality_file_sha256,json=midQualityFileSha256" json:"mid_quality_file_sha256,omitempty"`
	MidQualityFileEncSha256 []byte                   `protobuf:"bytes,24,opt,name=mid_quality_file_enc_sha256,json=midQualityFileEncSha256" json:"mid_quality_file_enc_sha256,omitempty"`
	ViewOnce                *bool                    `protobuf:"varint,25,opt,name=view_once,json=viewOnce" json:"view_once,omitempty"`
	ThumbnailDirectPath     *string                  `protobuf:"bytes,26,opt,name=thumbnail_direct_path,json=thumbnailDirectPath" json:"thumbnail_direct_path,omitempty"`
	ThumbnailSha256         []byte                   `protobuf:"bytes,27,opt,name=thumbnail_sha256,json=thumbnailSha256" json:"thumbnail_sha256,omitempty"`
	ThumbnailEncSha256      []byte                   `protobuf:"bytes,28,opt,name=thumbnail_enc_sha256,json=thumbnailEncSha256" json:"thumbnail_enc_sha256,omitempty"`
	StaticUrl               *string                  `protobuf:"bytes,29,opt,name=static_url,json=staticUrl" json:"static_url,omitempty"`
}

func (x *Message_ImageMessage) Reset() {
	*x = Message_ImageMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wa_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_ImageMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_ImageMessage) ProtoMessage() {}

func (x *Message_ImageMessage) ProtoReflect() protoreflect.Message {
	mi := &file_wa_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_ImageMessage.ProtoReflect.Descriptor instead.
func (*Message_ImageMessage) Descriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{10, 24}
}

func (x *Message_ImageMessage) GetUrl() string {
	if x != nil && x.Url != nil {
		return *x.Url
	}
	return ""
}

func (x *Message_ImageMessage) GetMimetype() string {
	if x != nil && x.Mimetype != nil {
		return *x.Mimetype
	}
	return ""
}

func (x *Message_ImageMessage) GetCaption() string {
	if x != nil && x.Caption != nil {
		return *x.Caption
	}
	return ""
}

func (x *Message_ImageMessage) GetFileSha256() []byte {
	if x != nil {
		return x.FileSha256
	}
	return nil
}

func (x *Message_ImageMessage) GetFileLength() uint64 {
	if x != nil && x.FileLength != nil {
		return *x.FileLength
	}
	return 0
}

func (x *Message_ImageMessage) GetHeight() uint32 {
	if x != nil && x.Height != nil {
		return *x.Height
	}
	return 0
}

func (x *Message_ImageMessage) GetWidth() uint32 {
	if x != nil && x.Width != nil {
		return *x.Width
	}
	return 0
}

func (x *Message_ImageMessage) GetMediaKey() []byte {
	if x != nil {
		return x.MediaKey
	}
	return nil
}

func (x *Message_ImageMessage) GetFileEncSha256() []byte {
	if x != nil {
		return x.FileEncSha256
	}
	return nil
}

func (x *Message_ImageMessage) GetInteractiveAnnotations() []*InteractiveAnnotation {
	if x != nil {
		return x.InteractiveAnnotations
	}
	return nil
}

func (x *Message_ImageMessage) GetDirectPath() string {
	if x != nil && x.DirectPath != nil {
		return *x.DirectPath
	}
	return ""
}

func (x *Message_ImageMessage) GetMediaKeyTimestamp() int64 {
	if x != nil && x.MediaKeyTimestamp != nil {
		return *x.MediaKeyTimestamp
	}
	return 0
}

func (x *Message_ImageMessage) GetJpegThumbnail() []byte {
	if x != nil {
		return x.JpegThumbnail
	}
	return nil
}

func (x *Message_ImageMessage) GetContextInfo() *ContextInfo {
	if x != nil {
		return x.ContextInfo
	}
	return nil
}

func (x *Message_ImageMessage) GetFirstScanSidecar() []byte {
	if x != nil {
		return x.FirstScanSidecar
	}
	return nil
}

func (x *Message_ImageMessage) GetFirstScanLength() uint32 {
	if x != nil && x.FirstScanLength != nil {
		return *x.FirstScanLength
	}
	return 0
}

func (x *Message_ImageMessage) GetExperimentGroupId() uint32 {
	if x != nil && x.ExperimentGroupId != nil {
		return *x.ExperimentGroupId
	}
	return 0
}

func (x *Message_ImageMessage) GetScansSidecar() []byte {
	if x != nil {
		return x.ScansSidecar
	}
	return nil
}

func (x *Message_ImageMessage) GetScanLengths() []uint32 {
	if x != nil {
		return x.ScanLengths
	}
	return nil
}

func (x *Message_ImageMessage) GetMidQualityFileSha256() []byte {
	if x != nil {
		return x.MidQualityFileSha256
	}
	return nil
}

func (x *Message_ImageMessage) GetMidQualityFileEncSha256() []byte {
	if x != nil {
		return x.MidQualityFileEncSha256
	}
	return nil
}

func (x *Message_ImageMessage) GetViewOnce() bool {
	if x != nil && x.ViewOnce != nil {
		return *x.ViewOnce
	}
	return false
}

func (x *Message_ImageMessage) GetThumbnailDirectPath() string {
	if x != nil && x.ThumbnailDirectPath != nil {
		return *x.ThumbnailDirectPath
	}
	return ""
}

func (x *Message_ImageMessage) GetThumbnailSha256() []byte {
	if x != nil {
		return x.ThumbnailSha256
	}
	return nil
}

func (x *Message_ImageMessage) GetThumbnailEncSha256() []byte {
	if x != nil {
		return x.ThumbnailEncSha256
	}
	return nil
}

func (x *Message_ImageMessage) GetStaticUrl() string {
	if x != nil && x.StaticUrl != nil {
		return *x.StaticUrl
	}
	return ""
}

type Message_InitialSecurityNotificationSettingSync struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SecurityNotificationEnabled *bool `protobuf:"varint,1,opt,name=security_notification_enabled,json=securityNotificationEnabled" json:"security_notification_enabled,omitempty"`
}

func (x *Message_InitialSecurityNotificationSettingSync) Reset() {
	*x = Message_InitialSecurityNotificationSettingSync{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wa_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_InitialSecurityNotificationSettingSync) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_InitialSecurityNotificationSettingSync) ProtoMessage() {}

func (x *Message_InitialSecurityNotificationSettingSync) ProtoReflect() protoreflect.Message {
	mi := &file_wa_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_InitialSecurityNotificationSettingSync.ProtoReflect.Descriptor instead.
func (*Message_InitialSecurityNotificationSettingSync) Descriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{10, 25}
}

func (x *Message_InitialSecurityNotificationSettingSync) GetSecurityNotificationEnabled() bool {
	if x != nil && x.SecurityNotificationEnabled != nil {
		return *x.SecurityNotificationEnabled
	}
	return false
}

type Message_InteractiveMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header      *Message_InteractiveMessage_Header `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Body        *Message_InteractiveMessage_Body   `protobuf:"bytes,2,opt,name=body" json:"body,omitempty"`
	Footer      *Message_InteractiveMessage_Footer `protobuf:"bytes,3,opt,name=footer" json:"footer,omitempty"`
	ContextInfo *ContextInfo                       `protobuf:"bytes,15,opt,name=context_info,json=contextInfo" json:"context_info,omitempty"`
	// Types that are assignable to InteractiveMessage:
	//
	//	*Message_InteractiveMessage_ShopStorefrontMessage
	//	*Message_InteractiveMessage_CollectionMessage_
	//	*Message_InteractiveMessage_NativeFlowMessage_
	InteractiveMessage isMessage_InteractiveMessage_InteractiveMessage `protobuf_oneof:"interactive_message"`
}

func (x *Message_InteractiveMessage) Reset() {
	*x = Message_InteractiveMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wa_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_InteractiveMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_InteractiveMessage) ProtoMessage() {}

func (x *Message_InteractiveMessage) ProtoReflect() protoreflect.Message {
	mi := &file_wa_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_InteractiveMessage.ProtoReflect.Descriptor instead.
func (*Message_InteractiveMessage) Descriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{10, 26}
}

func (x *Message_InteractiveMessage) GetHeader() *Message_InteractiveMessage_Header {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *Message_InteractiveMessage) GetBody() *Message_InteractiveMessage_Body {
	if x != nil {
		return x.Body
	}
	return nil
}

func (x *Message_InteractiveMessage) GetFooter() *Message_InteractiveMessage_Footer {
	if x != nil {
		return x.Footer
	}
	return nil
}

func (x *Message_InteractiveMessage) GetContextInfo() *ContextInfo {
	if x != nil {
		return x.ContextInfo
	}
	return nil
}

func (m *Message_InteractiveMessage) GetInteractiveMessage() isMessage_InteractiveMessage_InteractiveMessage {
	if m != nil {
		return m.InteractiveMessage
	}
	return nil
}

func (x *Message_InteractiveMessage) GetShopStorefrontMessage() *Message_InteractiveMessage_ShopMessage {
	if x, ok := x.GetInteractiveMessage().(*Message_InteractiveMessage_ShopStorefrontMessage); ok {
		return x.ShopStorefrontMessage
	}
	return nil
}

func (x *Message_InteractiveMessage) GetCollectionMessage() *Message_InteractiveMessage_CollectionMessage {
	if x, ok := x.GetInteractiveMessage().(*Message_InteractiveMessage_CollectionMessage_); ok {
		return x.CollectionMessage
	}
	return nil
}

func (x *Message_InteractiveMessage) GetNativeFlowMessage() *Message_InteractiveMessage_NativeFlowMessage {
	if x, ok := x.GetInteractiveMessage().(*Message_InteractiveMessage_NativeFlowMessage_); ok {
		return x.NativeFlowMessage
	}
	return nil
}

type isMessage_InteractiveMessage_InteractiveMessage interface {
	isMessage_InteractiveMessage_InteractiveMessage()
}

type Message_InteractiveMessage_ShopStorefrontMessage struct {
	ShopStorefrontMessage *Message_InteractiveMessage_ShopMessage `protobuf:"bytes,4,opt,name=shop_storefront_message,json=shopStorefrontMessage,oneof"`
}

type Message_InteractiveMessage_CollectionMessage_ struct {
	CollectionMessage *Message_InteractiveMessage_CollectionMessage `protobuf:"bytes,5,opt,name=collection_message,json=collectionMessage,oneof"`
}

type Message_InteractiveMessage_NativeFlowMessage_ struct {
	NativeFlowMessage *Message_InteractiveMessage_NativeFlowMessage `protobuf:"bytes,6,opt,name=native_flow_message,json=nativeFlowMessage,oneof"`
}

func (*Message_InteractiveMessage_ShopStorefrontMessage) isMessage_InteractiveMessage_InteractiveMessage() {
}

func (*Message_InteractiveMessage_CollectionMessage_) isMessage_InteractiveMessage_InteractiveMessage() {
}

func (*Message_InteractiveMessage_NativeFlowMessage_) isMessage_InteractiveMessage_InteractiveMessage() {
}

type Message_InteractiveResponseMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Body        *Message_InteractiveResponseMessage_Body `protobuf:"bytes,1,opt,name=body" json:"body,omitempty"`
	ContextInfo *ContextInfo                             `protobuf:"bytes,15,opt,name=context_info,json=contextInfo" json:"context_info,omitempty"`
	// Types that are assignable to InteractiveResponseMessage:
	//
	//	*Message_InteractiveResponseMessage_NativeFlowResponseMessage_
	InteractiveResponseMessage isMessage_InteractiveResponseMessage_InteractiveResponseMessage `protobuf_oneof:"interactive_response_message"`
}

func (x *Message_InteractiveResponseMessage) Reset() {
	*x = Message_InteractiveResponseMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wa_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_InteractiveResponseMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_InteractiveResponseMessage) ProtoMessage() {}

func (x *Message_InteractiveResponseMessage) ProtoReflect() protoreflect.Message {
	mi := &file_wa_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_InteractiveResponseMessage.ProtoReflect.Descriptor instead.
func (*Message_InteractiveResponseMessage) Descriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{10, 27}
}

func (x *Message_InteractiveResponseMessage) GetBody() *Message_InteractiveResponseMessage_Body {
	if x != nil {
		return x.Body
	}
	return nil
}

func (x *Message_InteractiveResponseMessage) GetContextInfo() *ContextInfo {
	if x != nil {
		return x.ContextInfo
	}
	return nil
}

func (m *Message_InteractiveResponseMessage) GetInteractiveResponseMessage() isMessage_InteractiveResponseMessage_InteractiveResponseMessage {
	if m != nil {
		return m.InteractiveResponseMessage
	}
	return nil
}

func (x *Message_InteractiveResponseMessage) GetNativeFlowResponseMessage() *Message_InteractiveResponseMessage_NativeFlowResponseMessage {
	if x, ok := x.GetInteractiveResponseMessage().(*Message_InteractiveResponseMessage_NativeFlowResponseMessage_); ok {
		return x.NativeFlowResponseMessage
	}
	return nil
}

type isMessage_InteractiveResponseMessage_InteractiveResponseMessage interface {
	isMessage_InteractiveResponseMessage_InteractiveResponseMessage()
}

type Message_InteractiveResponseMessage_NativeFlowResponseMessage_ struct {
	NativeFlowResponseMessage *Message_InteractiveResponseMessage_NativeFlowResponseMessage `protobuf:"bytes,2,opt,name=native_flow_response_message,json=nativeFlowResponseMessage,oneof"`
}

func (*Message_InteractiveResponseMessage_NativeFlowResponseMessage_) isMessage_InteractiveResponseMessage_InteractiveResponseMessage() {
}

type Message_KeepInChatMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key         *MessageKey     `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	KeepType    *KeepInChatType `protobuf:"varint,2,opt,name=keep_type,json=keepType,enum=KeepInChatType" json:"keep_type,omitempty"`
	TimestampMs *int64          `protobuf:"varint,3,opt,name=timestamp_ms,json=timestampMs" json:"timestamp_ms,omitempty"`
}

func (x *Message_KeepInChatMessage) Reset() {
	*x = Message_KeepInChatMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wa_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_KeepInChatMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_KeepInChatMessage) ProtoMessage() {}

func (x *Message_KeepInChatMessage) ProtoReflect() protoreflect.Message {
	mi := &file_wa_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_KeepInChatMessage.ProtoReflect.Descriptor instead.
func (*Message_KeepInChatMessage) Descriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{10, 28}
}

func (x *Message_KeepInChatMessage) GetKey() *MessageKey {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *Message_KeepInChatMessage) GetKeepType() KeepInChatType {
	if x != nil && x.KeepType != nil {
		return *x.KeepType
	}
	return KeepInChatType_KeepInChatType_UNKNOWN
}

func (x *Message_KeepInChatMessage) GetTimestampMs() int64 {
	if x != nil && x.TimestampMs != nil {
		return *x.TimestampMs
	}
	return 0
}

type Message_ListMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title           *string                              `protobuf:"bytes,1,opt,name=title" json:"title,omitempty"`
	Description     *string                              `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	ButtonText      *string                              `protobuf:"bytes,3,opt,name=button_text,json=buttonText" json:"button_text,omitempty"`
	ListType        *Message_ListMessage_ListType        `protobuf:"varint,4,opt,name=list_type,json=listType,enum=Message_ListMessage_ListType" json:"list_type,omitempty"`
	Sections        []*Message_ListMessage_Section       `protobuf:"bytes,5,rep,name=sections" json:"sections,omitempty"`
	ProductListInfo *Message_ListMessage_ProductListInfo `protobuf:"bytes,6,opt,name=product_list_info,json=productListInfo" json:"product_list_info,omitempty"`
	FooterText      *string                              `protobuf:"bytes,7,opt,name=footer_text,json=footerText" json:"footer_text,omitempty"`
	ContextInfo     *ContextInfo                         `protobuf:"bytes,8,opt,name=context_info,json=contextInfo" json:"context_info,omitempty"`
}

func (x *Message_ListMessage) Reset() {
	*x = Message_ListMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wa_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_ListMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_ListMessage) ProtoMessage() {}

func (x *Message_ListMessage) ProtoReflect() protoreflect.Message {
	mi := &file_wa_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_ListMessage.ProtoReflect.Descriptor instead.
func (*Message_ListMessage) Descriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{10, 29}
}

func (x *Message_ListMessage) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

func (x *Message_ListMessage) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *Message_ListMessage) GetButtonText() string {
	if x != nil && x.ButtonText != nil {
		return *x.ButtonText
	}
	return ""
}

func (x *Message_ListMessage) GetListType() Message_ListMessage_ListType {
	if x != nil && x.ListType != nil {
		return *x.ListType
	}
	return Message_ListMessage_UNKNOWN
}

func (x *Message_ListMessage) GetSections() []*Message_ListMessage_Section {
	if x != nil {
		return x.Sections
	}
	return nil
}

func (x *Message_ListMessage) GetProductListInfo() *Message_ListMessage_ProductListInfo {
	if x != nil {
		return x.ProductListInfo
	}
	return nil
}

func (x *Message_ListMessage) GetFooterText() string {
	if x != nil && x.FooterText != nil {
		return *x.FooterText
	}
	return ""
}

func (x *Message_ListMessage) GetContextInfo() *ContextInfo {
	if x != nil {
		return x.ContextInfo
	}
	return nil
}

type Message_ListResponseMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title             *string                                        `protobuf:"bytes,1,opt,name=title" json:"title,omitempty"`
	ListType          *Message_ListResponseMessage_ListType          `protobuf:"varint,2,opt,name=list_type,json=listType,enum=Message_ListResponseMessage_ListType" json:"list_type,omitempty"`
	SingleSelectReply *Message_ListResponseMessage_SingleSelectReply `protobuf:"bytes,3,opt,name=single_select_reply,json=singleSelectReply" json:"single_select_reply,omitempty"`
	ContextInfo       *ContextInfo                                   `protobuf:"bytes,4,opt,name=context_info,json=contextInfo" json:"context_info,omitempty"`
	Description       *string                                        `protobuf:"bytes,5,opt,name=description" json:"description,omitempty"`
}

func (x *Message_ListResponseMessage) Reset() {
	*x = Message_ListResponseMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wa_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_ListResponseMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_ListResponseMessage) ProtoMessage() {}

func (x *Message_ListResponseMessage) ProtoReflect() protoreflect.Message {
	mi := &file_wa_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_ListResponseMessage.ProtoReflect.Descriptor instead.
func (*Message_ListResponseMessage) Descriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{10, 30}
}

func (x *Message_ListResponseMessage) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

func (x *Message_ListResponseMessage) GetListType() Message_ListResponseMessage_ListType {
	if x != nil && x.ListType != nil {
		return *x.ListType
	}
	return Message_ListResponseMessage_UNKNOWN
}

func (x *Message_ListResponseMessage) GetSingleSelectReply() *Message_ListResponseMessage_SingleSelectReply {
	if x != nil {
		return x.SingleSelectReply
	}
	return nil
}

func (x *Message_ListResponseMessage) GetContextInfo() *ContextInfo {
	if x != nil {
		return x.ContextInfo
	}
	return nil
}

func (x *Message_ListResponseMessage) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

type Message_LiveLocationMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DegreesLatitude                   *float64     `protobuf:"fixed64,1,opt,name=degrees_latitude,json=degreesLatitude" json:"degrees_latitude,omitempty"`
	DegreesLongitude                  *float64     `protobuf:"fixed64,2,opt,name=degrees_longitude,json=degreesLongitude" json:"degrees_longitude,omitempty"`
	AccuracyInMeters                  *uint32      `protobuf:"varint,3,opt,name=accuracy_in_meters,json=accuracyInMeters" json:"accuracy_in_meters,omitempty"`
	SpeedInMps                        *float32     `protobuf:"fixed32,4,opt,name=speed_in_mps,json=speedInMps" json:"speed_in_mps,omitempty"`
	DegreesClockwiseFromMagneticNorth *uint32      `protobuf:"varint,5,opt,name=degrees_clockwise_from_magnetic_north,json=degreesClockwiseFromMagneticNorth" json:"degrees_clockwise_from_magnetic_north,omitempty"`
	Caption                           *string      `protobuf:"bytes,6,opt,name=caption" json:"caption,omitempty"`
	SequenceNumber                    *int64       `protobuf:"varint,7,opt,name=sequence_number,json=sequenceNumber" json:"sequence_number,omitempty"`
	TimeOffset                        *uint32      `protobuf:"varint,8,opt,name=time_offset,json=timeOffset" json:"time_offset,omitempty"`
	JpegThumbnail                     []byte       `protobuf:"bytes,16,opt,name=jpeg_thumbnail,json=jpegThumbnail" json:"jpeg_thumbnail,omitempty"`
	ContextInfo                       *ContextInfo `protobuf:"bytes,17,opt,name=context_info,json=contextInfo" json:"context_info,omitempty"`
}

func (x *Message_LiveLocationMessage) Reset() {
	*x = Message_LiveLocationMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wa_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_LiveLocationMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_LiveLocationMessage) ProtoMessage() {}

func (x *Message_LiveLocationMessage) ProtoReflect() protoreflect.Message {
	mi := &file_wa_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_LiveLocationMessage.ProtoReflect.Descriptor instead.
func (*Message_LiveLocationMessage) Descriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{10, 31}
}

func (x *Message_LiveLocationMessage) GetDegreesLatitude() float64 {
	if x != nil && x.DegreesLatitude != nil {
		return *x.DegreesLatitude
	}
	return 0
}

func (x *Message_LiveLocationMessage) GetDegreesLongitude() float64 {
	if x != nil && x.DegreesLongitude != nil {
		return *x.DegreesLongitude
	}
	return 0
}

func (x *Message_LiveLocationMessage) GetAccuracyInMeters() uint32 {
	if x != nil && x.AccuracyInMeters != nil {
		return *x.AccuracyInMeters
	}
	return 0
}

func (x *Message_LiveLocationMessage) GetSpeedInMps() float32 {
	if x != nil && x.SpeedInMps != nil {
		return *x.SpeedInMps
	}
	return 0
}

func (x *Message_LiveLocationMessage) GetDegreesClockwiseFromMagneticNorth() uint32 {
	if x != nil && x.DegreesClockwiseFromMagneticNorth != nil {
		return *x.DegreesClockwiseFromMagneticNorth
	}
	return 0
}

func (x *Message_LiveLocationMessage) GetCaption() string {
	if x != nil && x.Caption != nil {
		return *x.Caption
	}
	return ""
}

func (x *Message_LiveLocationMessage) GetSequenceNumber() int64 {
	if x != nil && x.SequenceNumber != nil {
		return *x.SequenceNumber
	}
	return 0
}

func (x *Message_LiveLocationMessage) GetTimeOffset() uint32 {
	if x != nil && x.TimeOffset != nil {
		return *x.TimeOffset
	}
	return 0
}

func (x *Message_LiveLocationMessage) GetJpegThumbnail() []byte {
	if x != nil {
		return x.JpegThumbnail
	}
	return nil
}

func (x *Message_LiveLocationMessage) GetContextInfo() *ContextInfo {
	if x != nil {
		return x.ContextInfo
	}
	return nil
}

type Message_LocationMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DegreesLatitude                   *float64     `protobuf:"fixed64,1,opt,name=degrees_latitude,json=degreesLatitude" json:"degrees_latitude,omitempty"`
	DegreesLongitude                  *float64     `protobuf:"fixed64,2,opt,name=degrees_longitude,json=degreesLongitude" json:"degrees_longitude,omitempty"`
	Name                              *string      `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	Address                           *string      `protobuf:"bytes,4,opt,name=address" json:"address,omitempty"`
	Url                               *string      `protobuf:"bytes,5,opt,name=url" json:"url,omitempty"`
	IsLive                            *bool        `protobuf:"varint,6,opt,name=is_live,json=isLive" json:"is_live,omitempty"`
	AccuracyInMeters                  *uint32      `protobuf:"varint,7,opt,name=accuracy_in_meters,json=accuracyInMeters" json:"accuracy_in_meters,omitempty"`
	SpeedInMps                        *float32     `protobuf:"fixed32,8,opt,name=speed_in_mps,json=speedInMps" json:"speed_in_mps,omitempty"`
	DegreesClockwiseFromMagneticNorth *uint32      `protobuf:"varint,9,opt,name=degrees_clockwise_from_magnetic_north,json=degreesClockwiseFromMagneticNorth" json:"degrees_clockwise_from_magnetic_north,omitempty"`
	Comment                           *string      `protobuf:"bytes,11,opt,name=comment" json:"comment,omitempty"`
	JpegThumbnail                     []byte       `protobuf:"bytes,16,opt,name=jpeg_thumbnail,json=jpegThumbnail" json:"jpeg_thumbnail,omitempty"`
	ContextInfo                       *ContextInfo `protobuf:"bytes,17,opt,name=context_info,json=contextInfo" json:"context_info,omitempty"`
}

func (x *Message_LocationMessage) Reset() {
	*x = Message_LocationMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wa_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_LocationMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_LocationMessage) ProtoMessage() {}

func (x *Message_LocationMessage) ProtoReflect() protoreflect.Message {
	mi := &file_wa_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_LocationMessage.ProtoReflect.Descriptor instead.
func (*Message_LocationMessage) Descriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{10, 32}
}

func (x *Message_LocationMessage) GetDegreesLatitude() float64 {
	if x != nil && x.DegreesLatitude != nil {
		return *x.DegreesLatitude
	}
	return 0
}

func (x *Message_LocationMessage) GetDegreesLongitude() float64 {
	if x != nil && x.DegreesLongitude != nil {
		return *x.DegreesLongitude
	}
	return 0
}

func (x *Message_LocationMessage) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *Message_LocationMessage) GetAddress() string {
	if x != nil && x.Address != nil {
		return *x.Address
	}
	return ""
}

func (x *Message_LocationMessage) GetUrl() string {
	if x != nil && x.Url != nil {
		return *x.Url
	}
	return ""
}

func (x *Message_LocationMessage) GetIsLive() bool {
	if x != nil && x.IsLive != nil {
		return *x.IsLive
	}
	return false
}

func (x *Message_LocationMessage) GetAccuracyInMeters() uint32 {
	if x != nil && x.AccuracyInMeters != nil {
		return *x.AccuracyInMeters
	}
	return 0
}

func (x *Message_LocationMessage) GetSpeedInMps() float32 {
	if x != nil && x.SpeedInMps != nil {
		return *x.SpeedInMps
	}
	return 0
}

func (x *Message_LocationMessage) GetDegreesClockwiseFromMagneticNorth() uint32 {
	if x != nil && x.DegreesClockwiseFromMagneticNorth != nil {
		return *x.DegreesClockwiseFromMagneticNorth
	}
	return 0
}

func (x *Message_LocationMessage) GetComment() string {
	if x != nil && x.Comment != nil {
		return *x.Comment
	}
	return ""
}

func (x *Message_LocationMessage) GetJpegThumbnail() []byte {
	if x != nil {
		return x.JpegThumbnail
	}
	return nil
}

func (x *Message_LocationMessage) GetContextInfo() *ContextInfo {
	if x != nil {
		return x.ContextInfo
	}
	return nil
}

type Message_OrderMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId           *string                            `protobuf:"bytes,1,opt,name=order_id,json=orderId" json:"order_id,omitempty"`
	Thumbnail         []byte                             `protobuf:"bytes,2,opt,name=thumbnail" json:"thumbnail,omitempty"`
	ItemCount         *int32                             `protobuf:"varint,3,opt,name=item_count,json=itemCount" json:"item_count,omitempty"`
	Status            *Message_OrderMessage_OrderStatus  `protobuf:"varint,4,opt,name=status,enum=Message_OrderMessage_OrderStatus" json:"status,omitempty"`
	Surface           *Message_OrderMessage_OrderSurface `protobuf:"varint,5,opt,name=surface,enum=Message_OrderMessage_OrderSurface" json:"surface,omitempty"`
	Message           *string                            `protobuf:"bytes,6,opt,name=message" json:"message,omitempty"`
	OrderTitle        *string                            `protobuf:"bytes,7,opt,name=order_title,json=orderTitle" json:"order_title,omitempty"`
	SellerJid         *string                            `protobuf:"bytes,8,opt,name=seller_jid,json=sellerJid" json:"seller_jid,omitempty"`
	Token             *string                            `protobuf:"bytes,9,opt,name=token" json:"token,omitempty"`
	TotalAmount_1000  *int64                             `protobuf:"varint,10,opt,name=total_amount_1000,json=totalAmount1000" json:"total_amount_1000,omitempty"`
	TotalCurrencyCode *string                            `protobuf:"bytes,11,opt,name=total_currency_code,json=totalCurrencyCode" json:"total_currency_code,omitempty"`
	ContextInfo       *ContextInfo                       `protobuf:"bytes,17,opt,name=context_info,json=contextInfo" json:"context_info,omitempty"`
}

func (x *Message_OrderMessage) Reset() {
	*x = Message_OrderMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wa_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_OrderMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_OrderMessage) ProtoMessage() {}

func (x *Message_OrderMessage) ProtoReflect() protoreflect.Message {
	mi := &file_wa_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_OrderMessage.ProtoReflect.Descriptor instead.
func (*Message_OrderMessage) Descriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{10, 33}
}

func (x *Message_OrderMessage) GetOrderId() string {
	if x != nil && x.OrderId != nil {
		return *x.OrderId
	}
	return ""
}

func (x *Message_OrderMessage) GetThumbnail() []byte {
	if x != nil {
		return x.Thumbnail
	}
	return nil
}

func (x *Message_OrderMessage) GetItemCount() int32 {
	if x != nil && x.ItemCount != nil {
		return *x.ItemCount
	}
	return 0
}

func (x *Message_OrderMessage) GetStatus() Message_OrderMessage_OrderStatus {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return Message_OrderMessage_INQUIRY
}

func (x *Message_OrderMessage) GetSurface() Message_OrderMessage_OrderSurface {
	if x != nil && x.Surface != nil {
		return *x.Surface
	}
	return Message_OrderMessage_CATALOG
}

func (x *Message_OrderMessage) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return ""
}

func (x *Message_OrderMessage) GetOrderTitle() string {
	if x != nil && x.OrderTitle != nil {
		return *x.OrderTitle
	}
	return ""
}

func (x *Message_OrderMessage) GetSellerJid() string {
	if x != nil && x.SellerJid != nil {
		return *x.SellerJid
	}
	return ""
}

func (x *Message_OrderMessage) GetToken() string {
	if x != nil && x.Token != nil {
		return *x.Token
	}
	return ""
}

func (x *Message_OrderMessage) GetTotalAmount_1000() int64 {
	if x != nil && x.TotalAmount_1000 != nil {
		return *x.TotalAmount_1000
	}
	return 0
}

func (x *Message_OrderMessage) GetTotalCurrencyCode() string {
	if x != nil && x.TotalCurrencyCode != nil {
		return *x.TotalCurrencyCode
	}
	return ""
}

func (x *Message_OrderMessage) GetContextInfo() *ContextInfo {
	if x != nil {
		return x.ContextInfo
	}
	return nil
}

type Message_PaymentInviteMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceType     *Message_PaymentInviteMessage_ServiceType `protobuf:"varint,1,opt,name=service_type,json=serviceType,enum=Message_PaymentInviteMessage_ServiceType" json:"service_type,omitempty"`
	ExpiryTimestamp *int64                                    `protobuf:"varint,2,opt,name=expiry_timestamp,json=expiryTimestamp" json:"expiry_timestamp,omitempty"`
}

func (x *Message_PaymentInviteMessage) Reset() {
	*x = Message_PaymentInviteMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wa_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_PaymentInviteMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_PaymentInviteMessage) ProtoMessage() {}

func (x *Message_PaymentInviteMessage) ProtoReflect() protoreflect.Message {
	mi := &file_wa_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_PaymentInviteMessage.ProtoReflect.Descriptor instead.
func (*Message_PaymentInviteMessage) Descriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{10, 34}
}

func (x *Message_PaymentInviteMessage) GetServiceType() Message_PaymentInviteMessage_ServiceType {
	if x != nil && x.ServiceType != nil {
		return *x.ServiceType
	}
	return Message_PaymentInviteMessage_UNKNOWN
}

func (x *Message_PaymentInviteMessage) GetExpiryTimestamp() int64 {
	if x != nil && x.ExpiryTimestamp != nil {
		return *x.ExpiryTimestamp
	}
	return 0
}

type Message_PeerDataOperationRequestMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PeerDataOperationRequestType *Message_PeerDataOperationRequestType                             `protobuf:"varint,1,opt,name=peer_data_operation_request_type,json=peerDataOperationRequestType,enum=Message_PeerDataOperationRequestType" json:"peer_data_operation_request_type,omitempty"`
	RequestStickerReupload       []*Message_PeerDataOperationRequestMessage_RequestStickerReupload `protobuf:"bytes,2,rep,name=request_sticker_reupload,json=requestStickerReupload" json:"request_sticker_reupload,omitempty"`
	RequestUrlPreview            []*Message_PeerDataOperationRequestMessage_RequestUrlPreview      `protobuf:"bytes,3,rep,name=request_url_preview,json=requestUrlPreview" json:"request_url_preview,omitempty"`
}

func (x *Message_PeerDataOperationRequestMessage) Reset() {
	*x = Message_PeerDataOperationRequestMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wa_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_PeerDataOperationRequestMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_PeerDataOperationRequestMessage) ProtoMessage() {}

func (x *Message_PeerDataOperationRequestMessage) ProtoReflect() protoreflect.Message {
	mi := &file_wa_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_PeerDataOperationRequestMessage.ProtoReflect.Descriptor instead.
func (*Message_PeerDataOperationRequestMessage) Descriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{10, 35}
}

func (x *Message_PeerDataOperationRequestMessage) GetPeerDataOperationRequestType() Message_PeerDataOperationRequestType {
	if x != nil && x.PeerDataOperationRequestType != nil {
		return *x.PeerDataOperationRequestType
	}
	return Message_UPLOAD_STICKER
}

func (x *Message_PeerDataOperationRequestMessage) GetRequestStickerReupload() []*Message_PeerDataOperationRequestMessage_RequestStickerReupload {
	if x != nil {
		return x.RequestStickerReupload
	}
	return nil
}

func (x *Message_PeerDataOperationRequestMessage) GetRequestUrlPreview() []*Message_PeerDataOperationRequestMessage_RequestUrlPreview {
	if x != nil {
		return x.RequestUrlPreview
	}
	return nil
}

type Message_PeerDataOperationRequestResponseMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PeerDataOperationRequestType *Message_PeerDataOperationRequestType                                      `protobuf:"varint,1,opt,name=peer_data_operation_request_type,json=peerDataOperationRequestType,enum=Message_PeerDataOperationRequestType" json:"peer_data_operation_request_type,omitempty"`
	StanzaId                     *string                                                                    `protobuf:"bytes,2,opt,name=stanza_id,json=stanzaId" json:"stanza_id,omitempty"`
	PeerDataOperationResult      []*Message_PeerDataOperationRequestResponseMessage_PeerDataOperationResult `protobuf:"bytes,3,rep,name=peer_data_operation_result,json=peerDataOperationResult" json:"peer_data_operation_result,omitempty"`
}

func (x *Message_PeerDataOperationRequestResponseMessage) Reset() {
	*x = Message_PeerDataOperationRequestResponseMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wa_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_PeerDataOperationRequestResponseMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_PeerDataOperationRequestResponseMessage) ProtoMessage() {}

func (x *Message_PeerDataOperationRequestResponseMessage) ProtoReflect() protoreflect.Message {
	mi := &file_wa_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_PeerDataOperationRequestResponseMessage.ProtoReflect.Descriptor instead.
func (*Message_PeerDataOperationRequestResponseMessage) Descriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{10, 36}
}

func (x *Message_PeerDataOperationRequestResponseMessage) GetPeerDataOperationRequestType() Message_PeerDataOperationRequestType {
	if x != nil && x.PeerDataOperationRequestType != nil {
		return *x.PeerDataOperationRequestType
	}
	return Message_UPLOAD_STICKER
}

func (x *Message_PeerDataOperationRequestResponseMessage) GetStanzaId() string {
	if x != nil && x.StanzaId != nil {
		return *x.StanzaId
	}
	return ""
}

func (x *Message_PeerDataOperationRequestResponseMessage) GetPeerDataOperationResult() []*Message_PeerDataOperationRequestResponseMessage_PeerDataOperationResult {
	if x != nil {
		return x.PeerDataOperationResult
	}
	return nil
}

type Message_PollCreationMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EncKey                 []byte                                `protobuf:"bytes,1,opt,name=enc_key,json=encKey" json:"enc_key,omitempty"`
	Name                   *string                               `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Options                []*Message_PollCreationMessage_Option `protobuf:"bytes,3,rep,name=options" json:"options,omitempty"`
	SelectableOptionsCount *uint32                               `protobuf:"varint,4,opt,name=selectable_options_count,json=selectableOptionsCount" json:"selectable_options_count,omitempty"`
	ContextInfo            *ContextInfo                          `protobuf:"bytes,5,opt,name=context_info,json=contextInfo" json:"context_info,omitempty"`
}

func (x *Message_PollCreationMessage) Reset() {
	*x = Message_PollCreationMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wa_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_PollCreationMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_PollCreationMessage) ProtoMessage() {}

func (x *Message_PollCreationMessage) ProtoReflect() protoreflect.Message {
	mi := &file_wa_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_PollCreationMessage.ProtoReflect.Descriptor instead.
func (*Message_PollCreationMessage) Descriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{10, 37}
}

func (x *Message_PollCreationMessage) GetEncKey() []byte {
	if x != nil {
		return x.EncKey
	}
	return nil
}

func (x *Message_PollCreationMessage) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *Message_PollCreationMessage) GetOptions() []*Message_PollCreationMessage_Option {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *Message_PollCreationMessage) GetSelectableOptionsCount() uint32 {
	if x != nil && x.SelectableOptionsCount != nil {
		return *x.SelectableOptionsCount
	}
	return 0
}

func (x *Message_PollCreationMessage) GetContextInfo() *ContextInfo {
	if x != nil {
		return x.ContextInfo
	}
	return nil
}

type Message_PollEncValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EncPayload []byte `protobuf:"bytes,1,opt,name=enc_payload,json=encPayload" json:"enc_payload,omitempty"`
	EncIv      []byte `protobuf:"bytes,2,opt,name=enc_iv,json=encIv" json:"enc_iv,omitempty"`
}

func (x *Message_PollEncValue) Reset() {
	*x = Message_PollEncValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wa_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_PollEncValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_PollEncValue) ProtoMessage() {}

func (x *Message_PollEncValue) ProtoReflect() protoreflect.Message {
	mi := &file_wa_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_PollEncValue.ProtoReflect.Descriptor instead.
func (*Message_PollEncValue) Descriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{10, 38}
}

func (x *Message_PollEncValue) GetEncPayload() []byte {
	if x != nil {
		return x.EncPayload
	}
	return nil
}

func (x *Message_PollEncValue) GetEncIv() []byte {
	if x != nil {
		return x.EncIv
	}
	return nil
}

type Message_PollUpdateMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PollCreationMessageKey *MessageKey                        `protobuf:"bytes,1,opt,name=poll_creation_message_key,json=pollCreationMessageKey" json:"poll_creation_message_key,omitempty"`
	Vote                   *Message_PollEncValue              `protobuf:"bytes,2,opt,name=vote" json:"vote,omitempty"`
	Metadata               *Message_PollUpdateMessageMetadata `protobuf:"bytes,3,opt,name=metadata" json:"metadata,omitempty"`
	SenderTimestampMs      *int64                             `protobuf:"varint,4,opt,name=sender_timestamp_ms,json=senderTimestampMs" json:"sender_timestamp_ms,omitempty"`
}

func (x *Message_PollUpdateMessage) Reset() {
	*x = Message_PollUpdateMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wa_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_PollUpdateMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_PollUpdateMessage) ProtoMessage() {}

func (x *Message_PollUpdateMessage) ProtoReflect() protoreflect.Message {
	mi := &file_wa_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_PollUpdateMessage.ProtoReflect.Descriptor instead.
func (*Message_PollUpdateMessage) Descriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{10, 39}
}

func (x *Message_PollUpdateMessage) GetPollCreationMessageKey() *MessageKey {
	if x != nil {
		return x.PollCreationMessageKey
	}
	return nil
}

func (x *Message_PollUpdateMessage) GetVote() *Message_PollEncValue {
	if x != nil {
		return x.Vote
	}
	return nil
}

func (x *Message_PollUpdateMessage) GetMetadata() *Message_PollUpdateMessageMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Message_PollUpdateMessage) GetSenderTimestampMs() int64 {
	if x != nil && x.SenderTimestampMs != nil {
		return *x.SenderTimestampMs
	}
	return 0
}

type Message_PollUpdateMessageMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Message_PollUpdateMessageMetadata) Reset() {
	*x = Message_PollUpdateMessageMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wa_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_PollUpdateMessageMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_PollUpdateMessageMetadata) ProtoMessage() {}

func (x *Message_PollUpdateMessageMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_wa_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_PollUpdateMessageMetadata.ProtoReflect.Descriptor instead.
func (*Message_PollUpdateMessageMetadata) Descriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{10, 40}
}

type Message_ProductMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Product          *Message_ProductMessage_ProductSnapshot `protobuf:"bytes,1,opt,name=product" json:"product,omitempty"`
	BusinessOwnerJid *string                                 `protobuf:"bytes,2,opt,name=business_owner_jid,json=businessOwnerJid" json:"business_owner_jid,omitempty"`
	Body             *string                                 `protobuf:"bytes,5,opt,name=body" json:"body,omitempty"`
	Footer           *string                                 `protobuf:"bytes,6,opt,name=footer" json:"footer,omitempty"`
	ContextInfo      *ContextInfo                            `protobuf:"bytes,17,opt,name=context_info,json=contextInfo" json:"context_info,omitempty"`
}

func (x *Message_ProductMessage) Reset() {
	*x = Message_ProductMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wa_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_ProductMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_ProductMessage) ProtoMessage() {}

func (x *Message_ProductMessage) ProtoReflect() protoreflect.Message {
	mi := &file_wa_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_ProductMessage.ProtoReflect.Descriptor instead.
func (*Message_ProductMessage) Descriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{10, 41}
}

func (x *Message_ProductMessage) GetProduct() *Message_ProductMessage_ProductSnapshot {
	if x != nil {
		return x.Product
	}
	return nil
}

func (x *Message_ProductMessage) GetBusinessOwnerJid() string {
	if x != nil && x.BusinessOwnerJid != nil {
		return *x.BusinessOwnerJid
	}
	return ""
}

func (x *Message_ProductMessage) GetBody() string {
	if x != nil && x.Body != nil {
		return *x.Body
	}
	return ""
}

func (x *Message_ProductMessage) GetFooter() string {
	if x != nil && x.Footer != nil {
		return *x.Footer
	}
	return ""
}

func (x *Message_ProductMessage) GetContextInfo() *ContextInfo {
	if x != nil {
		return x.ContextInfo
	}
	return nil
}

type Message_ProtocolMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key                                     *MessageKey                                      `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Type                                    *Message_ProtocolMessage_Type                    `protobuf:"varint,2,opt,name=type,enum=Message_ProtocolMessage_Type" json:"type,omitempty"`
	EphemeralExpiration                     *uint32                                          `protobuf:"varint,4,opt,name=ephemeral_expiration,json=ephemeralExpiration" json:"ephemeral_expiration,omitempty"`
	HistorySyncNotification                 *Message_HistorySyncNotification                 `protobuf:"bytes,6,opt,name=history_sync_notification,json=historySyncNotification" json:"history_sync_notification,omitempty"`
	AppStateSyncKeyShare                    *Message_AppStateSyncKeyShare                    `protobuf:"bytes,7,opt,name=app_state_sync_key_share,json=appStateSyncKeyShare" json:"app_state_sync_key_share,omitempty"`
	AppStateSyncKeyRequest                  *Message_AppStateSyncKeyRequest                  `protobuf:"bytes,8,opt,name=app_state_sync_key_request,json=appStateSyncKeyRequest" json:"app_state_sync_key_request,omitempty"`
	InitialSecurityNotificationSettingSync  *Message_InitialSecurityNotificationSettingSync  `protobuf:"bytes,9,opt,name=initial_security_notification_setting_sync,json=initialSecurityNotificationSettingSync" json:"initial_security_notification_setting_sync,omitempty"`
	AppStateFatalExceptionNotification      *Message_AppStateFatalExceptionNotification      `protobuf:"bytes,10,opt,name=app_state_fatal_exception_notification,json=appStateFatalExceptionNotification" json:"app_state_fatal_exception_notification,omitempty"`
	DisappearingMode                        *DisappearingMode                                `protobuf:"bytes,11,opt,name=disappearing_mode,json=disappearingMode" json:"disappearing_mode,omitempty"`
	EditedMessage                           *Message                                         `protobuf:"bytes,14,opt,name=edited_message,json=editedMessage" json:"edited_message,omitempty"`
	TimestampMs                             *int64                                           `protobuf:"varint,15,opt,name=timestamp_ms,json=timestampMs" json:"timestamp_ms,omitempty"`
	PeerDataOperationRequestMessage         *Message_PeerDataOperationRequestMessage         `protobuf:"bytes,16,opt,name=peer_data_operation_request_message,json=peerDataOperationRequestMessage" json:"peer_data_operation_request_message,omitempty"`
	PeerDataOperationRequestResponseMessage *Message_PeerDataOperationRequestResponseMessage `protobuf:"bytes,17,opt,name=peer_data_operation_request_response_message,json=peerDataOperationRequestResponseMessage" json:"peer_data_operation_request_response_message,omitempty"`
}

func (x *Message_ProtocolMessage) Reset() {
	*x = Message_ProtocolMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wa_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_ProtocolMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_ProtocolMessage) ProtoMessage() {}

func (x *Message_ProtocolMessage) ProtoReflect() protoreflect.Message {
	mi := &file_wa_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_ProtocolMessage.ProtoReflect.Descriptor instead.
func (*Message_ProtocolMessage) Descriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{10, 42}
}

func (x *Message_ProtocolMessage) GetKey() *MessageKey {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *Message_ProtocolMessage) GetType() Message_ProtocolMessage_Type {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return Message_ProtocolMessage_REVOKE
}

func (x *Message_ProtocolMessage) GetEphemeralExpiration() uint32 {
	if x != nil && x.EphemeralExpiration != nil {
		return *x.EphemeralExpiration
	}
	return 0
}

func (x *Message_ProtocolMessage) GetHistorySyncNotification() *Message_HistorySyncNotification {
	if x != nil {
		return x.HistorySyncNotification
	}
	return nil
}

func (x *Message_ProtocolMessage) GetAppStateSyncKeyShare() *Message_AppStateSyncKeyShare {
	if x != nil {
		return x.AppStateSyncKeyShare
	}
	return nil
}

func (x *Message_ProtocolMessage) GetAppStateSyncKeyRequest() *Message_AppStateSyncKeyRequest {
	if x != nil {
		return x.AppStateSyncKeyRequest
	}
	return nil
}

func (x *Message_ProtocolMessage) GetInitialSecurityNotificationSettingSync() *Message_InitialSecurityNotificationSettingSync {
	if x != nil {
		return x.InitialSecurityNotificationSettingSync
	}
	return nil
}

func (x *Message_ProtocolMessage) GetAppStateFatalExceptionNotification() *Message_AppStateFatalExceptionNotification {
	if x != nil {
		return x.AppStateFatalExceptionNotification
	}
	return nil
}

func (x *Message_ProtocolMessage) GetDisappearingMode() *DisappearingMode {
	if x != nil {
		return x.DisappearingMode
	}
	return nil
}

func (x *Message_ProtocolMessage) GetEditedMessage() *Message {
	if x != nil {
		return x.EditedMessage
	}
	return nil
}

func (x *Message_ProtocolMessage) GetTimestampMs() int64 {
	if x != nil && x.TimestampMs != nil {
		return *x.TimestampMs
	}
	return 0
}

func (x *Message_ProtocolMessage) GetPeerDataOperationRequestMessage() *Message_PeerDataOperationRequestMessage {
	if x != nil {
		return x.PeerDataOperationRequestMessage
	}
	return nil
}

func (x *Message_ProtocolMessage) GetPeerDataOperationRequestResponseMessage() *Message_PeerDataOperationRequestResponseMessage {
	if x != nil {
		return x.PeerDataOperationRequestResponseMessage
	}
	return nil
}

type Message_ReactionMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key               *MessageKey `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Text              *string     `protobuf:"bytes,2,opt,name=text" json:"text,omitempty"`
	GroupingKey       *string     `protobuf:"bytes,3,opt,name=grouping_key,json=groupingKey" json:"grouping_key,omitempty"`
	SenderTimestampMs *int64      `protobuf:"varint,4,opt,name=sender_timestamp_ms,json=senderTimestampMs" json:"sender_timestamp_ms,omitempty"`
}

func (x *Message_ReactionMessage) Reset() {
	*x = Message_ReactionMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wa_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_ReactionMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_ReactionMessage) ProtoMessage() {}

func (x *Message_ReactionMessage) ProtoReflect() protoreflect.Message {
	mi := &file_wa_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_ReactionMessage.ProtoReflect.Descriptor instead.
func (*Message_ReactionMessage) Descriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{10, 43}
}

func (x *Message_ReactionMessage) GetKey() *MessageKey {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *Message_ReactionMessage) GetText() string {
	if x != nil && x.Text != nil {
		return *x.Text
	}
	return ""
}

func (x *Message_ReactionMessage) GetGroupingKey() string {
	if x != nil && x.GroupingKey != nil {
		return *x.GroupingKey
	}
	return ""
}

func (x *Message_ReactionMessage) GetSenderTimestampMs() int64 {
	if x != nil && x.SenderTimestampMs != nil {
		return *x.SenderTimestampMs
	}
	return 0
}

type Message_RequestPaymentMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrencyCodeIso4217 *string            `protobuf:"bytes,1,opt,name=currency_code_iso4217,json=currencyCodeIso4217" json:"currency_code_iso4217,omitempty"`
	Amount_1000         *uint64            `protobuf:"varint,2,opt,name=amount_1000,json=amount1000" json:"amount_1000,omitempty"`
	RequestFrom         *string            `protobuf:"bytes,3,opt,name=request_from,json=requestFrom" json:"request_from,omitempty"`
	NoteMessage         *Message           `protobuf:"bytes,4,opt,name=note_message,json=noteMessage" json:"note_message,omitempty"`
	ExpiryTimestamp     *int64             `protobuf:"varint,5,opt,name=expiry_timestamp,json=expiryTimestamp" json:"expiry_timestamp,omitempty"`
	Amount              *Money             `protobuf:"bytes,6,opt,name=amount" json:"amount,omitempty"`
	Background          *PaymentBackground `protobuf:"bytes,7,opt,name=background" json:"background,omitempty"`
}

func (x *Message_RequestPaymentMessage) Reset() {
	*x = Message_RequestPaymentMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wa_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_RequestPaymentMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_RequestPaymentMessage) ProtoMessage() {}

func (x *Message_RequestPaymentMessage) ProtoReflect() protoreflect.Message {
	mi := &file_wa_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_RequestPaymentMessage.ProtoReflect.Descriptor instead.
func (*Message_RequestPaymentMessage) Descriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{10, 44}
}

func (x *Message_RequestPaymentMessage) GetCurrencyCodeIso4217() string {
	if x != nil && x.CurrencyCodeIso4217 != nil {
		return *x.CurrencyCodeIso4217
	}
	return ""
}

func (x *Message_RequestPaymentMessage) GetAmount_1000() uint64 {
	if x != nil && x.Amount_1000 != nil {
		return *x.Amount_1000
	}
	return 0
}

func (x *Message_RequestPaymentMessage) GetRequestFrom() string {
	if x != nil && x.RequestFrom != nil {
		return *x.RequestFrom
	}
	return ""
}

func (x *Message_RequestPaymentMessage) GetNoteMessage() *Message {
	if x != nil {
		return x.NoteMessage
	}
	return nil
}

func (x *Message_RequestPaymentMessage) GetExpiryTimestamp() int64 {
	if x != nil && x.ExpiryTimestamp != nil {
		return *x.ExpiryTimestamp
	}
	return 0
}

func (x *Message_RequestPaymentMessage) GetAmount() *Money {
	if x != nil {
		return x.Amount
	}
	return nil
}

func (x *Message_RequestPaymentMessage) GetBackground() *PaymentBackground {
	if x != nil {
		return x.Background
	}
	return nil
}

type Message_RequestPhoneNumberMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContextInfo *ContextInfo `protobuf:"bytes,1,opt,name=context_info,json=contextInfo" json:"context_info,omitempty"`
}

func (x *Message_RequestPhoneNumberMessage) Reset() {
	*x = Message_RequestPhoneNumberMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wa_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_RequestPhoneNumberMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_RequestPhoneNumberMessage) ProtoMessage() {}

func (x *Message_RequestPhoneNumberMessage) ProtoReflect() protoreflect.Message {
	mi := &file_wa_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_RequestPhoneNumberMessage.ProtoReflect.Descriptor instead.
func (*Message_RequestPhoneNumberMessage) Descriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{10, 45}
}

func (x *Message_RequestPhoneNumberMessage) GetContextInfo() *ContextInfo {
	if x != nil {
		return x.ContextInfo
	}
	return nil
}

type Message_SenderKeyDistributionMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId                             *string `protobuf:"bytes,1,opt,name=group_id,json=groupId" json:"group_id,omitempty"`
	AxolotlSenderKeyDistributionMessage []byte  `protobuf:"bytes,2,opt,name=axolotl_sender_key_distribution_message,json=axolotlSenderKeyDistributionMessage" json:"axolotl_sender_key_distribution_message,omitempty"`
}

func (x *Message_SenderKeyDistributionMessage) Reset() {
	*x = Message_SenderKeyDistributionMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wa_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_SenderKeyDistributionMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_SenderKeyDistributionMessage) ProtoMessage() {}

func (x *Message_SenderKeyDistributionMessage) ProtoReflect() protoreflect.Message {
	mi := &file_wa_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_SenderKeyDistributionMessage.ProtoReflect.Descriptor instead.
func (*Message_SenderKeyDistributionMessage) Descriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{10, 46}
}

func (x *Message_SenderKeyDistributionMessage) GetGroupId() string {
	if x != nil && x.GroupId != nil {
		return *x.GroupId
	}
	return ""
}

func (x *Message_SenderKeyDistributionMessage) GetAxolotlSenderKeyDistributionMessage() []byte {
	if x != nil {
		return x.AxolotlSenderKeyDistributionMessage
	}
	return nil
}

type Message_SendPaymentMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NoteMessage       *Message           `protobuf:"bytes,2,opt,name=note_message,json=noteMessage" json:"note_message,omitempty"`
	RequestMessageKey *MessageKey        `protobuf:"bytes,3,opt,name=request_message_key,json=requestMessageKey" json:"request_message_key,omitempty"`
	Background        *PaymentBackground `protobuf:"bytes,4,opt,name=background" json:"background,omitempty"`
}

func (x *Message_SendPaymentMessage) Reset() {
	*x = Message_SendPaymentMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wa_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_SendPaymentMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_SendPaymentMessage) ProtoMessage() {}

func (x *Message_SendPaymentMessage) ProtoReflect() protoreflect.Message {
	mi := &file_wa_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_SendPaymentMessage.ProtoReflect.Descriptor instead.
func (*Message_SendPaymentMessage) Descriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{10, 47}
}

func (x *Message_SendPaymentMessage) GetNoteMessage() *Message {
	if x != nil {
		return x.NoteMessage
	}
	return nil
}

func (x *Message_SendPaymentMessage) GetRequestMessageKey() *MessageKey {
	if x != nil {
		return x.RequestMessageKey
	}
	return nil
}

func (x *Message_SendPaymentMessage) GetBackground() *PaymentBackground {
	if x != nil {
		return x.Background
	}
	return nil
}

type Message_StickerMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url               *string      `protobuf:"bytes,1,opt,name=url" json:"url,omitempty"`
	FileSha256        []byte       `protobuf:"bytes,2,opt,name=file_sha256,json=fileSha256" json:"file_sha256,omitempty"`
	FileEncSha256     []byte       `protobuf:"bytes,3,opt,name=file_enc_sha256,json=fileEncSha256" json:"file_enc_sha256,omitempty"`
	MediaKey          []byte       `protobuf:"bytes,4,opt,name=media_key,json=mediaKey" json:"media_key,omitempty"`
	Mimetype          *string      `protobuf:"bytes,5,opt,name=mimetype" json:"mimetype,omitempty"`
	Height            *uint32      `protobuf:"varint,6,opt,name=height" json:"height,omitempty"`
	Width             *uint32      `protobuf:"varint,7,opt,name=width" json:"width,omitempty"`
	DirectPath        *string      `protobuf:"bytes,8,opt,name=direct_path,json=directPath" json:"direct_path,omitempty"`
	FileLength        *uint64      `protobuf:"varint,9,opt,name=file_length,json=fileLength" json:"file_length,omitempty"`
	MediaKeyTimestamp *int64       `protobuf:"varint,10,opt,name=media_key_timestamp,json=mediaKeyTimestamp" json:"media_key_timestamp,omitempty"`
	FirstFrameLength  *uint32      `protobuf:"varint,11,opt,name=first_frame_length,json=firstFrameLength" json:"first_frame_length,omitempty"`
	FirstFrameSidecar []byte       `protobuf:"bytes,12,opt,name=first_frame_sidecar,json=firstFrameSidecar" json:"first_frame_sidecar,omitempty"`
	IsAnimated        *bool        `protobuf:"varint,13,opt,name=is_animated,json=isAnimated" json:"is_animated,omitempty"`
	PngThumbnail      []byte       `protobuf:"bytes,16,opt,name=png_thumbnail,json=pngThumbnail" json:"png_thumbnail,omitempty"`
	ContextInfo       *ContextInfo `protobuf:"bytes,17,opt,name=context_info,json=contextInfo" json:"context_info,omitempty"`
	StickerSentTs     *int64       `protobuf:"varint,18,opt,name=sticker_sent_ts,json=stickerSentTs" json:"sticker_sent_ts,omitempty"`
	IsAvatar          *bool        `protobuf:"varint,19,opt,name=is_avatar,json=isAvatar" json:"is_avatar,omitempty"`
}

func (x *Message_StickerMessage) Reset() {
	*x = Message_StickerMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wa_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_StickerMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_StickerMessage) ProtoMessage() {}

func (x *Message_StickerMessage) ProtoReflect() protoreflect.Message {
	mi := &file_wa_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_StickerMessage.ProtoReflect.Descriptor instead.
func (*Message_StickerMessage) Descriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{10, 48}
}

func (x *Message_StickerMessage) GetUrl() string {
	if x != nil && x.Url != nil {
		return *x.Url
	}
	return ""
}

func (x *Message_StickerMessage) GetFileSha256() []byte {
	if x != nil {
		return x.FileSha256
	}
	return nil
}

func (x *Message_StickerMessage) GetFileEncSha256() []byte {
	if x != nil {
		return x.FileEncSha256
	}
	return nil
}

func (x *Message_StickerMessage) GetMediaKey() []byte {
	if x != nil {
		return x.MediaKey
	}
	return nil
}

func (x *Message_StickerMessage) GetMimetype() string {
	if x != nil && x.Mimetype != nil {
		return *x.Mimetype
	}
	return ""
}

func (x *Message_StickerMessage) GetHeight() uint32 {
	if x != nil && x.Height != nil {
		return *x.Height
	}
	return 0
}

func (x *Message_StickerMessage) GetWidth() uint32 {
	if x != nil && x.Width != nil {
		return *x.Width
	}
	return 0
}

func (x *Message_StickerMessage) GetDirectPath() string {
	if x != nil && x.DirectPath != nil {
		return *x.DirectPath
	}
	return ""
}

func (x *Message_StickerMessage) GetFileLength() uint64 {
	if x != nil && x.FileLength != nil {
		return *x.FileLength
	}
	return 0
}

func (x *Message_StickerMessage) GetMediaKeyTimestamp() int64 {
	if x != nil && x.MediaKeyTimestamp != nil {
		return *x.MediaKeyTimestamp
	}
	return 0
}

func (x *Message_StickerMessage) GetFirstFrameLength() uint32 {
	if x != nil && x.FirstFrameLength != nil {
		return *x.FirstFrameLength
	}
	return 0
}

func (x *Message_StickerMessage) GetFirstFrameSidecar() []byte {
	if x != nil {
		return x.FirstFrameSidecar
	}
	return nil
}

func (x *Message_StickerMessage) GetIsAnimated() bool {
	if x != nil && x.IsAnimated != nil {
		return *x.IsAnimated
	}
	return false
}

func (x *Message_StickerMessage) GetPngThumbnail() []byte {
	if x != nil {
		return x.PngThumbnail
	}
	return nil
}

func (x *Message_StickerMessage) GetContextInfo() *ContextInfo {
	if x != nil {
		return x.ContextInfo
	}
	return nil
}

func (x *Message_StickerMessage) GetStickerSentTs() int64 {
	if x != nil && x.StickerSentTs != nil {
		return *x.StickerSentTs
	}
	return 0
}

func (x *Message_StickerMessage) GetIsAvatar() bool {
	if x != nil && x.IsAvatar != nil {
		return *x.IsAvatar
	}
	return false
}

type Message_TemplateButtonReplyMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SelectedId          *string      `protobuf:"bytes,1,opt,name=selected_id,json=selectedId" json:"selected_id,omitempty"`
	SelectedDisplayText *string      `protobuf:"bytes,2,opt,name=selected_display_text,json=selectedDisplayText" json:"selected_display_text,omitempty"`
	ContextInfo         *ContextInfo `protobuf:"bytes,3,opt,name=context_info,json=contextInfo" json:"context_info,omitempty"`
	SelectedIndex       *uint32      `protobuf:"varint,4,opt,name=selected_index,json=selectedIndex" json:"selected_index,omitempty"`
}

func (x *Message_TemplateButtonReplyMessage) Reset() {
	*x = Message_TemplateButtonReplyMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wa_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_TemplateButtonReplyMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_TemplateButtonReplyMessage) ProtoMessage() {}

func (x *Message_TemplateButtonReplyMessage) ProtoReflect() protoreflect.Message {
	mi := &file_wa_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_TemplateButtonReplyMessage.ProtoReflect.Descriptor instead.
func (*Message_TemplateButtonReplyMessage) Descriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{10, 49}
}

func (x *Message_TemplateButtonReplyMessage) GetSelectedId() string {
	if x != nil && x.SelectedId != nil {
		return *x.SelectedId
	}
	return ""
}

func (x *Message_TemplateButtonReplyMessage) GetSelectedDisplayText() string {
	if x != nil && x.SelectedDisplayText != nil {
		return *x.SelectedDisplayText
	}
	return ""
}

func (x *Message_TemplateButtonReplyMessage) GetContextInfo() *ContextInfo {
	if x != nil {
		return x.ContextInfo
	}
	return nil
}

func (x *Message_TemplateButtonReplyMessage) GetSelectedIndex() uint32 {
	if x != nil && x.SelectedIndex != nil {
		return *x.SelectedIndex
	}
	return 0
}

type Message_TemplateMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContextInfo      *ContextInfo                                     `protobuf:"bytes,3,opt,name=context_info,json=contextInfo" json:"context_info,omitempty"`
	HydratedTemplate *Message_TemplateMessage_HydratedFourRowTemplate `protobuf:"bytes,4,opt,name=hydrated_template,json=hydratedTemplate" json:"hydrated_template,omitempty"`
	TemplateId       *string                                          `protobuf:"bytes,9,opt,name=template_id,json=templateId" json:"template_id,omitempty"`
	// Types that are assignable to Format:
	//
	//	*Message_TemplateMessage_FourRowTemplate_
	//	*Message_TemplateMessage_HydratedFourRowTemplate_
	//	*Message_TemplateMessage_InteractiveMessageTemplate
	Format isMessage_TemplateMessage_Format `protobuf_oneof:"format"`
}

func (x *Message_TemplateMessage) Reset() {
	*x = Message_TemplateMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wa_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_TemplateMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_TemplateMessage) ProtoMessage() {}

func (x *Message_TemplateMessage) ProtoReflect() protoreflect.Message {
	mi := &file_wa_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_TemplateMessage.ProtoReflect.Descriptor instead.
func (*Message_TemplateMessage) Descriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{10, 50}
}

func (x *Message_TemplateMessage) GetContextInfo() *ContextInfo {
	if x != nil {
		return x.ContextInfo
	}
	return nil
}

func (x *Message_TemplateMessage) GetHydratedTemplate() *Message_TemplateMessage_HydratedFourRowTemplate {
	if x != nil {
		return x.HydratedTemplate
	}
	return nil
}

func (x *Message_TemplateMessage) GetTemplateId() string {
	if x != nil && x.TemplateId != nil {
		return *x.TemplateId
	}
	return ""
}

func (m *Message_TemplateMessage) GetFormat() isMessage_TemplateMessage_Format {
	if m != nil {
		return m.Format
	}
	return nil
}

func (x *Message_TemplateMessage) GetFourRowTemplate() *Message_TemplateMessage_FourRowTemplate {
	if x, ok := x.GetFormat().(*Message_TemplateMessage_FourRowTemplate_); ok {
		return x.FourRowTemplate
	}
	return nil
}

func (x *Message_TemplateMessage) GetHydratedFourRowTemplate() *Message_TemplateMessage_HydratedFourRowTemplate {
	if x, ok := x.GetFormat().(*Message_TemplateMessage_HydratedFourRowTemplate_); ok {
		return x.HydratedFourRowTemplate
	}
	return nil
}

func (x *Message_TemplateMessage) GetInteractiveMessageTemplate() *Message_InteractiveMessage {
	if x, ok := x.GetFormat().(*Message_TemplateMessage_InteractiveMessageTemplate); ok {
		return x.InteractiveMessageTemplate
	}
	return nil
}

type isMessage_TemplateMessage_Format interface {
	isMessage_TemplateMessage_Format()
}

type Message_TemplateMessage_FourRowTemplate_ struct {
	FourRowTemplate *Message_TemplateMessage_FourRowTemplate `protobuf:"bytes,1,opt,name=four_row_template,json=fourRowTemplate,oneof"`
}

type Message_TemplateMessage_HydratedFourRowTemplate_ struct {
	HydratedFourRowTemplate *Message_TemplateMessage_HydratedFourRowTemplate `protobuf:"bytes,2,opt,name=hydrated_four_row_template,json=hydratedFourRowTemplate,oneof"`
}

type Message_TemplateMessage_InteractiveMessageTemplate struct {
	InteractiveMessageTemplate *Message_InteractiveMessage `protobuf:"bytes,5,opt,name=interactive_message_template,json=interactiveMessageTemplate,oneof"`
}

func (*Message_TemplateMessage_FourRowTemplate_) isMessage_TemplateMessage_Format() {}

func (*Message_TemplateMessage_HydratedFourRowTemplate_) isMessage_TemplateMessage_Format() {}

func (*Message_TemplateMessage_InteractiveMessageTemplate) isMessage_TemplateMessage_Format() {}

type Message_VideoMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url                    *string                           `protobuf:"bytes,1,opt,name=url" json:"url,omitempty"`
	Mimetype               *string                           `protobuf:"bytes,2,opt,name=mimetype" json:"mimetype,omitempty"`
	FileSha256             []byte                            `protobuf:"bytes,3,opt,name=file_sha256,json=fileSha256" json:"file_sha256,omitempty"`
	FileLength             *uint64                           `protobuf:"varint,4,opt,name=file_length,json=fileLength" json:"file_length,omitempty"`
	Seconds                *uint32                           `protobuf:"varint,5,opt,name=seconds" json:"seconds,omitempty"`
	MediaKey               []byte                            `protobuf:"bytes,6,opt,name=media_key,json=mediaKey" json:"media_key,omitempty"`
	Caption                *string                           `protobuf:"bytes,7,opt,name=caption" json:"caption,omitempty"`
	GifPlayback            *bool                             `protobuf:"varint,8,opt,name=gif_playback,json=gifPlayback" json:"gif_playback,omitempty"`
	Height                 *uint32                           `protobuf:"varint,9,opt,name=height" json:"height,omitempty"`
	Width                  *uint32                           `protobuf:"varint,10,opt,name=width" json:"width,omitempty"`
	FileEncSha256          []byte                            `protobuf:"bytes,11,opt,name=file_enc_sha256,json=fileEncSha256" json:"file_enc_sha256,omitempty"`
	InteractiveAnnotations []*InteractiveAnnotation          `protobuf:"bytes,12,rep,name=interactive_annotations,json=interactiveAnnotations" json:"interactive_annotations,omitempty"`
	DirectPath             *string                           `protobuf:"bytes,13,opt,name=direct_path,json=directPath" json:"direct_path,omitempty"`
	MediaKeyTimestamp      *int64                            `protobuf:"varint,14,opt,name=media_key_timestamp,json=mediaKeyTimestamp" json:"media_key_timestamp,omitempty"`
	JpegThumbnail          []byte                            `protobuf:"bytes,16,opt,name=jpeg_thumbnail,json=jpegThumbnail" json:"jpeg_thumbnail,omitempty"`
	ContextInfo            *ContextInfo                      `protobuf:"bytes,17,opt,name=context_info,json=contextInfo" json:"context_info,omitempty"`
	StreamingSidecar       []byte                            `protobuf:"bytes,18,opt,name=streaming_sidecar,json=streamingSidecar" json:"streaming_sidecar,omitempty"`
	GifAttribution         *Message_VideoMessage_Attribution `protobuf:"varint,19,opt,name=gif_attribution,json=gifAttribution,enum=Message_VideoMessage_Attribution" json:"gif_attribution,omitempty"`
	ViewOnce               *bool                             `protobuf:"varint,20,opt,name=view_once,json=viewOnce" json:"view_once,omitempty"`
	ThumbnailDirectPath    *string                           `protobuf:"bytes,21,opt,name=thumbnail_direct_path,json=thumbnailDirectPath" json:"thumbnail_direct_path,omitempty"`
	ThumbnailSha256        []byte                            `protobuf:"bytes,22,opt,name=thumbnail_sha256,json=thumbnailSha256" json:"thumbnail_sha256,omitempty"`
	ThumbnailEncSha256     []byte                            `protobuf:"bytes,23,opt,name=thumbnail_enc_sha256,json=thumbnailEncSha256" json:"thumbnail_enc_sha256,omitempty"`
	StaticUrl              *string                           `protobuf:"bytes,24,opt,name=static_url,json=staticUrl" json:"static_url,omitempty"`
}

func (x *Message_VideoMessage) Reset() {
	*x = Message_VideoMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wa_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_VideoMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_VideoMessage) ProtoMessage() {}

func (x *Message_VideoMessage) ProtoReflect() protoreflect.Message {
	mi := &file_wa_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_VideoMessage.ProtoReflect.Descriptor instead.
func (*Message_VideoMessage) Descriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{10, 51}
}

func (x *Message_VideoMessage) GetUrl() string {
	if x != nil && x.Url != nil {
		return *x.Url
	}
	return ""
}

func (x *Message_VideoMessage) GetMimetype() string {
	if x != nil && x.Mimetype != nil {
		return *x.Mimetype
	}
	return ""
}

func (x *Message_VideoMessage) GetFileSha256() []byte {
	if x != nil {
		return x.FileSha256
	}
	return nil
}

func (x *Message_VideoMessage) GetFileLength() uint64 {
	if x != nil && x.FileLength != nil {
		return *x.FileLength
	}
	return 0
}

func (x *Message_VideoMessage) GetSeconds() uint32 {
	if x != nil && x.Seconds != nil {
		return *x.Seconds
	}
	return 0
}

func (x *Message_VideoMessage) GetMediaKey() []byte {
	if x != nil {
		return x.MediaKey
	}
	return nil
}

func (x *Message_VideoMessage) GetCaption() string {
	if x != nil && x.Caption != nil {
		return *x.Caption
	}
	return ""
}

func (x *Message_VideoMessage) GetGifPlayback() bool {
	if x != nil && x.GifPlayback != nil {
		return *x.GifPlayback
	}
	return false
}

func (x *Message_VideoMessage) GetHeight() uint32 {
	if x != nil && x.Height != nil {
		return *x.Height
	}
	return 0
}

func (x *Message_VideoMessage) GetWidth() uint32 {
	if x != nil && x.Width != nil {
		return *x.Width
	}
	return 0
}

func (x *Message_VideoMessage) GetFileEncSha256() []byte {
	if x != nil {
		return x.FileEncSha256
	}
	return nil
}

func (x *Message_VideoMessage) GetInteractiveAnnotations() []*InteractiveAnnotation {
	if x != nil {
		return x.InteractiveAnnotations
	}
	return nil
}

func (x *Message_VideoMessage) GetDirectPath() string {
	if x != nil && x.DirectPath != nil {
		return *x.DirectPath
	}
	return ""
}

func (x *Message_VideoMessage) GetMediaKeyTimestamp() int64 {
	if x != nil && x.MediaKeyTimestamp != nil {
		return *x.MediaKeyTimestamp
	}
	return 0
}

func (x *Message_VideoMessage) GetJpegThumbnail() []byte {
	if x != nil {
		return x.JpegThumbnail
	}
	return nil
}

func (x *Message_VideoMessage) GetContextInfo() *ContextInfo {
	if x != nil {
		return x.ContextInfo
	}
	return nil
}

func (x *Message_VideoMessage) GetStreamingSidecar() []byte {
	if x != nil {
		return x.StreamingSidecar
	}
	return nil
}

func (x *Message_VideoMessage) GetGifAttribution() Message_VideoMessage_Attribution {
	if x != nil && x.GifAttribution != nil {
		return *x.GifAttribution
	}
	return Message_VideoMessage_NONE
}

func (x *Message_VideoMessage) GetViewOnce() bool {
	if x != nil && x.ViewOnce != nil {
		return *x.ViewOnce
	}
	return false
}

func (x *Message_VideoMessage) GetThumbnailDirectPath() string {
	if x != nil && x.ThumbnailDirectPath != nil {
		return *x.ThumbnailDirectPath
	}
	return ""
}

func (x *Message_VideoMessage) GetThumbnailSha256() []byte {
	if x != nil {
		return x.ThumbnailSha256
	}
	return nil
}

func (x *Message_VideoMessage) GetThumbnailEncSha256() []byte {
	if x != nil {
		return x.ThumbnailEncSha256
	}
	return nil
}

func (x *Message_VideoMessage) GetStaticUrl() string {
	if x != nil && x.StaticUrl != nil {
		return *x.StaticUrl
	}
	return ""
}

type Message_ButtonsMessage_Button struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ButtonId       *string                                       `protobuf:"bytes,1,opt,name=button_id,json=buttonId" json:"button_id,omitempty"`
	ButtonText     *Message_ButtonsMessage_Button_ButtonText     `protobuf:"bytes,2,opt,name=button_text,json=buttonText" json:"button_text,omitempty"`
	Type           *Message_ButtonsMessage_Button_Type           `protobuf:"varint,3,opt,name=type,enum=Message_ButtonsMessage_Button_Type" json:"type,omitempty"`
	NativeFlowInfo *Message_ButtonsMessage_Button_NativeFlowInfo `protobuf:"bytes,4,opt,name=native_flow_info,json=nativeFlowInfo" json:"native_flow_info,omitempty"`
}

func (x *Message_ButtonsMessage_Button) Reset() {
	*x = Message_ButtonsMessage_Button{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wa_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_ButtonsMessage_Button) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_ButtonsMessage_Button) ProtoMessage() {}

func (x *Message_ButtonsMessage_Button) ProtoReflect() protoreflect.Message {
	mi := &file_wa_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_ButtonsMessage_Button.ProtoReflect.Descriptor instead.
func (*Message_ButtonsMessage_Button) Descriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{10, 8, 0}
}

func (x *Message_ButtonsMessage_Button) GetButtonId() string {
	if x != nil && x.ButtonId != nil {
		return *x.ButtonId
	}
	return ""
}

func (x *Message_ButtonsMessage_Button) GetButtonText() *Message_ButtonsMessage_Button_ButtonText {
	if x != nil {
		return x.ButtonText
	}
	return nil
}

func (x *Message_ButtonsMessage_Button) GetType() Message_ButtonsMessage_Button_Type {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return Message_ButtonsMessage_Button_UNKNOWN
}

func (x *Message_ButtonsMessage_Button) GetNativeFlowInfo() *Message_ButtonsMessage_Button_NativeFlowInfo {
	if x != nil {
		return x.NativeFlowInfo
	}
	return nil
}

type Message_ButtonsMessage_Button_ButtonText struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DisplayText *string `protobuf:"bytes,1,opt,name=display_text,json=displayText" json:"display_text,omitempty"`
}

func (x *Message_ButtonsMessage_Button_ButtonText) Reset() {
	*x = Message_ButtonsMessage_Button_ButtonText{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wa_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_ButtonsMessage_Button_ButtonText) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_ButtonsMessage_Button_ButtonText) ProtoMessage() {}

func (x *Message_ButtonsMessage_Button_ButtonText) ProtoReflect() protoreflect.Message {
	mi := &file_wa_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_ButtonsMessage_Button_ButtonText.ProtoReflect.Descriptor instead.
func (*Message_ButtonsMessage_Button_ButtonText) Descriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{10, 8, 0, 0}
}

func (x *Message_ButtonsMessage_Button_ButtonText) GetDisplayText() string {
	if x != nil && x.DisplayText != nil {
		return *x.DisplayText
	}
	return ""
}

type Message_ButtonsMessage_Button_NativeFlowInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	ParamsJson *string `protobuf:"bytes,2,opt,name=params_json,json=paramsJson" json:"params_json,omitempty"`
}

func (x *Message_ButtonsMessage_Button_NativeFlowInfo) Reset() {
	*x = Message_ButtonsMessage_Button_NativeFlowInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wa_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_ButtonsMessage_Button_NativeFlowInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_ButtonsMessage_Button_NativeFlowInfo) ProtoMessage() {}

func (x *Message_ButtonsMessage_Button_NativeFlowInfo) ProtoReflect() protoreflect.Message {
	mi := &file_wa_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_ButtonsMessage_Button_NativeFlowInfo.ProtoReflect.Descriptor instead.
func (*Message_ButtonsMessage_Button_NativeFlowInfo) Descriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{10, 8, 0, 1}
}

func (x *Message_ButtonsMessage_Button_NativeFlowInfo) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *Message_ButtonsMessage_Button_NativeFlowInfo) GetParamsJson() string {
	if x != nil && x.ParamsJson != nil {
		return *x.ParamsJson
	}
	return ""
}

type Message_HighlyStructuredMessage_HSMLocalizableParameter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Default *string `protobuf:"bytes,1,opt,name=default" json:"default,omitempty"`
	// Types that are assignable to ParamOneof:
	//
	//	*Message_HighlyStructuredMessage_HSMLocalizableParameter_Currency
	//	*Message_HighlyStructuredMessage_HSMLocalizableParameter_DateTime
	ParamOneof isMessage_HighlyStructuredMessage_HSMLocalizableParameter_ParamOneof `protobuf_oneof:"param_oneof"`
}

func (x *Message_HighlyStructuredMessage_HSMLocalizableParameter) Reset() {
	*x = Message_HighlyStructuredMessage_HSMLocalizableParameter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wa_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_HighlyStructuredMessage_HSMLocalizableParameter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_HighlyStructuredMessage_HSMLocalizableParameter) ProtoMessage() {}

func (x *Message_HighlyStructuredMessage_HSMLocalizableParameter) ProtoReflect() protoreflect.Message {
	mi := &file_wa_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_HighlyStructuredMessage_HSMLocalizableParameter.ProtoReflect.Descriptor instead.
func (*Message_HighlyStructuredMessage_HSMLocalizableParameter) Descriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{10, 22, 0}
}

func (x *Message_HighlyStructuredMessage_HSMLocalizableParameter) GetDefault() string {
	if x != nil && x.Default != nil {
		return *x.Default
	}
	return ""
}

func (m *Message_HighlyStructuredMessage_HSMLocalizableParameter) GetParamOneof() isMessage_HighlyStructuredMessage_HSMLocalizableParameter_ParamOneof {
	if m != nil {
		return m.ParamOneof
	}
	return nil
}

func (x *Message_HighlyStructuredMessage_HSMLocalizableParameter) GetCurrency() *Message_HighlyStructuredMessage_HSMLocalizableParameter_HSMCurrency {
	if x, ok := x.GetParamOneof().(*Message_HighlyStructuredMessage_HSMLocalizableParameter_Currency); ok {
		return x.Currency
	}
	return nil
}

func (x *Message_HighlyStructuredMessage_HSMLocalizableParameter) GetDateTime() *Message_HighlyStructuredMessage_HSMLocalizableParameter_HSMDateTime {
	if x, ok := x.GetParamOneof().(*Message_HighlyStructuredMessage_HSMLocalizableParameter_DateTime); ok {
		return x.DateTime
	}
	return nil
}

type isMessage_HighlyStructuredMessage_HSMLocalizableParameter_ParamOneof interface {
	isMessage_HighlyStructuredMessage_HSMLocalizableParameter_ParamOneof()
}

type Message_HighlyStructuredMessage_HSMLocalizableParameter_Currency struct {
	Currency *Message_HighlyStructuredMessage_HSMLocalizableParameter_HSMCurrency `protobuf:"bytes,2,opt,name=currency,oneof"`
}

type Message_HighlyStructuredMessage_HSMLocalizableParameter_DateTime struct {
	DateTime *Message_HighlyStructuredMessage_HSMLocalizableParameter_HSMDateTime `protobuf:"bytes,3,opt,name=date_time,json=dateTime,oneof"`
}

func (*Message_HighlyStructuredMessage_HSMLocalizableParameter_Currency) isMessage_HighlyStructuredMessage_HSMLocalizableParameter_ParamOneof() {
}

func (*Message_HighlyStructuredMessage_HSMLocalizableParameter_DateTime) isMessage_HighlyStructuredMessage_HSMLocalizableParameter_ParamOneof() {
}

type Message_HighlyStructuredMessage_HSMLocalizableParameter_HSMCurrency struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrencyCode *string `protobuf:"bytes,1,opt,name=currency_code,json=currencyCode" json:"currency_code,omitempty"`
	Amount_1000  *int64  `protobuf:"varint,2,opt,name=amount_1000,json=amount1000" json:"amount_1000,omitempty"`
}

func (x *Message_HighlyStructuredMessage_HSMLocalizableParameter_HSMCurrency) Reset() {
	*x = Message_HighlyStructuredMessage_HSMLocalizableParameter_HSMCurrency{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wa_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_HighlyStructuredMessage_HSMLocalizableParameter_HSMCurrency) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_HighlyStructuredMessage_HSMLocalizableParameter_HSMCurrency) ProtoMessage() {}

func (x *Message_HighlyStructuredMessage_HSMLocalizableParameter_HSMCurrency) ProtoReflect() protoreflect.Message {
	mi := &file_wa_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_HighlyStructuredMessage_HSMLocalizableParameter_HSMCurrency.ProtoReflect.Descriptor instead.
func (*Message_HighlyStructuredMessage_HSMLocalizableParameter_HSMCurrency) Descriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{10, 22, 0, 0}
}

func (x *Message_HighlyStructuredMessage_HSMLocalizableParameter_HSMCurrency) GetCurrencyCode() string {
	if x != nil && x.CurrencyCode != nil {
		return *x.CurrencyCode
	}
	return ""
}

func (x *Message_HighlyStructuredMessage_HSMLocalizableParameter_HSMCurrency) GetAmount_1000() int64 {
	if x != nil && x.Amount_1000 != nil {
		return *x.Amount_1000
	}
	return 0
}

type Message_HighlyStructuredMessage_HSMLocalizableParameter_HSMDateTime struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to DatetimeOneof:
	//
	//	*Message_HighlyStructuredMessage_HSMLocalizableParameter_HSMDateTime_Component
	//	*Message_HighlyStructuredMessage_HSMLocalizableParameter_HSMDateTime_UnixEpoch
	DatetimeOneof isMessage_HighlyStructuredMessage_HSMLocalizableParameter_HSMDateTime_DatetimeOneof `protobuf_oneof:"datetime_oneof"`
}

func (x *Message_HighlyStructuredMessage_HSMLocalizableParameter_HSMDateTime) Reset() {
	*x = Message_HighlyStructuredMessage_HSMLocalizableParameter_HSMDateTime{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wa_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_HighlyStructuredMessage_HSMLocalizableParameter_HSMDateTime) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_HighlyStructuredMessage_HSMLocalizableParameter_HSMDateTime) ProtoMessage() {}

func (x *Message_HighlyStructuredMessage_HSMLocalizableParameter_HSMDateTime) ProtoReflect() protoreflect.Message {
	mi := &file_wa_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_HighlyStructuredMessage_HSMLocalizableParameter_HSMDateTime.ProtoReflect.Descriptor instead.
func (*Message_HighlyStructuredMessage_HSMLocalizableParameter_HSMDateTime) Descriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{10, 22, 0, 1}
}

func (m *Message_HighlyStructuredMessage_HSMLocalizableParameter_HSMDateTime) GetDatetimeOneof() isMessage_HighlyStructuredMessage_HSMLocalizableParameter_HSMDateTime_DatetimeOneof {
	if m != nil {
		return m.DatetimeOneof
	}
	return nil
}

func (x *Message_HighlyStructuredMessage_HSMLocalizableParameter_HSMDateTime) GetComponent() *Message_HighlyStructuredMessage_HSMLocalizableParameter_HSMDateTime_HSMDateTimeComponent {
	if x, ok := x.GetDatetimeOneof().(*Message_HighlyStructuredMessage_HSMLocalizableParameter_HSMDateTime_Component); ok {
		return x.Component
	}
	return nil
}

func (x *Message_HighlyStructuredMessage_HSMLocalizableParameter_HSMDateTime) GetUnixEpoch() *Message_HighlyStructuredMessage_HSMLocalizableParameter_HSMDateTime_HSMDateTimeUnixEpoch {
	if x, ok := x.GetDatetimeOneof().(*Message_HighlyStructuredMessage_HSMLocalizableParameter_HSMDateTime_UnixEpoch); ok {
		return x.UnixEpoch
	}
	return nil
}

type isMessage_HighlyStructuredMessage_HSMLocalizableParameter_HSMDateTime_DatetimeOneof interface {
	isMessage_HighlyStructuredMessage_HSMLocalizableParameter_HSMDateTime_DatetimeOneof()
}

type Message_HighlyStructuredMessage_HSMLocalizableParameter_HSMDateTime_Component struct {
	Component *Message_HighlyStructuredMessage_HSMLocalizableParameter_HSMDateTime_HSMDateTimeComponent `protobuf:"bytes,1,opt,name=component,oneof"`
}

type Message_HighlyStructuredMessage_HSMLocalizableParameter_HSMDateTime_UnixEpoch struct {
	UnixEpoch *Message_HighlyStructuredMessage_HSMLocalizableParameter_HSMDateTime_HSMDateTimeUnixEpoch `protobuf:"bytes,2,opt,name=unix_epoch,json=unixEpoch,oneof"`
}

func (*Message_HighlyStructuredMessage_HSMLocalizableParameter_HSMDateTime_Component) isMessage_HighlyStructuredMessage_HSMLocalizableParameter_HSMDateTime_DatetimeOneof() {
}

func (*Message_HighlyStructuredMessage_HSMLocalizableParameter_HSMDateTime_UnixEpoch) isMessage_HighlyStructuredMessage_HSMLocalizableParameter_HSMDateTime_DatetimeOneof() {
}

type Message_HighlyStructuredMessage_HSMLocalizableParameter_HSMDateTime_HSMDateTimeComponent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DayOfWeek  *Message_HighlyStructuredMessage_HSMLocalizableParameter_HSMDateTime_HSMDateTimeComponent_DayOfWeekType `protobuf:"varint,1,opt,name=day_of_week,json=dayOfWeek,enum=Message_HighlyStructuredMessage_HSMLocalizableParameter_HSMDateTime_HSMDateTimeComponent_DayOfWeekType" json:"day_of_week,omitempty"`
	Year       *uint32                                                                                                 `protobuf:"varint,2,opt,name=year" json:"year,omitempty"`
	Month      *uint32                                                                                                 `protobuf:"varint,3,opt,name=month" json:"month,omitempty"`
	DayOfMonth *uint32                                                                                                 `protobuf:"varint,4,opt,name=day_of_month,json=dayOfMonth" json:"day_of_month,omitempty"`
	Hour       *uint32                                                                                                 `protobuf:"varint,5,opt,name=hour" json:"hour,omitempty"`
	Minute     *uint32                                                                                                 `protobuf:"varint,6,opt,name=minute" json:"minute,omitempty"`
	Calendar   *Message_HighlyStructuredMessage_HSMLocalizableParameter_HSMDateTime_HSMDateTimeComponent_CalendarType  `protobuf:"varint,7,opt,name=calendar,enum=Message_HighlyStructuredMessage_HSMLocalizableParameter_HSMDateTime_HSMDateTimeComponent_CalendarType" json:"calendar,omitempty"`
}

func (x *Message_HighlyStructuredMessage_HSMLocalizableParameter_HSMDateTime_HSMDateTimeComponent) Reset() {
	*x = Message_HighlyStructuredMessage_HSMLocalizableParameter_HSMDateTime_HSMDateTimeComponent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wa_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_HighlyStructuredMessage_HSMLocalizableParameter_HSMDateTime_HSMDateTimeComponent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_HighlyStructuredMessage_HSMLocalizableParameter_HSMDateTime_HSMDateTimeComponent) ProtoMessage() {
}

func (x *Message_HighlyStructuredMessage_HSMLocalizableParameter_HSMDateTime_HSMDateTimeComponent) ProtoReflect() protoreflect.Message {
	mi := &file_wa_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_HighlyStructuredMessage_HSMLocalizableParameter_HSMDateTime_HSMDateTimeComponent.ProtoReflect.Descriptor instead.
func (*Message_HighlyStructuredMessage_HSMLocalizableParameter_HSMDateTime_HSMDateTimeComponent) Descriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{10, 22, 0, 1, 0}
}

func (x *Message_HighlyStructuredMessage_HSMLocalizableParameter_HSMDateTime_HSMDateTimeComponent) GetDayOfWeek() Message_HighlyStructuredMessage_HSMLocalizableParameter_HSMDateTime_HSMDateTimeComponent_DayOfWeekType {
	if x != nil && x.DayOfWeek != nil {
		return *x.DayOfWeek
	}
	return Message_HighlyStructuredMessage_HSMLocalizableParameter_HSMDateTime_HSMDateTimeComponent_MONDAY
}

func (x *Message_HighlyStructuredMessage_HSMLocalizableParameter_HSMDateTime_HSMDateTimeComponent) GetYear() uint32 {
	if x != nil && x.Year != nil {
		return *x.Year
	}
	return 0
}

func (x *Message_HighlyStructuredMessage_HSMLocalizableParameter_HSMDateTime_HSMDateTimeComponent) GetMonth() uint32 {
	if x != nil && x.Month != nil {
		return *x.Month
	}
	return 0
}

func (x *Message_HighlyStructuredMessage_HSMLocalizableParameter_HSMDateTime_HSMDateTimeComponent) GetDayOfMonth() uint32 {
	if x != nil && x.DayOfMonth != nil {
		return *x.DayOfMonth
	}
	return 0
}

func (x *Message_HighlyStructuredMessage_HSMLocalizableParameter_HSMDateTime_HSMDateTimeComponent) GetHour() uint32 {
	if x != nil && x.Hour != nil {
		return *x.Hour
	}
	return 0
}

func (x *Message_HighlyStructuredMessage_HSMLocalizableParameter_HSMDateTime_HSMDateTimeComponent) GetMinute() uint32 {
	if x != nil && x.Minute != nil {
		return *x.Minute
	}
	return 0
}

func (x *Message_HighlyStructuredMessage_HSMLocalizableParameter_HSMDateTime_HSMDateTimeComponent) GetCalendar() Message_HighlyStructuredMessage_HSMLocalizableParameter_HSMDateTime_HSMDateTimeComponent_CalendarType {
	if x != nil && x.Calendar != nil {
		return *x.Calendar
	}
	return Message_HighlyStructuredMessage_HSMLocalizableParameter_HSMDateTime_HSMDateTimeComponent_GREGORIAN
}

type Message_HighlyStructuredMessage_HSMLocalizableParameter_HSMDateTime_HSMDateTimeUnixEpoch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp *int64 `protobuf:"varint,1,opt,name=timestamp" json:"timestamp,omitempty"`
}

func (x *Message_HighlyStructuredMessage_HSMLocalizableParameter_HSMDateTime_HSMDateTimeUnixEpoch) Reset() {
	*x = Message_HighlyStructuredMessage_HSMLocalizableParameter_HSMDateTime_HSMDateTimeUnixEpoch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wa_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_HighlyStructuredMessage_HSMLocalizableParameter_HSMDateTime_HSMDateTimeUnixEpoch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_HighlyStructuredMessage_HSMLocalizableParameter_HSMDateTime_HSMDateTimeUnixEpoch) ProtoMessage() {
}

func (x *Message_HighlyStructuredMessage_HSMLocalizableParameter_HSMDateTime_HSMDateTimeUnixEpoch) ProtoReflect() protoreflect.Message {
	mi := &file_wa_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_HighlyStructuredMessage_HSMLocalizableParameter_HSMDateTime_HSMDateTimeUnixEpoch.ProtoReflect.Descriptor instead.
func (*Message_HighlyStructuredMessage_HSMLocalizableParameter_HSMDateTime_HSMDateTimeUnixEpoch) Descriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{10, 22, 0, 1, 1}
}

func (x *Message_HighlyStructuredMessage_HSMLocalizableParameter_HSMDateTime_HSMDateTimeUnixEpoch) GetTimestamp() int64 {
	if x != nil && x.Timestamp != nil {
		return *x.Timestamp
	}
	return 0
}

type Message_InteractiveMessage_Body struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text *string `protobuf:"bytes,1,opt,name=text" json:"text,omitempty"`
}

func (x *Message_InteractiveMessage_Body) Reset() {
	*x = Message_InteractiveMessage_Body{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wa_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_InteractiveMessage_Body) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_InteractiveMessage_Body) ProtoMessage() {}

func (x *Message_InteractiveMessage_Body) ProtoReflect() protoreflect.Message {
	mi := &file_wa_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_InteractiveMessage_Body.ProtoReflect.Descriptor instead.
func (*Message_InteractiveMessage_Body) Descriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{10, 26, 0}
}

func (x *Message_InteractiveMessage_Body) GetText() string {
	if x != nil && x.Text != nil {
		return *x.Text
	}
	return ""
}

type Message_InteractiveMessage_CollectionMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BizJid         *string `protobuf:"bytes,1,opt,name=biz_jid,json=bizJid" json:"biz_jid,omitempty"`
	Id             *string `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
	MessageVersion *int32  `protobuf:"varint,3,opt,name=message_version,json=messageVersion" json:"message_version,omitempty"`
}

func (x *Message_InteractiveMessage_CollectionMessage) Reset() {
	*x = Message_InteractiveMessage_CollectionMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wa_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_InteractiveMessage_CollectionMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_InteractiveMessage_CollectionMessage) ProtoMessage() {}

func (x *Message_InteractiveMessage_CollectionMessage) ProtoReflect() protoreflect.Message {
	mi := &file_wa_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_InteractiveMessage_CollectionMessage.ProtoReflect.Descriptor instead.
func (*Message_InteractiveMessage_CollectionMessage) Descriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{10, 26, 1}
}

func (x *Message_InteractiveMessage_CollectionMessage) GetBizJid() string {
	if x != nil && x.BizJid != nil {
		return *x.BizJid
	}
	return ""
}

func (x *Message_InteractiveMessage_CollectionMessage) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *Message_InteractiveMessage_CollectionMessage) GetMessageVersion() int32 {
	if x != nil && x.MessageVersion != nil {
		return *x.MessageVersion
	}
	return 0
}

type Message_InteractiveMessage_Footer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text *string `protobuf:"bytes,1,opt,name=text" json:"text,omitempty"`
}

func (x *Message_InteractiveMessage_Footer) Reset() {
	*x = Message_InteractiveMessage_Footer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wa_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_InteractiveMessage_Footer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_InteractiveMessage_Footer) ProtoMessage() {}

func (x *Message_InteractiveMessage_Footer) ProtoReflect() protoreflect.Message {
	mi := &file_wa_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_InteractiveMessage_Footer.ProtoReflect.Descriptor instead.
func (*Message_InteractiveMessage_Footer) Descriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{10, 26, 2}
}

func (x *Message_InteractiveMessage_Footer) GetText() string {
	if x != nil && x.Text != nil {
		return *x.Text
	}
	return ""
}

type Message_InteractiveMessage_Header struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title              *string `protobuf:"bytes,1,opt,name=title" json:"title,omitempty"`
	Subtitle           *string `protobuf:"bytes,2,opt,name=subtitle" json:"subtitle,omitempty"`
	HasMediaAttachment *bool   `protobuf:"varint,5,opt,name=has_media_attachment,json=hasMediaAttachment" json:"has_media_attachment,omitempty"`
	// Types that are assignable to Media:
	//
	//	*Message_InteractiveMessage_Header_DocumentMessage
	//	*Message_InteractiveMessage_Header_ImageMessage
	//	*Message_InteractiveMessage_Header_JpegThumbnail
	//	*Message_InteractiveMessage_Header_VideoMessage
	Media isMessage_InteractiveMessage_Header_Media `protobuf_oneof:"media"`
}

func (x *Message_InteractiveMessage_Header) Reset() {
	*x = Message_InteractiveMessage_Header{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wa_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_InteractiveMessage_Header) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_InteractiveMessage_Header) ProtoMessage() {}

func (x *Message_InteractiveMessage_Header) ProtoReflect() protoreflect.Message {
	mi := &file_wa_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_InteractiveMessage_Header.ProtoReflect.Descriptor instead.
func (*Message_InteractiveMessage_Header) Descriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{10, 26, 3}
}

func (x *Message_InteractiveMessage_Header) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

func (x *Message_InteractiveMessage_Header) GetSubtitle() string {
	if x != nil && x.Subtitle != nil {
		return *x.Subtitle
	}
	return ""
}

func (x *Message_InteractiveMessage_Header) GetHasMediaAttachment() bool {
	if x != nil && x.HasMediaAttachment != nil {
		return *x.HasMediaAttachment
	}
	return false
}

func (m *Message_InteractiveMessage_Header) GetMedia() isMessage_InteractiveMessage_Header_Media {
	if m != nil {
		return m.Media
	}
	return nil
}

func (x *Message_InteractiveMessage_Header) GetDocumentMessage() *Message_DocumentMessage {
	if x, ok := x.GetMedia().(*Message_InteractiveMessage_Header_DocumentMessage); ok {
		return x.DocumentMessage
	}
	return nil
}

func (x *Message_InteractiveMessage_Header) GetImageMessage() *Message_ImageMessage {
	if x, ok := x.GetMedia().(*Message_InteractiveMessage_Header_ImageMessage); ok {
		return x.ImageMessage
	}
	return nil
}

func (x *Message_InteractiveMessage_Header) GetJpegThumbnail() []byte {
	if x, ok := x.GetMedia().(*Message_InteractiveMessage_Header_JpegThumbnail); ok {
		return x.JpegThumbnail
	}
	return nil
}

func (x *Message_InteractiveMessage_Header) GetVideoMessage() *Message_VideoMessage {
	if x, ok := x.GetMedia().(*Message_InteractiveMessage_Header_VideoMessage); ok {
		return x.VideoMessage
	}
	return nil
}

type isMessage_InteractiveMessage_Header_Media interface {
	isMessage_InteractiveMessage_Header_Media()
}

type Message_InteractiveMessage_Header_DocumentMessage struct {
	DocumentMessage *Message_DocumentMessage `protobuf:"bytes,3,opt,name=document_message,json=documentMessage,oneof"`
}

type Message_InteractiveMessage_Header_ImageMessage struct {
	ImageMessage *Message_ImageMessage `protobuf:"bytes,4,opt,name=image_message,json=imageMessage,oneof"`
}

type Message_InteractiveMessage_Header_JpegThumbnail struct {
	JpegThumbnail []byte `protobuf:"bytes,6,opt,name=jpeg_thumbnail,json=jpegThumbnail,oneof"`
}

type Message_InteractiveMessage_Header_VideoMessage struct {
	VideoMessage *Message_VideoMessage `protobuf:"bytes,7,opt,name=video_message,json=videoMessage,oneof"`
}

func (*Message_InteractiveMessage_Header_DocumentMessage) isMessage_InteractiveMessage_Header_Media() {
}

func (*Message_InteractiveMessage_Header_ImageMessage) isMessage_InteractiveMessage_Header_Media() {}

func (*Message_InteractiveMessage_Header_JpegThumbnail) isMessage_InteractiveMessage_Header_Media() {}

func (*Message_InteractiveMessage_Header_VideoMessage) isMessage_InteractiveMessage_Header_Media() {}

type Message_InteractiveMessage_NativeFlowMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Buttons           []*Message_InteractiveMessage_NativeFlowMessage_NativeFlowButton `protobuf:"bytes,1,rep,name=buttons" json:"buttons,omitempty"`
	MessageParamsJson *string                                                          `protobuf:"bytes,2,opt,name=message_params_json,json=messageParamsJson" json:"message_params_json,omitempty"`
	MessageVersion    *int32                                                           `protobuf:"varint,3,opt,name=message_version,json=messageVersion" json:"message_version,omitempty"`
}

func (x *Message_InteractiveMessage_NativeFlowMessage) Reset() {
	*x = Message_InteractiveMessage_NativeFlowMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wa_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_InteractiveMessage_NativeFlowMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_InteractiveMessage_NativeFlowMessage) ProtoMessage() {}

func (x *Message_InteractiveMessage_NativeFlowMessage) ProtoReflect() protoreflect.Message {
	mi := &file_wa_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_InteractiveMessage_NativeFlowMessage.ProtoReflect.Descriptor instead.
func (*Message_InteractiveMessage_NativeFlowMessage) Descriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{10, 26, 4}
}

func (x *Message_InteractiveMessage_NativeFlowMessage) GetButtons() []*Message_InteractiveMessage_NativeFlowMessage_NativeFlowButton {
	if x != nil {
		return x.Buttons
	}
	return nil
}

func (x *Message_InteractiveMessage_NativeFlowMessage) GetMessageParamsJson() string {
	if x != nil && x.MessageParamsJson != nil {
		return *x.MessageParamsJson
	}
	return ""
}

func (x *Message_InteractiveMessage_NativeFlowMessage) GetMessageVersion() int32 {
	if x != nil && x.MessageVersion != nil {
		return *x.MessageVersion
	}
	return 0
}

type Message_InteractiveMessage_ShopMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             *string                                         `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Surface        *Message_InteractiveMessage_ShopMessage_Surface `protobuf:"varint,2,opt,name=surface,enum=Message_InteractiveMessage_ShopMessage_Surface" json:"surface,omitempty"`
	MessageVersion *int32                                          `protobuf:"varint,3,opt,name=message_version,json=messageVersion" json:"message_version,omitempty"`
}

func (x *Message_InteractiveMessage_ShopMessage) Reset() {
	*x = Message_InteractiveMessage_ShopMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wa_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_InteractiveMessage_ShopMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_InteractiveMessage_ShopMessage) ProtoMessage() {}

func (x *Message_InteractiveMessage_ShopMessage) ProtoReflect() protoreflect.Message {
	mi := &file_wa_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_InteractiveMessage_ShopMessage.ProtoReflect.Descriptor instead.
func (*Message_InteractiveMessage_ShopMessage) Descriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{10, 26, 5}
}

func (x *Message_InteractiveMessage_ShopMessage) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *Message_InteractiveMessage_ShopMessage) GetSurface() Message_InteractiveMessage_ShopMessage_Surface {
	if x != nil && x.Surface != nil {
		return *x.Surface
	}
	return Message_InteractiveMessage_ShopMessage_UNKNOWN_SURFACE
}

func (x *Message_InteractiveMessage_ShopMessage) GetMessageVersion() int32 {
	if x != nil && x.MessageVersion != nil {
		return *x.MessageVersion
	}
	return 0
}

type Message_InteractiveMessage_NativeFlowMessage_NativeFlowButton struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name             *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	ButtonParamsJson *string `protobuf:"bytes,2,opt,name=button_params_json,json=buttonParamsJson" json:"button_params_json,omitempty"`
}

func (x *Message_InteractiveMessage_NativeFlowMessage_NativeFlowButton) Reset() {
	*x = Message_InteractiveMessage_NativeFlowMessage_NativeFlowButton{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wa_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_InteractiveMessage_NativeFlowMessage_NativeFlowButton) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_InteractiveMessage_NativeFlowMessage_NativeFlowButton) ProtoMessage() {}

func (x *Message_InteractiveMessage_NativeFlowMessage_NativeFlowButton) ProtoReflect() protoreflect.Message {
	mi := &file_wa_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_InteractiveMessage_NativeFlowMessage_NativeFlowButton.ProtoReflect.Descriptor instead.
func (*Message_InteractiveMessage_NativeFlowMessage_NativeFlowButton) Descriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{10, 26, 4, 0}
}

func (x *Message_InteractiveMessage_NativeFlowMessage_NativeFlowButton) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *Message_InteractiveMessage_NativeFlowMessage_NativeFlowButton) GetButtonParamsJson() string {
	if x != nil && x.ButtonParamsJson != nil {
		return *x.ButtonParamsJson
	}
	return ""
}

type Message_InteractiveResponseMessage_Body struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text *string `protobuf:"bytes,1,opt,name=text" json:"text,omitempty"`
}

func (x *Message_InteractiveResponseMessage_Body) Reset() {
	*x = Message_InteractiveResponseMessage_Body{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wa_proto_msgTypes[100]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_InteractiveResponseMessage_Body) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_InteractiveResponseMessage_Body) ProtoMessage() {}

func (x *Message_InteractiveResponseMessage_Body) ProtoReflect() protoreflect.Message {
	mi := &file_wa_proto_msgTypes[100]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_InteractiveResponseMessage_Body.ProtoReflect.Descriptor instead.
func (*Message_InteractiveResponseMessage_Body) Descriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{10, 27, 0}
}

func (x *Message_InteractiveResponseMessage_Body) GetText() string {
	if x != nil && x.Text != nil {
		return *x.Text
	}
	return ""
}

type Message_InteractiveResponseMessage_NativeFlowResponseMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	ParamsJson *string `protobuf:"bytes,2,opt,name=params_json,json=paramsJson" json:"params_json,omitempty"`
	Version    *int32  `protobuf:"varint,3,opt,name=version" json:"version,omitempty"`
}

func (x *Message_InteractiveResponseMessage_NativeFlowResponseMessage) Reset() {
	*x = Message_InteractiveResponseMessage_NativeFlowResponseMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wa_proto_msgTypes[101]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_InteractiveResponseMessage_NativeFlowResponseMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_InteractiveResponseMessage_NativeFlowResponseMessage) ProtoMessage() {}

func (x *Message_InteractiveResponseMessage_NativeFlowResponseMessage) ProtoReflect() protoreflect.Message {
	mi := &file_wa_proto_msgTypes[101]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_InteractiveResponseMessage_NativeFlowResponseMessage.ProtoReflect.Descriptor instead.
func (*Message_InteractiveResponseMessage_NativeFlowResponseMessage) Descriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{10, 27, 1}
}

func (x *Message_InteractiveResponseMessage_NativeFlowResponseMessage) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *Message_InteractiveResponseMessage_NativeFlowResponseMessage) GetParamsJson() string {
	if x != nil && x.ParamsJson != nil {
		return *x.ParamsJson
	}
	return ""
}

func (x *Message_InteractiveResponseMessage_NativeFlowResponseMessage) GetVersion() int32 {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return 0
}

type Message_ListMessage_Product struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductId *string `protobuf:"bytes,1,opt,name=product_id,json=productId" json:"product_id,omitempty"`
}

func (x *Message_ListMessage_Product) Reset() {
	*x = Message_ListMessage_Product{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wa_proto_msgTypes[102]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_ListMessage_Product) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_ListMessage_Product) ProtoMessage() {}

func (x *Message_ListMessage_Product) ProtoReflect() protoreflect.Message {
	mi := &file_wa_proto_msgTypes[102]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_ListMessage_Product.ProtoReflect.Descriptor instead.
func (*Message_ListMessage_Product) Descriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{10, 29, 0}
}

func (x *Message_ListMessage_Product) GetProductId() string {
	if x != nil && x.ProductId != nil {
		return *x.ProductId
	}
	return ""
}

type Message_ListMessage_ProductListHeaderImage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductId     *string `protobuf:"bytes,1,opt,name=product_id,json=productId" json:"product_id,omitempty"`
	JpegThumbnail []byte  `protobuf:"bytes,2,opt,name=jpeg_thumbnail,json=jpegThumbnail" json:"jpeg_thumbnail,omitempty"`
}

func (x *Message_ListMessage_ProductListHeaderImage) Reset() {
	*x = Message_ListMessage_ProductListHeaderImage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wa_proto_msgTypes[103]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_ListMessage_ProductListHeaderImage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_ListMessage_ProductListHeaderImage) ProtoMessage() {}

func (x *Message_ListMessage_ProductListHeaderImage) ProtoReflect() protoreflect.Message {
	mi := &file_wa_proto_msgTypes[103]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_ListMessage_ProductListHeaderImage.ProtoReflect.Descriptor instead.
func (*Message_ListMessage_ProductListHeaderImage) Descriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{10, 29, 1}
}

func (x *Message_ListMessage_ProductListHeaderImage) GetProductId() string {
	if x != nil && x.ProductId != nil {
		return *x.ProductId
	}
	return ""
}

func (x *Message_ListMessage_ProductListHeaderImage) GetJpegThumbnail() []byte {
	if x != nil {
		return x.JpegThumbnail
	}
	return nil
}

type Message_ListMessage_ProductListInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductSections  []*Message_ListMessage_ProductSection       `protobuf:"bytes,1,rep,name=product_sections,json=productSections" json:"product_sections,omitempty"`
	HeaderImage      *Message_ListMessage_ProductListHeaderImage `protobuf:"bytes,2,opt,name=header_image,json=headerImage" json:"header_image,omitempty"`
	BusinessOwnerJid *string                                     `protobuf:"bytes,3,opt,name=business_owner_jid,json=businessOwnerJid" json:"business_owner_jid,omitempty"`
}

func (x *Message_ListMessage_ProductListInfo) Reset() {
	*x = Message_ListMessage_ProductListInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wa_proto_msgTypes[104]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_ListMessage_ProductListInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_ListMessage_ProductListInfo) ProtoMessage() {}

func (x *Message_ListMessage_ProductListInfo) ProtoReflect() protoreflect.Message {
	mi := &file_wa_proto_msgTypes[104]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_ListMessage_ProductListInfo.ProtoReflect.Descriptor instead.
func (*Message_ListMessage_ProductListInfo) Descriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{10, 29, 2}
}

func (x *Message_ListMessage_ProductListInfo) GetProductSections() []*Message_ListMessage_ProductSection {
	if x != nil {
		return x.ProductSections
	}
	return nil
}

func (x *Message_ListMessage_ProductListInfo) GetHeaderImage() *Message_ListMessage_ProductListHeaderImage {
	if x != nil {
		return x.HeaderImage
	}
	return nil
}

func (x *Message_ListMessage_ProductListInfo) GetBusinessOwnerJid() string {
	if x != nil && x.BusinessOwnerJid != nil {
		return *x.BusinessOwnerJid
	}
	return ""
}

type Message_ListMessage_ProductSection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title    *string                        `protobuf:"bytes,1,opt,name=title" json:"title,omitempty"`
	Products []*Message_ListMessage_Product `protobuf:"bytes,2,rep,name=products" json:"products,omitempty"`
}

func (x *Message_ListMessage_ProductSection) Reset() {
	*x = Message_ListMessage_ProductSection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wa_proto_msgTypes[105]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_ListMessage_ProductSection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_ListMessage_ProductSection) ProtoMessage() {}

func (x *Message_ListMessage_ProductSection) ProtoReflect() protoreflect.Message {
	mi := &file_wa_proto_msgTypes[105]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_ListMessage_ProductSection.ProtoReflect.Descriptor instead.
func (*Message_ListMessage_ProductSection) Descriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{10, 29, 3}
}

func (x *Message_ListMessage_ProductSection) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

func (x *Message_ListMessage_ProductSection) GetProducts() []*Message_ListMessage_Product {
	if x != nil {
		return x.Products
	}
	return nil
}

type Message_ListMessage_Row struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title       *string `protobuf:"bytes,1,opt,name=title" json:"title,omitempty"`
	Description *string `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	RowId       *string `protobuf:"bytes,3,opt,name=row_id,json=rowId" json:"row_id,omitempty"`
}

func (x *Message_ListMessage_Row) Reset() {
	*x = Message_ListMessage_Row{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wa_proto_msgTypes[106]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_ListMessage_Row) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_ListMessage_Row) ProtoMessage() {}

func (x *Message_ListMessage_Row) ProtoReflect() protoreflect.Message {
	mi := &file_wa_proto_msgTypes[106]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_ListMessage_Row.ProtoReflect.Descriptor instead.
func (*Message_ListMessage_Row) Descriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{10, 29, 4}
}

func (x *Message_ListMessage_Row) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

func (x *Message_ListMessage_Row) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *Message_ListMessage_Row) GetRowId() string {
	if x != nil && x.RowId != nil {
		return *x.RowId
	}
	return ""
}

type Message_ListMessage_Section struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title *string                    `protobuf:"bytes,1,opt,name=title" json:"title,omitempty"`
	Rows  []*Message_ListMessage_Row `protobuf:"bytes,2,rep,name=rows" json:"rows,omitempty"`
}

func (x *Message_ListMessage_Section) Reset() {
	*x = Message_ListMessage_Section{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wa_proto_msgTypes[107]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_ListMessage_Section) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_ListMessage_Section) ProtoMessage() {}

func (x *Message_ListMessage_Section) ProtoReflect() protoreflect.Message {
	mi := &file_wa_proto_msgTypes[107]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_ListMessage_Section.ProtoReflect.Descriptor instead.
func (*Message_ListMessage_Section) Descriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{10, 29, 5}
}

func (x *Message_ListMessage_Section) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

func (x *Message_ListMessage_Section) GetRows() []*Message_ListMessage_Row {
	if x != nil {
		return x.Rows
	}
	return nil
}

type Message_ListResponseMessage_SingleSelectReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SelectedRowId *string `protobuf:"bytes,1,opt,name=selected_row_id,json=selectedRowId" json:"selected_row_id,omitempty"`
}

func (x *Message_ListResponseMessage_SingleSelectReply) Reset() {
	*x = Message_ListResponseMessage_SingleSelectReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wa_proto_msgTypes[108]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_ListResponseMessage_SingleSelectReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_ListResponseMessage_SingleSelectReply) ProtoMessage() {}

func (x *Message_ListResponseMessage_SingleSelectReply) ProtoReflect() protoreflect.Message {
	mi := &file_wa_proto_msgTypes[108]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_ListResponseMessage_SingleSelectReply.ProtoReflect.Descriptor instead.
func (*Message_ListResponseMessage_SingleSelectReply) Descriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{10, 30, 0}
}

func (x *Message_ListResponseMessage_SingleSelectReply) GetSelectedRowId() string {
	if x != nil && x.SelectedRowId != nil {
		return *x.SelectedRowId
	}
	return ""
}

type Message_PeerDataOperationRequestMessage_RequestStickerReupload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileSha256 *string `protobuf:"bytes,1,opt,name=file_sha256,json=fileSha256" json:"file_sha256,omitempty"`
}

func (x *Message_PeerDataOperationRequestMessage_RequestStickerReupload) Reset() {
	*x = Message_PeerDataOperationRequestMessage_RequestStickerReupload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wa_proto_msgTypes[109]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_PeerDataOperationRequestMessage_RequestStickerReupload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_PeerDataOperationRequestMessage_RequestStickerReupload) ProtoMessage() {}

func (x *Message_PeerDataOperationRequestMessage_RequestStickerReupload) ProtoReflect() protoreflect.Message {
	mi := &file_wa_proto_msgTypes[109]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_PeerDataOperationRequestMessage_RequestStickerReupload.ProtoReflect.Descriptor instead.
func (*Message_PeerDataOperationRequestMessage_RequestStickerReupload) Descriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{10, 35, 0}
}

func (x *Message_PeerDataOperationRequestMessage_RequestStickerReupload) GetFileSha256() string {
	if x != nil && x.FileSha256 != nil {
		return *x.FileSha256
	}
	return ""
}

type Message_PeerDataOperationRequestMessage_RequestUrlPreview struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url *string `protobuf:"bytes,1,opt,name=url" json:"url,omitempty"`
}

func (x *Message_PeerDataOperationRequestMessage_RequestUrlPreview) Reset() {
	*x = Message_PeerDataOperationRequestMessage_RequestUrlPreview{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wa_proto_msgTypes[110]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_PeerDataOperationRequestMessage_RequestUrlPreview) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_PeerDataOperationRequestMessage_RequestUrlPreview) ProtoMessage() {}

func (x *Message_PeerDataOperationRequestMessage_RequestUrlPreview) ProtoReflect() protoreflect.Message {
	mi := &file_wa_proto_msgTypes[110]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_PeerDataOperationRequestMessage_RequestUrlPreview.ProtoReflect.Descriptor instead.
func (*Message_PeerDataOperationRequestMessage_RequestUrlPreview) Descriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{10, 35, 1}
}

func (x *Message_PeerDataOperationRequestMessage_RequestUrlPreview) GetUrl() string {
	if x != nil && x.Url != nil {
		return *x.Url
	}
	return ""
}

type Message_PeerDataOperationRequestResponseMessage_PeerDataOperationResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MediaUploadResult   *Message_PeerDataOperationRequestResponseMessage_PeerDataOperationResult_MediaRetryNotification_ResultType `protobuf:"varint,1,opt,name=media_upload_result,json=mediaUploadResult,enum=Message_PeerDataOperationRequestResponseMessage_PeerDataOperationResult_MediaRetryNotification_ResultType" json:"media_upload_result,omitempty"`
	StickerMessage      *Message_StickerMessage                                                                                    `protobuf:"bytes,2,opt,name=sticker_message,json=stickerMessage" json:"sticker_message,omitempty"`
	LinkPreviewResponse *Message_PeerDataOperationRequestResponseMessage_PeerDataOperationResult_LinkPreviewResponse               `protobuf:"bytes,3,opt,name=link_preview_response,json=linkPreviewResponse" json:"link_preview_response,omitempty"`
}

func (x *Message_PeerDataOperationRequestResponseMessage_PeerDataOperationResult) Reset() {
	*x = Message_PeerDataOperationRequestResponseMessage_PeerDataOperationResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wa_proto_msgTypes[111]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_PeerDataOperationRequestResponseMessage_PeerDataOperationResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_PeerDataOperationRequestResponseMessage_PeerDataOperationResult) ProtoMessage() {}

func (x *Message_PeerDataOperationRequestResponseMessage_PeerDataOperationResult) ProtoReflect() protoreflect.Message {
	mi := &file_wa_proto_msgTypes[111]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_PeerDataOperationRequestResponseMessage_PeerDataOperationResult.ProtoReflect.Descriptor instead.
func (*Message_PeerDataOperationRequestResponseMessage_PeerDataOperationResult) Descriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{10, 36, 0}
}

func (x *Message_PeerDataOperationRequestResponseMessage_PeerDataOperationResult) GetMediaUploadResult() Message_PeerDataOperationRequestResponseMessage_PeerDataOperationResult_MediaRetryNotification_ResultType {
	if x != nil && x.MediaUploadResult != nil {
		return *x.MediaUploadResult
	}
	return Message_PeerDataOperationRequestResponseMessage_PeerDataOperationResult_MediaRetryNotification_GENERAL_ERROR
}

func (x *Message_PeerDataOperationRequestResponseMessage_PeerDataOperationResult) GetStickerMessage() *Message_StickerMessage {
	if x != nil {
		return x.StickerMessage
	}
	return nil
}

func (x *Message_PeerDataOperationRequestResponseMessage_PeerDataOperationResult) GetLinkPreviewResponse() *Message_PeerDataOperationRequestResponseMessage_PeerDataOperationResult_LinkPreviewResponse {
	if x != nil {
		return x.LinkPreviewResponse
	}
	return nil
}

type Message_PeerDataOperationRequestResponseMessage_PeerDataOperationResult_LinkPreviewResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url          *string `protobuf:"bytes,1,opt,name=url" json:"url,omitempty"`
	Title        *string `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
	Description  *string `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	ThumbData    []byte  `protobuf:"bytes,4,opt,name=thumb_data,json=thumbData" json:"thumb_data,omitempty"`
	CanonicalUrl *string `protobuf:"bytes,5,opt,name=canonical_url,json=canonicalUrl" json:"canonical_url,omitempty"`
	MatchText    *string `protobuf:"bytes,6,opt,name=match_text,json=matchText" json:"match_text,omitempty"`
	PreviewType  *string `protobuf:"bytes,7,opt,name=preview_type,json=previewType" json:"preview_type,omitempty"`
}

func (x *Message_PeerDataOperationRequestResponseMessage_PeerDataOperationResult_LinkPreviewResponse) Reset() {
	*x = Message_PeerDataOperationRequestResponseMessage_PeerDataOperationResult_LinkPreviewResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wa_proto_msgTypes[112]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_PeerDataOperationRequestResponseMessage_PeerDataOperationResult_LinkPreviewResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_PeerDataOperationRequestResponseMessage_PeerDataOperationResult_LinkPreviewResponse) ProtoMessage() {
}

func (x *Message_PeerDataOperationRequestResponseMessage_PeerDataOperationResult_LinkPreviewResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wa_proto_msgTypes[112]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_PeerDataOperationRequestResponseMessage_PeerDataOperationResult_LinkPreviewResponse.ProtoReflect.Descriptor instead.
func (*Message_PeerDataOperationRequestResponseMessage_PeerDataOperationResult_LinkPreviewResponse) Descriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{10, 36, 0, 0}
}

func (x *Message_PeerDataOperationRequestResponseMessage_PeerDataOperationResult_LinkPreviewResponse) GetUrl() string {
	if x != nil && x.Url != nil {
		return *x.Url
	}
	return ""
}

func (x *Message_PeerDataOperationRequestResponseMessage_PeerDataOperationResult_LinkPreviewResponse) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

func (x *Message_PeerDataOperationRequestResponseMessage_PeerDataOperationResult_LinkPreviewResponse) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *Message_PeerDataOperationRequestResponseMessage_PeerDataOperationResult_LinkPreviewResponse) GetThumbData() []byte {
	if x != nil {
		return x.ThumbData
	}
	return nil
}

func (x *Message_PeerDataOperationRequestResponseMessage_PeerDataOperationResult_LinkPreviewResponse) GetCanonicalUrl() string {
	if x != nil && x.CanonicalUrl != nil {
		return *x.CanonicalUrl
	}
	return ""
}

func (x *Message_PeerDataOperationRequestResponseMessage_PeerDataOperationResult_LinkPreviewResponse) GetMatchText() string {
	if x != nil && x.MatchText != nil {
		return *x.MatchText
	}
	return ""
}

func (x *Message_PeerDataOperationRequestResponseMessage_PeerDataOperationResult_LinkPreviewResponse) GetPreviewType() string {
	if x != nil && x.PreviewType != nil {
		return *x.PreviewType
	}
	return ""
}

type Message_PeerDataOperationRequestResponseMessage_PeerDataOperationResult_MediaRetryNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Message_PeerDataOperationRequestResponseMessage_PeerDataOperationResult_MediaRetryNotification) Reset() {
	*x = Message_PeerDataOperationRequestResponseMessage_PeerDataOperationResult_MediaRetryNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wa_proto_msgTypes[113]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_PeerDataOperationRequestResponseMessage_PeerDataOperationResult_MediaRetryNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_PeerDataOperationRequestResponseMessage_PeerDataOperationResult_MediaRetryNotification) ProtoMessage() {
}

func (x *Message_PeerDataOperationRequestResponseMessage_PeerDataOperationResult_MediaRetryNotification) ProtoReflect() protoreflect.Message {
	mi := &file_wa_proto_msgTypes[113]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_PeerDataOperationRequestResponseMessage_PeerDataOperationResult_MediaRetryNotification.ProtoReflect.Descriptor instead.
func (*Message_PeerDataOperationRequestResponseMessage_PeerDataOperationResult_MediaRetryNotification) Descriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{10, 36, 0, 1}
}

type Message_PollCreationMessage_Option struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OptionName *string `protobuf:"bytes,1,opt,name=option_name,json=optionName" json:"option_name,omitempty"`
}

func (x *Message_PollCreationMessage_Option) Reset() {
	*x = Message_PollCreationMessage_Option{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wa_proto_msgTypes[114]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_PollCreationMessage_Option) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_PollCreationMessage_Option) ProtoMessage() {}

func (x *Message_PollCreationMessage_Option) ProtoReflect() protoreflect.Message {
	mi := &file_wa_proto_msgTypes[114]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_PollCreationMessage_Option.ProtoReflect.Descriptor instead.
func (*Message_PollCreationMessage_Option) Descriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{10, 37, 0}
}

func (x *Message_PollCreationMessage_Option) GetOptionName() string {
	if x != nil && x.OptionName != nil {
		return *x.OptionName
	}
	return ""
}

type Message_ProductMessage_ProductSnapshot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductImage         *Message_ImageMessage `protobuf:"bytes,1,opt,name=product_image,json=productImage" json:"product_image,omitempty"`
	ProductId            *string               `protobuf:"bytes,2,opt,name=product_id,json=productId" json:"product_id,omitempty"`
	Title                *string               `protobuf:"bytes,3,opt,name=title" json:"title,omitempty"`
	Description          *string               `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
	CurrencyCode         *string               `protobuf:"bytes,5,opt,name=currency_code,json=currencyCode" json:"currency_code,omitempty"`
	PriceAmount_1000     *int64                `protobuf:"varint,6,opt,name=price_amount_1000,json=priceAmount1000" json:"price_amount_1000,omitempty"`
	RetailerId           *string               `protobuf:"bytes,7,opt,name=retailer_id,json=retailerId" json:"retailer_id,omitempty"`
	Url                  *string               `protobuf:"bytes,8,opt,name=url" json:"url,omitempty"`
	ProductImageCount    *uint32               `protobuf:"varint,9,opt,name=product_image_count,json=productImageCount" json:"product_image_count,omitempty"`
	FirstImageId         *string               `protobuf:"bytes,11,opt,name=first_image_id,json=firstImageId" json:"first_image_id,omitempty"`
	SalePriceAmount_1000 *int64                `protobuf:"varint,12,opt,name=sale_price_amount_1000,json=salePriceAmount1000" json:"sale_price_amount_1000,omitempty"`
}

func (x *Message_ProductMessage_ProductSnapshot) Reset() {
	*x = Message_ProductMessage_ProductSnapshot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wa_proto_msgTypes[115]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_ProductMessage_ProductSnapshot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_ProductMessage_ProductSnapshot) ProtoMessage() {}

func (x *Message_ProductMessage_ProductSnapshot) ProtoReflect() protoreflect.Message {
	mi := &file_wa_proto_msgTypes[115]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_ProductMessage_ProductSnapshot.ProtoReflect.Descriptor instead.
func (*Message_ProductMessage_ProductSnapshot) Descriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{10, 41, 0}
}

func (x *Message_ProductMessage_ProductSnapshot) GetProductImage() *Message_ImageMessage {
	if x != nil {
		return x.ProductImage
	}
	return nil
}

func (x *Message_ProductMessage_ProductSnapshot) GetProductId() string {
	if x != nil && x.ProductId != nil {
		return *x.ProductId
	}
	return ""
}

func (x *Message_ProductMessage_ProductSnapshot) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

func (x *Message_ProductMessage_ProductSnapshot) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *Message_ProductMessage_ProductSnapshot) GetCurrencyCode() string {
	if x != nil && x.CurrencyCode != nil {
		return *x.CurrencyCode
	}
	return ""
}

func (x *Message_ProductMessage_ProductSnapshot) GetPriceAmount_1000() int64 {
	if x != nil && x.PriceAmount_1000 != nil {
		return *x.PriceAmount_1000
	}
	return 0
}

func (x *Message_ProductMessage_ProductSnapshot) GetRetailerId() string {
	if x != nil && x.RetailerId != nil {
		return *x.RetailerId
	}
	return ""
}

func (x *Message_ProductMessage_ProductSnapshot) GetUrl() string {
	if x != nil && x.Url != nil {
		return *x.Url
	}
	return ""
}

func (x *Message_ProductMessage_ProductSnapshot) GetProductImageCount() uint32 {
	if x != nil && x.ProductImageCount != nil {
		return *x.ProductImageCount
	}
	return 0
}

func (x *Message_ProductMessage_ProductSnapshot) GetFirstImageId() string {
	if x != nil && x.FirstImageId != nil {
		return *x.FirstImageId
	}
	return ""
}

func (x *Message_ProductMessage_ProductSnapshot) GetSalePriceAmount_1000() int64 {
	if x != nil && x.SalePriceAmount_1000 != nil {
		return *x.SalePriceAmount_1000
	}
	return 0
}

type Message_TemplateMessage_FourRowTemplate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content *Message_HighlyStructuredMessage `protobuf:"bytes,6,opt,name=content" json:"content,omitempty"`
	Footer  *Message_HighlyStructuredMessage `protobuf:"bytes,7,opt,name=footer" json:"footer,omitempty"`
	Buttons []*TemplateButton                `protobuf:"bytes,8,rep,name=buttons" json:"buttons,omitempty"`
	// Types that are assignable to Title:
	//
	//	*Message_TemplateMessage_FourRowTemplate_DocumentMessage
	//	*Message_TemplateMessage_FourRowTemplate_HighlyStructuredMessage
	//	*Message_TemplateMessage_FourRowTemplate_ImageMessage
	//	*Message_TemplateMessage_FourRowTemplate_VideoMessage
	//	*Message_TemplateMessage_FourRowTemplate_LocationMessage
	Title isMessage_TemplateMessage_FourRowTemplate_Title `protobuf_oneof:"title"`
}

func (x *Message_TemplateMessage_FourRowTemplate) Reset() {
	*x = Message_TemplateMessage_FourRowTemplate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wa_proto_msgTypes[116]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_TemplateMessage_FourRowTemplate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_TemplateMessage_FourRowTemplate) ProtoMessage() {}

func (x *Message_TemplateMessage_FourRowTemplate) ProtoReflect() protoreflect.Message {
	mi := &file_wa_proto_msgTypes[116]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_TemplateMessage_FourRowTemplate.ProtoReflect.Descriptor instead.
func (*Message_TemplateMessage_FourRowTemplate) Descriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{10, 50, 0}
}

func (x *Message_TemplateMessage_FourRowTemplate) GetContent() *Message_HighlyStructuredMessage {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *Message_TemplateMessage_FourRowTemplate) GetFooter() *Message_HighlyStructuredMessage {
	if x != nil {
		return x.Footer
	}
	return nil
}

func (x *Message_TemplateMessage_FourRowTemplate) GetButtons() []*TemplateButton {
	if x != nil {
		return x.Buttons
	}
	return nil
}

func (m *Message_TemplateMessage_FourRowTemplate) GetTitle() isMessage_TemplateMessage_FourRowTemplate_Title {
	if m != nil {
		return m.Title
	}
	return nil
}

func (x *Message_TemplateMessage_FourRowTemplate) GetDocumentMessage() *Message_DocumentMessage {
	if x, ok := x.GetTitle().(*Message_TemplateMessage_FourRowTemplate_DocumentMessage); ok {
		return x.DocumentMessage
	}
	return nil
}

func (x *Message_TemplateMessage_FourRowTemplate) GetHighlyStructuredMessage() *Message_HighlyStructuredMessage {
	if x, ok := x.GetTitle().(*Message_TemplateMessage_FourRowTemplate_HighlyStructuredMessage); ok {
		return x.HighlyStructuredMessage
	}
	return nil
}

func (x *Message_TemplateMessage_FourRowTemplate) GetImageMessage() *Message_ImageMessage {
	if x, ok := x.GetTitle().(*Message_TemplateMessage_FourRowTemplate_ImageMessage); ok {
		return x.ImageMessage
	}
	return nil
}

func (x *Message_TemplateMessage_FourRowTemplate) GetVideoMessage() *Message_VideoMessage {
	if x, ok := x.GetTitle().(*Message_TemplateMessage_FourRowTemplate_VideoMessage); ok {
		return x.VideoMessage
	}
	return nil
}

func (x *Message_TemplateMessage_FourRowTemplate) GetLocationMessage() *Message_LocationMessage {
	if x, ok := x.GetTitle().(*Message_TemplateMessage_FourRowTemplate_LocationMessage); ok {
		return x.LocationMessage
	}
	return nil
}

type isMessage_TemplateMessage_FourRowTemplate_Title interface {
	isMessage_TemplateMessage_FourRowTemplate_Title()
}

type Message_TemplateMessage_FourRowTemplate_DocumentMessage struct {
	DocumentMessage *Message_DocumentMessage `protobuf:"bytes,1,opt,name=document_message,json=documentMessage,oneof"`
}

type Message_TemplateMessage_FourRowTemplate_HighlyStructuredMessage struct {
	HighlyStructuredMessage *Message_HighlyStructuredMessage `protobuf:"bytes,2,opt,name=highly_structured_message,json=highlyStructuredMessage,oneof"`
}

type Message_TemplateMessage_FourRowTemplate_ImageMessage struct {
	ImageMessage *Message_ImageMessage `protobuf:"bytes,3,opt,name=image_message,json=imageMessage,oneof"`
}

type Message_TemplateMessage_FourRowTemplate_VideoMessage struct {
	VideoMessage *Message_VideoMessage `protobuf:"bytes,4,opt,name=video_message,json=videoMessage,oneof"`
}

type Message_TemplateMessage_FourRowTemplate_LocationMessage struct {
	LocationMessage *Message_LocationMessage `protobuf:"bytes,5,opt,name=location_message,json=locationMessage,oneof"`
}

func (*Message_TemplateMessage_FourRowTemplate_DocumentMessage) isMessage_TemplateMessage_FourRowTemplate_Title() {
}

func (*Message_TemplateMessage_FourRowTemplate_HighlyStructuredMessage) isMessage_TemplateMessage_FourRowTemplate_Title() {
}

func (*Message_TemplateMessage_FourRowTemplate_ImageMessage) isMessage_TemplateMessage_FourRowTemplate_Title() {
}

func (*Message_TemplateMessage_FourRowTemplate_VideoMessage) isMessage_TemplateMessage_FourRowTemplate_Title() {
}

func (*Message_TemplateMessage_FourRowTemplate_LocationMessage) isMessage_TemplateMessage_FourRowTemplate_Title() {
}

type Message_TemplateMessage_HydratedFourRowTemplate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HydratedContentText *string                   `protobuf:"bytes,6,opt,name=hydrated_content_text,json=hydratedContentText" json:"hydrated_content_text,omitempty"`
	HydratedFooterText  *string                   `protobuf:"bytes,7,opt,name=hydrated_footer_text,json=hydratedFooterText" json:"hydrated_footer_text,omitempty"`
	HydratedButtons     []*HydratedTemplateButton `protobuf:"bytes,8,rep,name=hydrated_buttons,json=hydratedButtons" json:"hydrated_buttons,omitempty"`
	TemplateId          *string                   `protobuf:"bytes,9,opt,name=template_id,json=templateId" json:"template_id,omitempty"`
	// Types that are assignable to Title:
	//
	//	*Message_TemplateMessage_HydratedFourRowTemplate_DocumentMessage
	//	*Message_TemplateMessage_HydratedFourRowTemplate_HydratedTitleText
	//	*Message_TemplateMessage_HydratedFourRowTemplate_ImageMessage
	//	*Message_TemplateMessage_HydratedFourRowTemplate_VideoMessage
	//	*Message_TemplateMessage_HydratedFourRowTemplate_LocationMessage
	Title isMessage_TemplateMessage_HydratedFourRowTemplate_Title `protobuf_oneof:"title"`
}

func (x *Message_TemplateMessage_HydratedFourRowTemplate) Reset() {
	*x = Message_TemplateMessage_HydratedFourRowTemplate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wa_proto_msgTypes[117]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_TemplateMessage_HydratedFourRowTemplate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_TemplateMessage_HydratedFourRowTemplate) ProtoMessage() {}

func (x *Message_TemplateMessage_HydratedFourRowTemplate) ProtoReflect() protoreflect.Message {
	mi := &file_wa_proto_msgTypes[117]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_TemplateMessage_HydratedFourRowTemplate.ProtoReflect.Descriptor instead.
func (*Message_TemplateMessage_HydratedFourRowTemplate) Descriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{10, 50, 1}
}

func (x *Message_TemplateMessage_HydratedFourRowTemplate) GetHydratedContentText() string {
	if x != nil && x.HydratedContentText != nil {
		return *x.HydratedContentText
	}
	return ""
}

func (x *Message_TemplateMessage_HydratedFourRowTemplate) GetHydratedFooterText() string {
	if x != nil && x.HydratedFooterText != nil {
		return *x.HydratedFooterText
	}
	return ""
}

func (x *Message_TemplateMessage_HydratedFourRowTemplate) GetHydratedButtons() []*HydratedTemplateButton {
	if x != nil {
		return x.HydratedButtons
	}
	return nil
}

func (x *Message_TemplateMessage_HydratedFourRowTemplate) GetTemplateId() string {
	if x != nil && x.TemplateId != nil {
		return *x.TemplateId
	}
	return ""
}

func (m *Message_TemplateMessage_HydratedFourRowTemplate) GetTitle() isMessage_TemplateMessage_HydratedFourRowTemplate_Title {
	if m != nil {
		return m.Title
	}
	return nil
}

func (x *Message_TemplateMessage_HydratedFourRowTemplate) GetDocumentMessage() *Message_DocumentMessage {
	if x, ok := x.GetTitle().(*Message_TemplateMessage_HydratedFourRowTemplate_DocumentMessage); ok {
		return x.DocumentMessage
	}
	return nil
}

func (x *Message_TemplateMessage_HydratedFourRowTemplate) GetHydratedTitleText() string {
	if x, ok := x.GetTitle().(*Message_TemplateMessage_HydratedFourRowTemplate_HydratedTitleText); ok {
		return x.HydratedTitleText
	}
	return ""
}

func (x *Message_TemplateMessage_HydratedFourRowTemplate) GetImageMessage() *Message_ImageMessage {
	if x, ok := x.GetTitle().(*Message_TemplateMessage_HydratedFourRowTemplate_ImageMessage); ok {
		return x.ImageMessage
	}
	return nil
}

func (x *Message_TemplateMessage_HydratedFourRowTemplate) GetVideoMessage() *Message_VideoMessage {
	if x, ok := x.GetTitle().(*Message_TemplateMessage_HydratedFourRowTemplate_VideoMessage); ok {
		return x.VideoMessage
	}
	return nil
}

func (x *Message_TemplateMessage_HydratedFourRowTemplate) GetLocationMessage() *Message_LocationMessage {
	if x, ok := x.GetTitle().(*Message_TemplateMessage_HydratedFourRowTemplate_LocationMessage); ok {
		return x.LocationMessage
	}
	return nil
}

type isMessage_TemplateMessage_HydratedFourRowTemplate_Title interface {
	isMessage_TemplateMessage_HydratedFourRowTemplate_Title()
}

type Message_TemplateMessage_HydratedFourRowTemplate_DocumentMessage struct {
	DocumentMessage *Message_DocumentMessage `protobuf:"bytes,1,opt,name=document_message,json=documentMessage,oneof"`
}

type Message_TemplateMessage_HydratedFourRowTemplate_HydratedTitleText struct {
	HydratedTitleText string `protobuf:"bytes,2,opt,name=hydrated_title_text,json=hydratedTitleText,oneof"`
}

type Message_TemplateMessage_HydratedFourRowTemplate_ImageMessage struct {
	ImageMessage *Message_ImageMessage `protobuf:"bytes,3,opt,name=image_message,json=imageMessage,oneof"`
}

type Message_TemplateMessage_HydratedFourRowTemplate_VideoMessage struct {
	VideoMessage *Message_VideoMessage `protobuf:"bytes,4,opt,name=video_message,json=videoMessage,oneof"`
}

type Message_TemplateMessage_HydratedFourRowTemplate_LocationMessage struct {
	LocationMessage *Message_LocationMessage `protobuf:"bytes,5,opt,name=location_message,json=locationMessage,oneof"`
}

func (*Message_TemplateMessage_HydratedFourRowTemplate_DocumentMessage) isMessage_TemplateMessage_HydratedFourRowTemplate_Title() {
}

func (*Message_TemplateMessage_HydratedFourRowTemplate_HydratedTitleText) isMessage_TemplateMessage_HydratedFourRowTemplate_Title() {
}

func (*Message_TemplateMessage_HydratedFourRowTemplate_ImageMessage) isMessage_TemplateMessage_HydratedFourRowTemplate_Title() {
}

func (*Message_TemplateMessage_HydratedFourRowTemplate_VideoMessage) isMessage_TemplateMessage_HydratedFourRowTemplate_Title() {
}

func (*Message_TemplateMessage_HydratedFourRowTemplate_LocationMessage) isMessage_TemplateMessage_HydratedFourRowTemplate_Title() {
}

type NoiseCertificate_Details struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Serial  *uint32 `protobuf:"varint,1,opt,name=serial" json:"serial,omitempty"`
	Issuer  *string `protobuf:"bytes,2,opt,name=issuer" json:"issuer,omitempty"`
	Expires *uint64 `protobuf:"varint,3,opt,name=expires" json:"expires,omitempty"`
	Subject *string `protobuf:"bytes,4,opt,name=subject" json:"subject,omitempty"`
	Key     []byte  `protobuf:"bytes,5,opt,name=key" json:"key,omitempty"`
}

func (x *NoiseCertificate_Details) Reset() {
	*x = NoiseCertificate_Details{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wa_proto_msgTypes[118]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NoiseCertificate_Details) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoiseCertificate_Details) ProtoMessage() {}

func (x *NoiseCertificate_Details) ProtoReflect() protoreflect.Message {
	mi := &file_wa_proto_msgTypes[118]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoiseCertificate_Details.ProtoReflect.Descriptor instead.
func (*NoiseCertificate_Details) Descriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{14, 0}
}

func (x *NoiseCertificate_Details) GetSerial() uint32 {
	if x != nil && x.Serial != nil {
		return *x.Serial
	}
	return 0
}

func (x *NoiseCertificate_Details) GetIssuer() string {
	if x != nil && x.Issuer != nil {
		return *x.Issuer
	}
	return ""
}

func (x *NoiseCertificate_Details) GetExpires() uint64 {
	if x != nil && x.Expires != nil {
		return *x.Expires
	}
	return 0
}

func (x *NoiseCertificate_Details) GetSubject() string {
	if x != nil && x.Subject != nil {
		return *x.Subject
	}
	return ""
}

func (x *NoiseCertificate_Details) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

type PaymentBackground_MediaData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MediaKey          []byte  `protobuf:"bytes,1,opt,name=media_key,json=mediaKey" json:"media_key,omitempty"`
	MediaKeyTimestamp *int64  `protobuf:"varint,2,opt,name=media_key_timestamp,json=mediaKeyTimestamp" json:"media_key_timestamp,omitempty"`
	FileSha256        []byte  `protobuf:"bytes,3,opt,name=file_sha256,json=fileSha256" json:"file_sha256,omitempty"`
	FileEncSha256     []byte  `protobuf:"bytes,4,opt,name=file_enc_sha256,json=fileEncSha256" json:"file_enc_sha256,omitempty"`
	DirectPath        *string `protobuf:"bytes,5,opt,name=direct_path,json=directPath" json:"direct_path,omitempty"`
}

func (x *PaymentBackground_MediaData) Reset() {
	*x = PaymentBackground_MediaData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wa_proto_msgTypes[119]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentBackground_MediaData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentBackground_MediaData) ProtoMessage() {}

func (x *PaymentBackground_MediaData) ProtoReflect() protoreflect.Message {
	mi := &file_wa_proto_msgTypes[119]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentBackground_MediaData.ProtoReflect.Descriptor instead.
func (*PaymentBackground_MediaData) Descriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{15, 0}
}

func (x *PaymentBackground_MediaData) GetMediaKey() []byte {
	if x != nil {
		return x.MediaKey
	}
	return nil
}

func (x *PaymentBackground_MediaData) GetMediaKeyTimestamp() int64 {
	if x != nil && x.MediaKeyTimestamp != nil {
		return *x.MediaKeyTimestamp
	}
	return 0
}

func (x *PaymentBackground_MediaData) GetFileSha256() []byte {
	if x != nil {
		return x.FileSha256
	}
	return nil
}

func (x *PaymentBackground_MediaData) GetFileEncSha256() []byte {
	if x != nil {
		return x.FileEncSha256
	}
	return nil
}

func (x *PaymentBackground_MediaData) GetDirectPath() string {
	if x != nil && x.DirectPath != nil {
		return *x.DirectPath
	}
	return ""
}

type TemplateButton_CallButton struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DisplayText *Message_HighlyStructuredMessage `protobuf:"bytes,1,opt,name=display_text,json=displayText" json:"display_text,omitempty"`
	PhoneNumber *Message_HighlyStructuredMessage `protobuf:"bytes,2,opt,name=phone_number,json=phoneNumber" json:"phone_number,omitempty"`
}

func (x *TemplateButton_CallButton) Reset() {
	*x = TemplateButton_CallButton{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wa_proto_msgTypes[120]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TemplateButton_CallButton) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TemplateButton_CallButton) ProtoMessage() {}

func (x *TemplateButton_CallButton) ProtoReflect() protoreflect.Message {
	mi := &file_wa_proto_msgTypes[120]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TemplateButton_CallButton.ProtoReflect.Descriptor instead.
func (*TemplateButton_CallButton) Descriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{17, 0}
}

func (x *TemplateButton_CallButton) GetDisplayText() *Message_HighlyStructuredMessage {
	if x != nil {
		return x.DisplayText
	}
	return nil
}

func (x *TemplateButton_CallButton) GetPhoneNumber() *Message_HighlyStructuredMessage {
	if x != nil {
		return x.PhoneNumber
	}
	return nil
}

type TemplateButton_QuickReplyButton struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DisplayText *Message_HighlyStructuredMessage `protobuf:"bytes,1,opt,name=display_text,json=displayText" json:"display_text,omitempty"`
	Id          *string                          `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
}

func (x *TemplateButton_QuickReplyButton) Reset() {
	*x = TemplateButton_QuickReplyButton{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wa_proto_msgTypes[121]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TemplateButton_QuickReplyButton) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TemplateButton_QuickReplyButton) ProtoMessage() {}

func (x *TemplateButton_QuickReplyButton) ProtoReflect() protoreflect.Message {
	mi := &file_wa_proto_msgTypes[121]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TemplateButton_QuickReplyButton.ProtoReflect.Descriptor instead.
func (*TemplateButton_QuickReplyButton) Descriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{17, 1}
}

func (x *TemplateButton_QuickReplyButton) GetDisplayText() *Message_HighlyStructuredMessage {
	if x != nil {
		return x.DisplayText
	}
	return nil
}

func (x *TemplateButton_QuickReplyButton) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

type TemplateButton_URLButton struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DisplayText *Message_HighlyStructuredMessage `protobuf:"bytes,1,opt,name=display_text,json=displayText" json:"display_text,omitempty"`
	Url         *Message_HighlyStructuredMessage `protobuf:"bytes,2,opt,name=url" json:"url,omitempty"`
}

func (x *TemplateButton_URLButton) Reset() {
	*x = TemplateButton_URLButton{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wa_proto_msgTypes[122]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TemplateButton_URLButton) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TemplateButton_URLButton) ProtoMessage() {}

func (x *TemplateButton_URLButton) ProtoReflect() protoreflect.Message {
	mi := &file_wa_proto_msgTypes[122]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TemplateButton_URLButton.ProtoReflect.Descriptor instead.
func (*TemplateButton_URLButton) Descriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{17, 2}
}

func (x *TemplateButton_URLButton) GetDisplayText() *Message_HighlyStructuredMessage {
	if x != nil {
		return x.DisplayText
	}
	return nil
}

func (x *TemplateButton_URLButton) GetUrl() *Message_HighlyStructuredMessage {
	if x != nil {
		return x.Url
	}
	return nil
}

type VerifiedNameCertificate_Details struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Serial         *uint64          `protobuf:"varint,1,opt,name=serial" json:"serial,omitempty"`
	Issuer         *string          `protobuf:"bytes,2,opt,name=issuer" json:"issuer,omitempty"`
	Expires        *uint64          `protobuf:"varint,3,opt,name=expires" json:"expires,omitempty"`
	VerifiedName   *string          `protobuf:"bytes,4,opt,name=verified_name,json=verifiedName" json:"verified_name,omitempty"`
	Industry       *string          `protobuf:"bytes,5,opt,name=industry" json:"industry,omitempty"`
	City           *string          `protobuf:"bytes,6,opt,name=city" json:"city,omitempty"`
	Country        *string          `protobuf:"bytes,7,opt,name=country" json:"country,omitempty"`
	LocalizedNames []*LocalizedName `protobuf:"bytes,8,rep,name=localized_names,json=localizedNames" json:"localized_names,omitempty"`
	AggregatorId   *uint64          `protobuf:"varint,9,opt,name=aggregator_id,json=aggregatorId" json:"aggregator_id,omitempty"`
	IssueTime      *uint64          `protobuf:"varint,10,opt,name=issue_time,json=issueTime" json:"issue_time,omitempty"`
}

func (x *VerifiedNameCertificate_Details) Reset() {
	*x = VerifiedNameCertificate_Details{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wa_proto_msgTypes[123]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifiedNameCertificate_Details) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifiedNameCertificate_Details) ProtoMessage() {}

func (x *VerifiedNameCertificate_Details) ProtoReflect() protoreflect.Message {
	mi := &file_wa_proto_msgTypes[123]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifiedNameCertificate_Details.ProtoReflect.Descriptor instead.
func (*VerifiedNameCertificate_Details) Descriptor() ([]byte, []int) {
	return file_wa_proto_rawDescGZIP(), []int{18, 0}
}

func (x *VerifiedNameCertificate_Details) GetSerial() uint64 {
	if x != nil && x.Serial != nil {
		return *x.Serial
	}
	return 0
}

func (x *VerifiedNameCertificate_Details) GetIssuer() string {
	if x != nil && x.Issuer != nil {
		return *x.Issuer
	}
	return ""
}

func (x *VerifiedNameCertificate_Details) GetExpires() uint64 {
	if x != nil && x.Expires != nil {
		return *x.Expires
	}
	return 0
}

func (x *VerifiedNameCertificate_Details) GetVerifiedName() string {
	if x != nil && x.VerifiedName != nil {
		return *x.VerifiedName
	}
	return ""
}

func (x *VerifiedNameCertificate_Details) GetIndustry() string {
	if x != nil && x.Industry != nil {
		return *x.Industry
	}
	return ""
}

func (x *VerifiedNameCertificate_Details) GetCity() string {
	if x != nil && x.City != nil {
		return *x.City
	}
	return ""
}

func (x *VerifiedNameCertificate_Details) GetCountry() string {
	if x != nil && x.Country != nil {
		return *x.Country
	}
	return ""
}

func (x *VerifiedNameCertificate_Details) GetLocalizedNames() []*LocalizedName {
	if x != nil {
		return x.LocalizedNames
	}
	return nil
}

func (x *VerifiedNameCertificate_Details) GetAggregatorId() uint64 {
	if x != nil && x.AggregatorId != nil {
		return *x.AggregatorId
	}
	return 0
}

func (x *VerifiedNameCertificate_Details) GetIssueTime() uint64 {
	if x != nil && x.IssueTime != nil {
		return *x.IssueTime
	}
	return 0
}

var File_wa_proto protoreflect.FileDescriptor

var file_wa_proto_rawDesc = []byte{
	0x0a, 0x08, 0x77, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x41, 0x0a, 0x0a, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x75,
	0x74, 0x74, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x22, 0xc9, 0x1f,
	0x0a, 0x0d, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70,
	0x61, 0x73, 0x73, 0x69, 0x76, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x70, 0x61,
	0x73, 0x73, 0x69, 0x76, 0x65, 0x12, 0x37, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x31,
	0x0a, 0x08, 0x77, 0x65, 0x62, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x2e, 0x57, 0x65, 0x62, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x77, 0x65, 0x62, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x75, 0x73, 0x68, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x75, 0x73, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0f, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x23, 0x0a,
	0x0d, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x12, 0x3d, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x43, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x5f, 0x72, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x68, 0x61, 0x72, 0x64, 0x73,
	0x18, 0x0e, 0x20, 0x03, 0x28, 0x05, 0x52, 0x06, 0x73, 0x68, 0x61, 0x72, 0x64, 0x73, 0x12, 0x37,
	0x0a, 0x0a, 0x64, 0x6e, 0x73, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x2e, 0x44, 0x4e, 0x53, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x09, 0x64, 0x6e,
	0x73, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x32, 0x0a, 0x15, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x5f, 0x61, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x13, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x41,
	0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x61, 0x67, 0x65, 0x6e,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3a, 0x0a, 0x08, 0x72, 0x65, 0x67,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x67, 0x44, 0x61, 0x74, 0x61, 0x52, 0x07, 0x72, 0x65,
	0x67, 0x44, 0x61, 0x74, 0x61, 0x12, 0x30, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x50,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x07,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x66, 0x62, 0x5f, 0x63, 0x61,
	0x74, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x66, 0x62, 0x43, 0x61, 0x74, 0x12, 0x22,
	0x0a, 0x0d, 0x66, 0x62, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x18,
	0x16, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x66, 0x62, 0x55, 0x73, 0x65, 0x72, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x63, 0x18, 0x17, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02,
	0x6f, 0x63, 0x12, 0x0e, 0x0a, 0x02, 0x6c, 0x63, 0x18, 0x18, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02,
	0x6c, 0x63, 0x12, 0x4a, 0x0a, 0x11, 0x69, 0x6f, 0x73, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x65, 0x78,
	0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x49, 0x4f,
	0x53, 0x41, 0x70, 0x70, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0f, 0x69,
	0x6f, 0x73, 0x41, 0x70, 0x70, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1a,
	0x0a, 0x09, 0x66, 0x62, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x1f, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x07, 0x66, 0x62, 0x41, 0x70, 0x70, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x66, 0x62,
	0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x20, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x66, 0x62, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x1a, 0x81, 0x02, 0x0a,
	0x10, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x67, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x17, 0x0a, 0x07, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x06, 0x65, 0x52, 0x65, 0x67, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x5f,
	0x6b, 0x65, 0x79, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x65,
	0x4b, 0x65, 0x79, 0x74, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x65, 0x5f, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74,
	0x12, 0x1a, 0x0a, 0x09, 0x65, 0x5f, 0x73, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x07, 0x65, 0x53, 0x6b, 0x65, 0x79, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x0a,
	0x65, 0x5f, 0x73, 0x6b, 0x65, 0x79, 0x5f, 0x76, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x08, 0x65, 0x53, 0x6b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x12, 0x1c, 0x0a, 0x0a, 0x65, 0x5f,
	0x73, 0x6b, 0x65, 0x79, 0x5f, 0x73, 0x69, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08,
	0x65, 0x53, 0x6b, 0x65, 0x79, 0x53, 0x69, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x75, 0x69, 0x6c,
	0x64, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x62, 0x75,
	0x69, 0x6c, 0x64, 0x48, 0x61, 0x73, 0x68, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x70, 0x73,
	0x1a, 0xd1, 0x01, 0x0a, 0x09, 0x44, 0x4e, 0x53, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x4b,
	0x0a, 0x0a, 0x64, 0x6e, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x2c, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x2e, 0x44, 0x4e, 0x53, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x44, 0x4e, 0x53,
	0x52, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x52, 0x09, 0x64, 0x6e, 0x73, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x61,
	0x70, 0x70, 0x5f, 0x63, 0x61, 0x63, 0x68, 0x65, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x09, 0x61, 0x70, 0x70, 0x43, 0x61, 0x63, 0x68, 0x65, 0x64, 0x22, 0x58, 0x0a, 0x13, 0x44, 0x4e,
	0x53, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x59, 0x53, 0x54, 0x45, 0x4d, 0x10, 0x00, 0x12, 0x0a, 0x0a,
	0x06, 0x47, 0x4f, 0x4f, 0x47, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x48, 0x41, 0x52,
	0x44, 0x43, 0x4f, 0x44, 0x45, 0x44, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x4f, 0x56, 0x45, 0x52,
	0x52, 0x49, 0x44, 0x45, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x46, 0x41, 0x4c, 0x4c, 0x42, 0x41,
	0x43, 0x4b, 0x10, 0x04, 0x1a, 0xcb, 0x09, 0x0a, 0x09, 0x55, 0x73, 0x65, 0x72, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x12, 0x3d, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x50,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x12, 0x44, 0x0a, 0x0b, 0x61, 0x70, 0x70, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x50,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74,
	0x2e, 0x41, 0x70, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x61, 0x70, 0x70,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x63, 0x63, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x63, 0x63, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x6e, 0x63,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x6e, 0x63, 0x12, 0x1d, 0x0a, 0x0a, 0x6f,
	0x73, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x6f, 0x73, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x61,
	0x6e, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x6d, 0x61, 0x6e, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x12, 0x16,
	0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x6f, 0x73, 0x5f, 0x62, 0x75, 0x69,
	0x6c, 0x64, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x6f, 0x73, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x19,
	0x0a, 0x08, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x50, 0x0a, 0x0f, 0x72, 0x65, 0x6c,
	0x65, 0x61, 0x73, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x27, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x6c,
	0x65, 0x61, 0x73, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x0e, 0x72, 0x65, 0x6c,
	0x65, 0x61, 0x73, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x38, 0x0a, 0x19, 0x6c,
	0x6f, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x5f, 0x69,
	0x73, 0x6f, 0x5f, 0x36, 0x33, 0x39, 0x5f, 0x31, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15,
	0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x49, 0x73,
	0x6f, 0x36, 0x33, 0x39, 0x31, 0x12, 0x46, 0x0a, 0x21, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x69, 0x73, 0x6f, 0x5f, 0x33, 0x31, 0x36, 0x36,
	0x5f, 0x31, 0x5f, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x5f, 0x32, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x1b, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x49,
	0x73, 0x6f, 0x33, 0x31, 0x36, 0x36, 0x31, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x12, 0x21, 0x0a,
	0x0c, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x42, 0x6f, 0x61, 0x72, 0x64,
	0x1a, 0x9a, 0x01, 0x0a, 0x0a, 0x41, 0x70, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x18, 0x0a, 0x07, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x07, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x63,
	0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x73, 0x65,
	0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x72, 0x74, 0x69,
	0x61, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x74, 0x65, 0x72, 0x74, 0x69,
	0x61, 0x72, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x71, 0x75, 0x61, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x72,
	0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x71, 0x75, 0x61, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x72, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x71, 0x75, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x71, 0x75, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x22, 0xa3, 0x03,
	0x0a, 0x08, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x0b, 0x0a, 0x07, 0x41, 0x4e,
	0x44, 0x52, 0x4f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x49, 0x4f, 0x53, 0x10, 0x01,
	0x12, 0x11, 0x0a, 0x0d, 0x57, 0x49, 0x4e, 0x44, 0x4f, 0x57, 0x53, 0x5f, 0x50, 0x48, 0x4f, 0x4e,
	0x45, 0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x42, 0x4c, 0x41, 0x43, 0x4b, 0x42, 0x45, 0x52, 0x52,
	0x59, 0x10, 0x03, 0x12, 0x0f, 0x0a, 0x0b, 0x42, 0x4c, 0x41, 0x43, 0x4b, 0x42, 0x45, 0x52, 0x52,
	0x59, 0x58, 0x10, 0x04, 0x12, 0x07, 0x0a, 0x03, 0x53, 0x34, 0x30, 0x10, 0x05, 0x12, 0x07, 0x0a,
	0x03, 0x53, 0x36, 0x30, 0x10, 0x06, 0x12, 0x11, 0x0a, 0x0d, 0x50, 0x59, 0x54, 0x48, 0x4f, 0x4e,
	0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x07, 0x12, 0x09, 0x0a, 0x05, 0x54, 0x49, 0x5a,
	0x45, 0x4e, 0x10, 0x08, 0x12, 0x0e, 0x0a, 0x0a, 0x45, 0x4e, 0x54, 0x45, 0x52, 0x50, 0x52, 0x49,
	0x53, 0x45, 0x10, 0x09, 0x12, 0x0f, 0x0a, 0x0b, 0x53, 0x4d, 0x42, 0x5f, 0x41, 0x4e, 0x44, 0x52,
	0x4f, 0x49, 0x44, 0x10, 0x0a, 0x12, 0x09, 0x0a, 0x05, 0x4b, 0x41, 0x49, 0x4f, 0x53, 0x10, 0x0b,
	0x12, 0x0b, 0x0a, 0x07, 0x53, 0x4d, 0x42, 0x5f, 0x49, 0x4f, 0x53, 0x10, 0x0c, 0x12, 0x0b, 0x0a,
	0x07, 0x57, 0x49, 0x4e, 0x44, 0x4f, 0x57, 0x53, 0x10, 0x0d, 0x12, 0x07, 0x0a, 0x03, 0x57, 0x45,
	0x42, 0x10, 0x0e, 0x12, 0x0a, 0x0a, 0x06, 0x50, 0x4f, 0x52, 0x54, 0x41, 0x4c, 0x10, 0x0f, 0x12,
	0x11, 0x0a, 0x0d, 0x47, 0x52, 0x45, 0x45, 0x4e, 0x5f, 0x41, 0x4e, 0x44, 0x52, 0x4f, 0x49, 0x44,
	0x10, 0x10, 0x12, 0x10, 0x0a, 0x0c, 0x47, 0x52, 0x45, 0x45, 0x4e, 0x5f, 0x49, 0x50, 0x48, 0x4f,
	0x4e, 0x45, 0x10, 0x11, 0x12, 0x10, 0x0a, 0x0c, 0x42, 0x4c, 0x55, 0x45, 0x5f, 0x41, 0x4e, 0x44,
	0x52, 0x4f, 0x49, 0x44, 0x10, 0x12, 0x12, 0x0f, 0x0a, 0x0b, 0x42, 0x4c, 0x55, 0x45, 0x5f, 0x49,
	0x50, 0x48, 0x4f, 0x4e, 0x45, 0x10, 0x13, 0x12, 0x12, 0x0a, 0x0e, 0x46, 0x42, 0x4c, 0x49, 0x54,
	0x45, 0x5f, 0x41, 0x4e, 0x44, 0x52, 0x4f, 0x49, 0x44, 0x10, 0x14, 0x12, 0x11, 0x0a, 0x0d, 0x4d,
	0x4c, 0x49, 0x54, 0x45, 0x5f, 0x41, 0x4e, 0x44, 0x52, 0x4f, 0x49, 0x44, 0x10, 0x15, 0x12, 0x12,
	0x0a, 0x0e, 0x49, 0x47, 0x4c, 0x49, 0x54, 0x45, 0x5f, 0x41, 0x4e, 0x44, 0x52, 0x4f, 0x49, 0x44,
	0x10, 0x16, 0x12, 0x08, 0x0a, 0x04, 0x50, 0x41, 0x47, 0x45, 0x10, 0x17, 0x12, 0x09, 0x0a, 0x05,
	0x4d, 0x41, 0x43, 0x4f, 0x53, 0x10, 0x18, 0x12, 0x0e, 0x0a, 0x0a, 0x4f, 0x43, 0x55, 0x4c, 0x55,
	0x53, 0x5f, 0x4d, 0x53, 0x47, 0x10, 0x19, 0x12, 0x0f, 0x0a, 0x0b, 0x4f, 0x43, 0x55, 0x4c, 0x55,
	0x53, 0x5f, 0x43, 0x41, 0x4c, 0x4c, 0x10, 0x1a, 0x12, 0x09, 0x0a, 0x05, 0x4d, 0x49, 0x4c, 0x41,
	0x4e, 0x10, 0x1b, 0x22, 0x3d, 0x0a, 0x0e, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x45, 0x4c, 0x45, 0x41, 0x53, 0x45,
	0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x42, 0x45, 0x54, 0x41, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05,
	0x41, 0x4c, 0x50, 0x48, 0x41, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x44, 0x45, 0x42, 0x55, 0x47,
	0x10, 0x03, 0x1a, 0xd8, 0x06, 0x0a, 0x07, 0x57, 0x65, 0x62, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b,
	0x0a, 0x09, 0x72, 0x65, 0x66, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x72, 0x65, 0x66, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x45, 0x0a, 0x0c, 0x77, 0x65, 0x62, 0x64, 0x5f, 0x70, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x57, 0x65, 0x62, 0x49,
	0x6e, 0x66, 0x6f, 0x2e, 0x57, 0x65, 0x62, 0x64, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52,
	0x0b, 0x77, 0x65, 0x62, 0x64, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x4f, 0x0a, 0x10,
	0x77, 0x65, 0x62, 0x5f, 0x73, 0x75, 0x62, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x50,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x57, 0x65, 0x62, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x57,
	0x65, 0x62, 0x53, 0x75, 0x62, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x0e, 0x77,
	0x65, 0x62, 0x53, 0x75, 0x62, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x1a, 0xa5, 0x04,
	0x0a, 0x0b, 0x57, 0x65, 0x62, 0x64, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x35, 0x0a,
	0x17, 0x75, 0x73, 0x65, 0x73, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e,
	0x74, 0x5f, 0x69, 0x6e, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14,
	0x75, 0x73, 0x65, 0x73, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x49,
	0x6e, 0x4b, 0x65, 0x79, 0x12, 0x3a, 0x0a, 0x19, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x73,
	0x5f, 0x73, 0x74, 0x61, 0x72, 0x72, 0x65, 0x64, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x17, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74,
	0x73, 0x53, 0x74, 0x61, 0x72, 0x72, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73,
	0x12, 0x3c, 0x0a, 0x1a, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x5f, 0x64, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x18, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x44, 0x6f,
	0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x12, 0x32,
	0x0a, 0x15, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x5f, 0x75, 0x72, 0x6c, 0x5f, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x73,
	0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x55, 0x72, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x73, 0x12, 0x30, 0x0a, 0x14, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x5f, 0x6d,
	0x65, 0x64, 0x69, 0x61, 0x5f, 0x72, 0x65, 0x74, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x12, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x52,
	0x65, 0x74, 0x72, 0x79, 0x12, 0x2c, 0x0a, 0x12, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x73,
	0x5f, 0x65, 0x32, 0x65, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x10, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x45, 0x32, 0x65, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x5f, 0x65,
	0x32, 0x65, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10,
	0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x45, 0x32, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x12, 0x2c, 0x0a, 0x12, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x5f, 0x65, 0x32, 0x65,
	0x5f, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x73, 0x75,
	0x70, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x45, 0x32, 0x65, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x12, 0x32,
	0x0a, 0x15, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x5f, 0x65, 0x32, 0x65, 0x5f, 0x64,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x73,
	0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x45, 0x32, 0x65, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x65, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x66, 0x65, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x73, 0x22, 0x56, 0x0a, 0x0e, 0x57, 0x65, 0x62, 0x53, 0x75, 0x62, 0x50,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x0f, 0x0a, 0x0b, 0x57, 0x45, 0x42, 0x5f, 0x42,
	0x52, 0x4f, 0x57, 0x53, 0x45, 0x52, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x41, 0x50, 0x50, 0x5f,
	0x53, 0x54, 0x4f, 0x52, 0x45, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x57, 0x49, 0x4e, 0x5f, 0x53,
	0x54, 0x4f, 0x52, 0x45, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x41, 0x52, 0x57, 0x49, 0x4e,
	0x10, 0x03, 0x12, 0x09, 0x0a, 0x05, 0x57, 0x49, 0x4e, 0x33, 0x32, 0x10, 0x04, 0x22, 0x79, 0x0a,
	0x0d, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x08,
	0x0a, 0x04, 0x50, 0x55, 0x53, 0x48, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x55, 0x53, 0x45, 0x52,
	0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x41, 0x54, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09,
	0x53, 0x43, 0x48, 0x45, 0x44, 0x55, 0x4c, 0x45, 0x44, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x45,
	0x52, 0x52, 0x4f, 0x52, 0x5f, 0x52, 0x45, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x10, 0x03,
	0x12, 0x12, 0x0a, 0x0e, 0x4e, 0x45, 0x54, 0x57, 0x4f, 0x52, 0x4b, 0x5f, 0x53, 0x57, 0x49, 0x54,
	0x43, 0x48, 0x10, 0x04, 0x12, 0x12, 0x0a, 0x0e, 0x50, 0x49, 0x4e, 0x47, 0x5f, 0x52, 0x45, 0x43,
	0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x10, 0x05, 0x22, 0xb0, 0x02, 0x0a, 0x0b, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x43, 0x45, 0x4c, 0x4c,
	0x55, 0x4c, 0x41, 0x52, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x10,
	0x0a, 0x0c, 0x57, 0x49, 0x46, 0x49, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x01,
	0x12, 0x11, 0x0a, 0x0d, 0x43, 0x45, 0x4c, 0x4c, 0x55, 0x4c, 0x41, 0x52, 0x5f, 0x45, 0x44, 0x47,
	0x45, 0x10, 0x64, 0x12, 0x11, 0x0a, 0x0d, 0x43, 0x45, 0x4c, 0x4c, 0x55, 0x4c, 0x41, 0x52, 0x5f,
	0x49, 0x44, 0x45, 0x4e, 0x10, 0x65, 0x12, 0x11, 0x0a, 0x0d, 0x43, 0x45, 0x4c, 0x4c, 0x55, 0x4c,
	0x41, 0x52, 0x5f, 0x55, 0x4d, 0x54, 0x53, 0x10, 0x66, 0x12, 0x11, 0x0a, 0x0d, 0x43, 0x45, 0x4c,
	0x4c, 0x55, 0x4c, 0x41, 0x52, 0x5f, 0x45, 0x56, 0x44, 0x4f, 0x10, 0x67, 0x12, 0x11, 0x0a, 0x0d,
	0x43, 0x45, 0x4c, 0x4c, 0x55, 0x4c, 0x41, 0x52, 0x5f, 0x47, 0x50, 0x52, 0x53, 0x10, 0x68, 0x12,
	0x12, 0x0a, 0x0e, 0x43, 0x45, 0x4c, 0x4c, 0x55, 0x4c, 0x41, 0x52, 0x5f, 0x48, 0x53, 0x44, 0x50,
	0x41, 0x10, 0x69, 0x12, 0x12, 0x0a, 0x0e, 0x43, 0x45, 0x4c, 0x4c, 0x55, 0x4c, 0x41, 0x52, 0x5f,
	0x48, 0x53, 0x55, 0x50, 0x41, 0x10, 0x6a, 0x12, 0x11, 0x0a, 0x0d, 0x43, 0x45, 0x4c, 0x4c, 0x55,
	0x4c, 0x41, 0x52, 0x5f, 0x48, 0x53, 0x50, 0x41, 0x10, 0x6b, 0x12, 0x11, 0x0a, 0x0d, 0x43, 0x45,
	0x4c, 0x4c, 0x55, 0x4c, 0x41, 0x52, 0x5f, 0x43, 0x44, 0x4d, 0x41, 0x10, 0x6c, 0x12, 0x12, 0x0a,
	0x0e, 0x43, 0x45, 0x4c, 0x4c, 0x55, 0x4c, 0x41, 0x52, 0x5f, 0x31, 0x58, 0x52, 0x54, 0x54, 0x10,
	0x6d, 0x12, 0x12, 0x0a, 0x0e, 0x43, 0x45, 0x4c, 0x4c, 0x55, 0x4c, 0x41, 0x52, 0x5f, 0x45, 0x48,
	0x52, 0x50, 0x44, 0x10, 0x6e, 0x12, 0x10, 0x0a, 0x0c, 0x43, 0x45, 0x4c, 0x4c, 0x55, 0x4c, 0x41,
	0x52, 0x5f, 0x4c, 0x54, 0x45, 0x10, 0x6f, 0x12, 0x12, 0x0a, 0x0e, 0x43, 0x45, 0x4c, 0x4c, 0x55,
	0x4c, 0x41, 0x52, 0x5f, 0x48, 0x53, 0x50, 0x41, 0x50, 0x10, 0x70, 0x22, 0x54, 0x0a, 0x0f, 0x49,
	0x4f, 0x53, 0x41, 0x70, 0x70, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x13,
	0x0a, 0x0f, 0x53, 0x48, 0x41, 0x52, 0x45, 0x5f, 0x45, 0x58, 0x54, 0x45, 0x4e, 0x53, 0x49, 0x4f,
	0x4e, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x45,
	0x58, 0x54, 0x45, 0x4e, 0x53, 0x49, 0x4f, 0x4e, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x49, 0x4e,
	0x54, 0x45, 0x4e, 0x54, 0x53, 0x5f, 0x45, 0x58, 0x54, 0x45, 0x4e, 0x53, 0x49, 0x4f, 0x4e, 0x10,
	0x02, 0x22, 0x26, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x0c, 0x0a, 0x08,
	0x57, 0x48, 0x41, 0x54, 0x53, 0x41, 0x50, 0x50, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x4d, 0x45,
	0x53, 0x53, 0x45, 0x4e, 0x47, 0x45, 0x52, 0x10, 0x01, 0x22, 0xf8, 0x0e, 0x0a, 0x0b, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74, 0x61,
	0x6e, 0x7a, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x74,
	0x61, 0x6e, 0x7a, 0x61, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63,
	0x69, 0x70, 0x61, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x72,
	0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x12, 0x2f, 0x0a, 0x0e, 0x71, 0x75, 0x6f, 0x74,
	0x65, 0x64, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x08, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x0d, 0x71, 0x75, 0x6f, 0x74,
	0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x6d,
	0x6f, 0x74, 0x65, 0x5f, 0x6a, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72,
	0x65, 0x6d, 0x6f, 0x74, 0x65, 0x4a, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x6d, 0x65, 0x6e, 0x74,
	0x69, 0x6f, 0x6e, 0x65, 0x64, 0x5f, 0x6a, 0x69, 0x64, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0c, 0x6d, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x65, 0x64, 0x4a, 0x69, 0x64, 0x12, 0x2b, 0x0a,
	0x11, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f,
	0x6e, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x13, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x38, 0x0a, 0x18, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x5f, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x16, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x29, 0x0a,
	0x10, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x63, 0x6f, 0x72,
	0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64,
	0x69, 0x6e, 0x67, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x66,
	0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x65, 0x64, 0x18, 0x16, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b,
	0x69, 0x73, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x65, 0x64, 0x12, 0x35, 0x0a, 0x09, 0x71,
	0x75, 0x6f, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x64, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x41, 0x64, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x64,
	0x41, 0x64, 0x12, 0x34, 0x0a, 0x0f, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x68, 0x6f, 0x6c, 0x64, 0x65,
	0x72, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x18, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x4b, 0x65, 0x79, 0x52, 0x0e, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x68,
	0x6f, 0x6c, 0x64, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x19, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x65, 0x78,
	0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3e, 0x0a, 0x1b, 0x65, 0x70, 0x68, 0x65,
	0x6d, 0x65, 0x72, 0x61, 0x6c, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x19, 0x65,
	0x70, 0x68, 0x65, 0x6d, 0x65, 0x72, 0x61, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x36, 0x0a, 0x17, 0x65, 0x70, 0x68, 0x65,
	0x6d, 0x65, 0x72, 0x61, 0x6c, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x5f, 0x73, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x15, 0x65, 0x70, 0x68, 0x65, 0x6d,
	0x65, 0x72, 0x61, 0x6c, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x12, 0x4c, 0x0a, 0x11, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x61, 0x64, 0x5f,
	0x72, 0x65, 0x70, 0x6c, 0x79, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x41, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0f, 0x65,
	0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x41,
	0x0a, 0x1d, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x63, 0x6f,
	0x6e, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18,
	0x1d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1a, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x12, 0x3b, 0x0a, 0x1a, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x5f, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x18,
	0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x41, 0x70, 0x70, 0x12, 0x4e,
	0x0a, 0x24, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x63, 0x6f,
	0x6e, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x5f, 0x73,
	0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x20, 0x65, 0x6e,
	0x74, 0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x3e,
	0x0a, 0x11, 0x64, 0x69, 0x73, 0x61, 0x70, 0x70, 0x65, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x6d,
	0x6f, 0x64, 0x65, 0x18, 0x20, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x44, 0x69, 0x73, 0x61,
	0x70, 0x70, 0x65, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x10, 0x64, 0x69,
	0x73, 0x61, 0x70, 0x70, 0x65, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x2c,
	0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x21, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x6e, 0x6b,
	0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x23, 0x0a, 0x0d,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x22, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x12, 0x28, 0x0a, 0x10, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x5f, 0x6a, 0x69, 0x64, 0x18, 0x23, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4a, 0x69, 0x64, 0x1a, 0xe7, 0x01, 0x0a, 0x0b,
	0x41, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x27, 0x0a, 0x0f, 0x61,
	0x64, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x64, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x41, 0x0a, 0x0a, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x78, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x41, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x49, 0x6e,
	0x66, 0x6f, 0x2e, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x6d, 0x65,
	0x64, 0x69, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x6a, 0x70, 0x65, 0x67, 0x5f,
	0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x0d, 0x6a, 0x70, 0x65, 0x67, 0x54, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x61, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x61, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x2b, 0x0a, 0x09, 0x4d, 0x65, 0x64, 0x69,
	0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12,
	0x09, 0x0a, 0x05, 0x49, 0x4d, 0x41, 0x47, 0x45, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x56, 0x49,
	0x44, 0x45, 0x4f, 0x10, 0x02, 0x1a, 0x8c, 0x04, 0x0a, 0x13, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x41, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x12, 0x49, 0x0a, 0x0a, 0x6d, 0x65, 0x64, 0x69, 0x61,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2a, 0x2e, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x41, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x4d, 0x65,
	0x64, 0x69, 0x61, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x68, 0x75, 0x6d, 0x62,
	0x6e, 0x61, 0x69, 0x6c, 0x55, 0x72, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x64, 0x69, 0x61,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x64, 0x69,
	0x61, 0x55, 0x72, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69,
	0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61,
	0x69, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x55, 0x72, 0x6c, 0x12,
	0x2e, 0x0a, 0x13, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x73, 0x5f, 0x61, 0x75, 0x74, 0x6f,
	0x5f, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x63, 0x6f,
	0x6e, 0x74, 0x61, 0x69, 0x6e, 0x73, 0x41, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x36, 0x0a, 0x17, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x6c, 0x61, 0x72, 0x67, 0x65, 0x72,
	0x5f, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x15, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x4c, 0x61, 0x72, 0x67, 0x65, 0x72, 0x54, 0x68,
	0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x12, 0x2e, 0x0a, 0x13, 0x73, 0x68, 0x6f, 0x77, 0x5f,
	0x61, 0x64, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x73, 0x68, 0x6f, 0x77, 0x41, 0x64, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x2b, 0x0a, 0x09, 0x4d, 0x65, 0x64, 0x69, 0x61,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x09,
	0x0a, 0x05, 0x49, 0x4d, 0x41, 0x47, 0x45, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x56, 0x49, 0x44,
	0x45, 0x4f, 0x10, 0x02, 0x22, 0xb0, 0x02, 0x0a, 0x12, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x26, 0x0a, 0x0f, 0x73,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x48,
	0x61, 0x73, 0x68, 0x12, 0x29, 0x0a, 0x10, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x73,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x30,
	0x0a, 0x12, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0d, 0x42, 0x02, 0x10, 0x01, 0x52, 0x10,
	0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73,
	0x12, 0x2c, 0x0a, 0x12, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x6b, 0x65,
	0x79, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x10, 0x72, 0x65,
	0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x4b, 0x65, 0x79, 0x48, 0x61, 0x73, 0x68, 0x12, 0x2f,
	0x0a, 0x13, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x12, 0x72, 0x65, 0x63,
	0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12,
	0x36, 0x0a, 0x15, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x6b, 0x65, 0x79,
	0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0d, 0x42, 0x02,
	0x10, 0x01, 0x52, 0x13, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x4b, 0x65, 0x79,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x22, 0x9c, 0x01, 0x0a, 0x10, 0x44, 0x69, 0x73, 0x61,
	0x70, 0x70, 0x65, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x39, 0x0a, 0x09,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1b, 0x2e, 0x44, 0x69, 0x73, 0x61, 0x70, 0x70, 0x65, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x4d, 0x6f,
	0x64, 0x65, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x09, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x61, 0x74, 0x6f, 0x72, 0x22, 0x4d, 0x0a, 0x09, 0x49, 0x6e, 0x69, 0x74, 0x69,
	0x61, 0x74, 0x6f, 0x72, 0x12, 0x13, 0x0a, 0x0f, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x44, 0x5f,
	0x49, 0x4e, 0x5f, 0x43, 0x48, 0x41, 0x54, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x4e, 0x49,
	0x54, 0x49, 0x41, 0x54, 0x45, 0x44, 0x5f, 0x42, 0x59, 0x5f, 0x4d, 0x45, 0x10, 0x01, 0x12, 0x16,
	0x0a, 0x12, 0x49, 0x4e, 0x49, 0x54, 0x49, 0x41, 0x54, 0x45, 0x44, 0x5f, 0x42, 0x59, 0x5f, 0x4f,
	0x54, 0x48, 0x45, 0x52, 0x10, 0x02, 0x22, 0xdb, 0x03, 0x0a, 0x10, 0x48, 0x61, 0x6e, 0x64, 0x73,
	0x68, 0x61, 0x6b, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x40, 0x0a, 0x0c, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x48, 0x61, 0x6e, 0x64, 0x73, 0x68, 0x61, 0x6b, 0x65, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x48, 0x65, 0x6c, 0x6c, 0x6f,
	0x52, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x12, 0x40, 0x0a,
	0x0c, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x48, 0x61, 0x6e, 0x64, 0x73, 0x68, 0x61, 0x6b, 0x65, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x48, 0x65, 0x6c,
	0x6c, 0x6f, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x12,
	0x43, 0x0a, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x48, 0x61, 0x6e, 0x64, 0x73, 0x68, 0x61,
	0x6b, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x52, 0x0c, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x46, 0x69,
	0x6e, 0x69, 0x73, 0x68, 0x1a, 0x40, 0x0a, 0x0c, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x46, 0x69,
	0x6e, 0x69, 0x73, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x12, 0x18, 0x0a, 0x07,
	0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x70,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x1a, 0x5d, 0x0a, 0x0b, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x70, 0x68, 0x65, 0x6d, 0x65, 0x72,
	0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x65, 0x70, 0x68, 0x65, 0x6d, 0x65,
	0x72, 0x61, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x12, 0x18, 0x0a, 0x07, 0x70,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x70, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x1a, 0x5d, 0x0a, 0x0b, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x48,
	0x65, 0x6c, 0x6c, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x70, 0x68, 0x65, 0x6d, 0x65, 0x72, 0x61,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x65, 0x70, 0x68, 0x65, 0x6d, 0x65, 0x72,
	0x61, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x70, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x22, 0xb3, 0x04, 0x0a, 0x16, 0x48, 0x79, 0x64, 0x72, 0x61, 0x74, 0x65,
	0x64, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x12,
	0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x60, 0x0a, 0x12, 0x71, 0x75, 0x69, 0x63, 0x6b, 0x5f, 0x72,
	0x65, 0x70, 0x6c, 0x79, 0x5f, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x30, 0x2e, 0x48, 0x79, 0x64, 0x72, 0x61, 0x74, 0x65, 0x64, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x2e, 0x48, 0x79, 0x64, 0x72, 0x61,
	0x74, 0x65, 0x64, 0x51, 0x75, 0x69, 0x63, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x42, 0x75, 0x74,
	0x74, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x10, 0x71, 0x75, 0x69, 0x63, 0x6b, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x12, 0x4a, 0x0a, 0x0a, 0x75, 0x72, 0x6c, 0x5f, 0x62,
	0x75, 0x74, 0x74, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x48, 0x79,
	0x64, 0x72, 0x61, 0x74, 0x65, 0x64, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x42, 0x75,
	0x74, 0x74, 0x6f, 0x6e, 0x2e, 0x48, 0x79, 0x64, 0x72, 0x61, 0x74, 0x65, 0x64, 0x55, 0x52, 0x4c,
	0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x09, 0x75, 0x72, 0x6c, 0x42, 0x75, 0x74,
	0x74, 0x6f, 0x6e, 0x12, 0x4d, 0x0a, 0x0b, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x62, 0x75, 0x74, 0x74,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x48, 0x79, 0x64, 0x72, 0x61,
	0x74, 0x65, 0x64, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x42, 0x75, 0x74, 0x74, 0x6f,
	0x6e, 0x2e, 0x48, 0x79, 0x64, 0x72, 0x61, 0x74, 0x65, 0x64, 0x43, 0x61, 0x6c, 0x6c, 0x42, 0x75,
	0x74, 0x74, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0a, 0x63, 0x61, 0x6c, 0x6c, 0x42, 0x75, 0x74, 0x74,
	0x6f, 0x6e, 0x1a, 0x5a, 0x0a, 0x12, 0x48, 0x79, 0x64, 0x72, 0x61, 0x74, 0x65, 0x64, 0x43, 0x61,
	0x6c, 0x6c, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70,
	0x6c, 0x61, 0x79, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x65, 0x78, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x70,
	0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x1a, 0x4d,
	0x0a, 0x18, 0x48, 0x79, 0x64, 0x72, 0x61, 0x74, 0x65, 0x64, 0x51, 0x75, 0x69, 0x63, 0x6b, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69,
	0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x65, 0x78, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x1a, 0x48, 0x0a,
	0x11, 0x48, 0x79, 0x64, 0x72, 0x61, 0x74, 0x65, 0x64, 0x55, 0x52, 0x4c, 0x42, 0x75, 0x74, 0x74,
	0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x74, 0x65,
	0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61,
	0x79, 0x54, 0x65, 0x78, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x42, 0x11, 0x0a, 0x0f, 0x68, 0x79, 0x64, 0x72, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x22, 0x7c, 0x0a, 0x15, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x0f, 0x70, 0x6f, 0x6c, 0x79, 0x67, 0x6f, 0x6e, 0x56, 0x65,
	0x72, 0x74, 0x69, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x52, 0x0f, 0x70, 0x6f, 0x6c, 0x79, 0x67, 0x6f, 0x6e, 0x56, 0x65, 0x72,
	0x74, 0x69, 0x63, 0x65, 0x73, 0x12, 0x27, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x48, 0x00, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x08,
	0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x54, 0x0a, 0x0d, 0x4c, 0x6f, 0x63, 0x61,
	0x6c, 0x69, 0x7a, 0x65, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x6c, 0x67, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6c, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x6c, 0x63, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6c, 0x63, 0x12, 0x23, 0x0a, 0x0d, 0x76, 0x65, 0x72,
	0x69, 0x66, 0x69, 0x65, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x76,
	0x0a, 0x08, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x10, 0x64, 0x65,
	0x67, 0x72, 0x65, 0x65, 0x73, 0x5f, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x0f, 0x64, 0x65, 0x67, 0x72, 0x65, 0x65, 0x73, 0x4c, 0x61, 0x74,
	0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x64, 0x65, 0x67, 0x72, 0x65, 0x65, 0x73,
	0x5f, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x10, 0x64, 0x65, 0x67, 0x72, 0x65, 0x65, 0x73, 0x4c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75,
	0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xa8, 0xd4, 0x01, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x76, 0x65,
	0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x6c, 0x0a, 0x1f, 0x73, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x25, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x4b, 0x65, 0x79, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x1c, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x4b,
	0x65, 0x79, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3a, 0x0a, 0x0d, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x0c, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x40, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x5f, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x43, 0x0a, 0x10, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x0f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x50, 0x0a, 0x15, 0x65, 0x78, 0x74, 0x65,
	0x6e, 0x64, 0x65, 0x64, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x54, 0x65, 0x78, 0x74, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x13, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x54,
	0x65, 0x78, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x43, 0x0a, 0x10, 0x64, 0x6f,
	0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x44,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x0f,
	0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x3a, 0x0a, 0x0d, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2e, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x0c, 0x61,
	0x75, 0x64, 0x69, 0x6f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3a, 0x0a, 0x0d, 0x76,
	0x69, 0x64, 0x65, 0x6f, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x56, 0x69, 0x64,
	0x65, 0x6f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x0c, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x21, 0x0a, 0x04, 0x63, 0x61, 0x6c, 0x6c, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e,
	0x43, 0x61, 0x6c, 0x6c, 0x52, 0x04, 0x63, 0x61, 0x6c, 0x6c, 0x12, 0x21, 0x0a, 0x04, 0x63, 0x68,
	0x61, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x52, 0x04, 0x63, 0x68, 0x61, 0x74, 0x12, 0x43, 0x0a,
	0x10, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x53, 0x0a, 0x16, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x5f, 0x61,
	0x72, 0x72, 0x61, 0x79, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x6f, 0x6e,
	0x74, 0x61, 0x63, 0x74, 0x73, 0x41, 0x72, 0x72, 0x61, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x52, 0x14, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x41, 0x72, 0x72, 0x61, 0x79,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x5c, 0x0a, 0x19, 0x68, 0x69, 0x67, 0x68, 0x6c,
	0x79, 0x5f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x64, 0x5f, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2e, 0x48, 0x69, 0x67, 0x68, 0x6c, 0x79, 0x53, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x75, 0x72, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x17, 0x68, 0x69,
	0x67, 0x68, 0x6c, 0x79, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x64, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x8b, 0x01, 0x0a, 0x30, 0x66, 0x61, 0x73, 0x74, 0x5f, 0x72,
	0x61, 0x74, 0x63, 0x68, 0x65, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x73, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x25, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x4b, 0x65, 0x79, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x2a, 0x66, 0x61, 0x73, 0x74, 0x52, 0x61, 0x74,
	0x63, 0x68, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x4b, 0x65, 0x79,
	0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x4d, 0x0a, 0x14, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x65, 0x6e, 0x64,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x12,
	0x73, 0x65, 0x6e, 0x64, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x50, 0x0a, 0x15, 0x6c, 0x69, 0x76, 0x65, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4c, 0x69, 0x76, 0x65,
	0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52,
	0x13, 0x6c, 0x69, 0x76, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x56, 0x0a, 0x17, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x15, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x6c, 0x0a, 0x1f,
	0x64, 0x65, 0x63, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x17, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e,
	0x44, 0x65, 0x63, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x1c, 0x64, 0x65,
	0x63, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x69, 0x0a, 0x1e, 0x63, 0x61,
	0x6e, 0x63, 0x65, 0x6c, 0x5f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x18, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x61, 0x6e,
	0x63, 0x65, 0x6c, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x1b, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x43, 0x0a, 0x10, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x19, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x0f, 0x74, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x40, 0x0a, 0x0f, 0x73, 0x74,
	0x69, 0x63, 0x6b, 0x65, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x1a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x74,
	0x69, 0x63, 0x6b, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x0e, 0x73, 0x74,
	0x69, 0x63, 0x6b, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x4d, 0x0a, 0x14,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x5f, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x12, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e,
	0x76, 0x69, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x66, 0x0a, 0x1d, 0x74,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x5f, 0x72,
	0x65, 0x70, 0x6c, 0x79, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x1d, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x23, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x1a, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x40, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x0e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x4a, 0x0a, 0x13, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x73, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x1f, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x53, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x11,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x53, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x45, 0x0a, 0x14, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x23, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x12, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x37, 0x0a, 0x0c, 0x6c, 0x69, 0x73, 0x74,
	0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x24, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x52, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x47, 0x0a, 0x11, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x6f, 0x6e, 0x63, 0x65, 0x5f, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x25, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x46, 0x75, 0x74, 0x75, 0x72, 0x65, 0x50, 0x72, 0x6f,
	0x6f, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x0f, 0x76, 0x69, 0x65, 0x77, 0x4f,
	0x6e, 0x63, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3a, 0x0a, 0x0d, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x26, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x0c, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x50, 0x0a, 0x15, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x27, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x13, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x48, 0x0a, 0x11, 0x65, 0x70, 0x68, 0x65,
	0x6d, 0x65, 0x72, 0x61, 0x6c, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x28, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x46, 0x75,
	0x74, 0x75, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x10, 0x65, 0x70, 0x68, 0x65, 0x6d, 0x65, 0x72, 0x61, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x40, 0x0a, 0x0f, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x73, 0x5f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x73, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x52, 0x0e, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x73, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x59, 0x0a, 0x18, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x73, 0x5f,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x2b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2e, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x16, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x53, 0x0a, 0x16, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x76, 0x69, 0x74,
	0x65, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x2c, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x14,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x4c, 0x0a, 0x13, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x2d, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x12,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x43, 0x0a, 0x10, 0x72, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x2e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x0f, 0x72, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x65, 0x0a, 0x1c, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x30, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x52, 0x1a, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x50,
	0x0a, 0x15, 0x70, 0x6f, 0x6c, 0x6c, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x31, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x6f, 0x6c, 0x6c, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x13, 0x70, 0x6f, 0x6c,
	0x6c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x4a, 0x0a, 0x13, 0x70, 0x6f, 0x6c, 0x6c, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x32, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x6f, 0x6c, 0x6c, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x11, 0x70, 0x6f, 0x6c, 0x6c, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x4b, 0x0a, 0x14,
	0x6b, 0x65, 0x65, 0x70, 0x5f, 0x69, 0x6e, 0x5f, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x33, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2e, 0x4b, 0x65, 0x65, 0x70, 0x49, 0x6e, 0x43, 0x68, 0x61, 0x74, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x11, 0x6b, 0x65, 0x65, 0x70, 0x49, 0x6e, 0x43, 0x68,
	0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x5e, 0x0a, 0x1d, 0x64, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x63, 0x61, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x35, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x46, 0x75, 0x74, 0x75, 0x72,
	0x65, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x1a, 0x64,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x57, 0x69, 0x74, 0x68, 0x43, 0x61, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x63, 0x0a, 0x1c, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x36, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x19, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x68, 0x6f, 0x6e,
	0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x4c,
	0x0a, 0x14, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x6f, 0x6e, 0x63, 0x65, 0x5f, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x5f, 0x76, 0x32, 0x18, 0x37, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x46, 0x75, 0x74, 0x75, 0x72, 0x65, 0x50, 0x72, 0x6f,
	0x6f, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x11, 0x76, 0x69, 0x65, 0x77, 0x4f,
	0x6e, 0x63, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x56, 0x32, 0x12, 0x4d, 0x0a, 0x14,
	0x65, 0x6e, 0x63, 0x5f, 0x72, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x38, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2e, 0x45, 0x6e, 0x63, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x12, 0x65, 0x6e, 0x63, 0x52, 0x65, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x42, 0x0a, 0x0e, 0x65,
	0x64, 0x69, 0x74, 0x65, 0x64, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x3a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x46, 0x75,
	0x74, 0x75, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x0d, 0x65, 0x64, 0x69, 0x74, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x55, 0x0a, 0x18, 0x70, 0x6f, 0x6c, 0x6c, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x76, 0x32, 0x18, 0x3c, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x6f, 0x6c, 0x6c,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52,
	0x15, 0x70, 0x6f, 0x6c, 0x6c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x56, 0x32, 0x1a, 0x6d, 0x0a, 0x22, 0x41, 0x70, 0x70, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x46, 0x61, 0x74, 0x61, 0x6c, 0x45, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x10,
	0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x1a, 0x7d, 0x0a, 0x0f, 0x41, 0x70, 0x70, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x53, 0x79, 0x6e, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x31, 0x0a, 0x06, 0x6b, 0x65, 0x79, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2e, 0x41, 0x70, 0x70, 0x53, 0x74, 0x61, 0x74, 0x65, 0x53, 0x79, 0x6e, 0x63, 0x4b,
	0x65, 0x79, 0x49, 0x64, 0x52, 0x05, 0x6b, 0x65, 0x79, 0x49, 0x64, 0x12, 0x37, 0x0a, 0x08, 0x6b,
	0x65, 0x79, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x41, 0x70, 0x70, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x53, 0x79, 0x6e, 0x63, 0x4b, 0x65, 0x79, 0x44, 0x61, 0x74, 0x61, 0x52, 0x07, 0x6b, 0x65, 0x79,
	0x44, 0x61, 0x74, 0x61, 0x1a, 0x95, 0x01, 0x0a, 0x13, 0x41, 0x70, 0x70, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x53, 0x79, 0x6e, 0x63, 0x4b, 0x65, 0x79, 0x44, 0x61, 0x74, 0x61, 0x12, 0x19, 0x0a, 0x08,
	0x6b, 0x65, 0x79, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07,
	0x6b, 0x65, 0x79, 0x44, 0x61, 0x74, 0x61, 0x12, 0x45, 0x0a, 0x0b, 0x66, 0x69, 0x6e, 0x67, 0x65,
	0x72, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x41, 0x70, 0x70, 0x53, 0x74, 0x61, 0x74, 0x65, 0x53,
	0x79, 0x6e, 0x63, 0x4b, 0x65, 0x79, 0x46, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x70, 0x72, 0x69, 0x6e,
	0x74, 0x52, 0x0b, 0x66, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x1a, 0x83, 0x01, 0x0a,
	0x1a, 0x41, 0x70, 0x70, 0x53, 0x74, 0x61, 0x74, 0x65, 0x53, 0x79, 0x6e, 0x63, 0x4b, 0x65, 0x79,
	0x46, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x72,
	0x61, 0x77, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x72, 0x61, 0x77,
	0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x29, 0x0a, 0x0e, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0d, 0x42,
	0x02, 0x10, 0x01, 0x52, 0x0d, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x65, 0x73, 0x1a, 0x2a, 0x0a, 0x11, 0x41, 0x70, 0x70, 0x53, 0x74, 0x61, 0x74, 0x65, 0x53, 0x79,
	0x6e, 0x63, 0x4b, 0x65, 0x79, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x6b, 0x65, 0x79, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x6b, 0x65, 0x79, 0x49, 0x64, 0x1a, 0x4d,
	0x0a, 0x16, 0x41, 0x70, 0x70, 0x53, 0x74, 0x61, 0x74, 0x65, 0x53, 0x79, 0x6e, 0x63, 0x4b, 0x65,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x07, 0x6b, 0x65, 0x79, 0x5f,
	0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x41, 0x70, 0x70, 0x53, 0x74, 0x61, 0x74, 0x65, 0x53, 0x79, 0x6e, 0x63,
	0x4b, 0x65, 0x79, 0x49, 0x64, 0x52, 0x06, 0x6b, 0x65, 0x79, 0x49, 0x64, 0x73, 0x1a, 0x44, 0x0a,
	0x14, 0x41, 0x70, 0x70, 0x53, 0x74, 0x61, 0x74, 0x65, 0x53, 0x79, 0x6e, 0x63, 0x4b, 0x65, 0x79,
	0x53, 0x68, 0x61, 0x72, 0x65, 0x12, 0x2c, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x41, 0x70,
	0x70, 0x53, 0x74, 0x61, 0x74, 0x65, 0x53, 0x79, 0x6e, 0x63, 0x4b, 0x65, 0x79, 0x52, 0x04, 0x6b,
	0x65, 0x79, 0x73, 0x1a, 0xe3, 0x03, 0x0a, 0x0c, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x69, 0x6d, 0x65, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x69, 0x6d, 0x65, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x73, 0x68, 0x61, 0x32, 0x35,
	0x36, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x68, 0x61,
	0x32, 0x35, 0x36, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6c, 0x65, 0x6e, 0x67,
	0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x4c, 0x65,
	0x6e, 0x67, 0x74, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x10,
	0x0a, 0x03, 0x70, 0x74, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x70, 0x74, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x08, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x4b, 0x65, 0x79, 0x12, 0x26, 0x0a,
	0x0f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x65, 0x6e, 0x63, 0x5f, 0x73, 0x68, 0x61, 0x32, 0x35, 0x36,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x66, 0x69, 0x6c, 0x65, 0x45, 0x6e, 0x63, 0x53,
	0x68, 0x61, 0x32, 0x35, 0x36, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x5f,
	0x70, 0x61, 0x74, 0x68, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x50, 0x61, 0x74, 0x68, 0x12, 0x2e, 0x0a, 0x13, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f,
	0x6b, 0x65, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x11, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x4b, 0x65, 0x79, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x2f, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x78, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2b, 0x0a, 0x11, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x18, 0x12, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x10, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x53, 0x69, 0x64,
	0x65, 0x63, 0x61, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x77, 0x61, 0x76, 0x65, 0x66, 0x6f, 0x72, 0x6d,
	0x18, 0x13, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x77, 0x61, 0x76, 0x65, 0x66, 0x6f, 0x72, 0x6d,
	0x12, 0x27, 0x0a, 0x0f, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x61,
	0x72, 0x67, 0x62, 0x18, 0x14, 0x20, 0x01, 0x28, 0x07, 0x52, 0x0e, 0x62, 0x61, 0x63, 0x6b, 0x67,
	0x72, 0x6f, 0x75, 0x6e, 0x64, 0x41, 0x72, 0x67, 0x62, 0x1a, 0xc2, 0x08, 0x0a, 0x0e, 0x42, 0x75,
	0x74, 0x74, 0x6f, 0x6e, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x21, 0x0a, 0x0c,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x78, 0x74, 0x12,
	0x1f, 0x0a, 0x0b, 0x66, 0x6f, 0x6f, 0x74, 0x65, 0x72, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x6f, 0x6f, 0x74, 0x65, 0x72, 0x54, 0x65, 0x78, 0x74,
	0x12, 0x2f, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x38, 0x0a, 0x07, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x73, 0x18, 0x09, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x42, 0x75, 0x74,
	0x74, 0x6f, 0x6e, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x42, 0x75, 0x74, 0x74,
	0x6f, 0x6e, 0x52, 0x07, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x73, 0x12, 0x43, 0x0a, 0x0b, 0x68,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x22, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x42, 0x75, 0x74, 0x74, 0x6f,
	0x6e, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x14, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x45, 0x0a, 0x10, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x44, 0x6f, 0x63, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x0f, 0x64, 0x6f,
	0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3c, 0x0a,
	0x0d, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x0c, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3c, 0x0a, 0x0d, 0x76,
	0x69, 0x64, 0x65, 0x6f, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x56, 0x69, 0x64,
	0x65, 0x6f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x0c, 0x76, 0x69, 0x64,
	0x65, 0x6f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x45, 0x0a, 0x10, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52,
	0x0f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x1a, 0xaf, 0x03, 0x0a, 0x06, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x62,
	0x75, 0x74, 0x74, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x4a, 0x0a, 0x0b, 0x62, 0x75, 0x74, 0x74,
	0x6f, 0x6e, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x73, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x2e, 0x42, 0x75,
	0x74, 0x74, 0x6f, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x52, 0x0a, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e,
	0x54, 0x65, 0x78, 0x74, 0x12, 0x37, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x23, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x42, 0x75, 0x74,
	0x74, 0x6f, 0x6e, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x42, 0x75, 0x74, 0x74,
	0x6f, 0x6e, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x57, 0x0a,
	0x10, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x2e, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2e, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x2e, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x46, 0x6c,
	0x6f, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0e, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x46, 0x6c,
	0x6f, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x2f, 0x0a, 0x0a, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e,
	0x54, 0x65, 0x78, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f,
	0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70,
	0x6c, 0x61, 0x79, 0x54, 0x65, 0x78, 0x74, 0x1a, 0x45, 0x0a, 0x0e, 0x4e, 0x61, 0x74, 0x69, 0x76,
	0x65, 0x46, 0x6c, 0x6f, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x5f, 0x6a, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x4a, 0x73, 0x6f, 0x6e, 0x22, 0x32,
	0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57,
	0x4e, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x10,
	0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x4e, 0x41, 0x54, 0x49, 0x56, 0x45, 0x5f, 0x46, 0x4c, 0x4f, 0x57,
	0x10, 0x02, 0x22, 0x60, 0x0a, 0x0a, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x09, 0x0a,
	0x05, 0x45, 0x4d, 0x50, 0x54, 0x59, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x54, 0x45, 0x58, 0x54,
	0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x10, 0x03,
	0x12, 0x09, 0x0a, 0x05, 0x49, 0x4d, 0x41, 0x47, 0x45, 0x10, 0x04, 0x12, 0x09, 0x0a, 0x05, 0x56,
	0x49, 0x44, 0x45, 0x4f, 0x10, 0x05, 0x12, 0x0c, 0x0a, 0x08, 0x4c, 0x4f, 0x43, 0x41, 0x54, 0x49,
	0x4f, 0x4e, 0x10, 0x06, 0x42, 0x08, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x1a, 0x9a,
	0x02, 0x0a, 0x16, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x73, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x42,
	0x75, 0x74, 0x74, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x2f, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x78, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x38, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2e, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x34, 0x0a, 0x15, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x64,
	0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x13, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x44, 0x69, 0x73,
	0x70, 0x6c, 0x61, 0x79, 0x54, 0x65, 0x78, 0x74, 0x22, 0x25, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x10, 0x0a,
	0x0c, 0x44, 0x49, 0x53, 0x50, 0x4c, 0x41, 0x59, 0x5f, 0x54, 0x45, 0x58, 0x54, 0x10, 0x01, 0x42,
	0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x1a, 0xb1, 0x01, 0x0a, 0x04,
	0x43, 0x61, 0x6c, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x63, 0x61, 0x6c, 0x6c, 0x4b, 0x65, 0x79, 0x12,
	0x2b, 0x0a, 0x11, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x63, 0x6f, 0x6e, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x27, 0x0a, 0x0f,
	0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x38, 0x0a, 0x18, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x16, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x1a,
	0x3c, 0x0a, 0x1b, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1d,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x4b, 0x65, 0x79, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x1a, 0x39, 0x0a,
	0x04, 0x43, 0x68, 0x61, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73,
	0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x1a, 0x7a, 0x0a, 0x0e, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x63, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69,
	0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x63, 0x61, 0x72, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x63,
	0x61, 0x72, 0x64, 0x12, 0x2f, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x78, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x9f, 0x01, 0x0a, 0x14, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74,
	0x73, 0x41, 0x72, 0x72, 0x61, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x21, 0x0a,
	0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x33, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x6f, 0x6e,
	0x74, 0x61, 0x63, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x08, 0x63, 0x6f, 0x6e,
	0x74, 0x61, 0x63, 0x74, 0x73, 0x12, 0x2f, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x78, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x3d, 0x0a, 0x1c, 0x44, 0x65, 0x63, 0x6c, 0x69, 0x6e,
	0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4b, 0x65, 0x79,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x1a, 0x76, 0x0a, 0x11, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x53,
	0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x64, 0x65,
	0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6a, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x4a, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x61, 0x73, 0x68,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x61, 0x73, 0x68, 0x1a, 0xe5, 0x05,
	0x0a, 0x0f, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x75, 0x72, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x69, 0x6d, 0x65, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x69, 0x6d, 0x65, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x73, 0x68,
	0x61, 0x32, 0x35, 0x36, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x66, 0x69, 0x6c, 0x65,
	0x53, 0x68, 0x61, 0x32, 0x35, 0x36, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6c,
	0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x66, 0x69, 0x6c,
	0x65, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x61, 0x67,
	0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f,
	0x6b, 0x65, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x6d, 0x65, 0x64, 0x69, 0x61,
	0x4b, 0x65, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x26, 0x0a, 0x0f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x65, 0x6e, 0x63, 0x5f, 0x73, 0x68, 0x61,
	0x32, 0x35, 0x36, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x66, 0x69, 0x6c, 0x65, 0x45,
	0x6e, 0x63, 0x53, 0x68, 0x61, 0x32, 0x35, 0x36, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x50, 0x61, 0x74, 0x68, 0x12, 0x2e, 0x0a, 0x13, 0x6d, 0x65, 0x64,
	0x69, 0x61, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x4b, 0x65, 0x79,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6e,
	0x74, 0x61, 0x63, 0x74, 0x5f, 0x76, 0x63, 0x61, 0x72, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x56, 0x63, 0x61, 0x72, 0x64, 0x12, 0x32,
	0x0a, 0x15, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x5f, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x74,
	0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x50, 0x61,
	0x74, 0x68, 0x12, 0x29, 0x0a, 0x10, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x5f,
	0x73, 0x68, 0x61, 0x32, 0x35, 0x36, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0f, 0x74, 0x68,
	0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x53, 0x68, 0x61, 0x32, 0x35, 0x36, 0x12, 0x30, 0x0a,
	0x14, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x5f, 0x65, 0x6e, 0x63, 0x5f, 0x73,
	0x68, 0x61, 0x32, 0x35, 0x36, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x12, 0x74, 0x68, 0x75,
	0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x45, 0x6e, 0x63, 0x53, 0x68, 0x61, 0x32, 0x35, 0x36, 0x12,
	0x25, 0x0a, 0x0e, 0x6a, 0x70, 0x65, 0x67, 0x5f, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69,
	0x6c, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x6a, 0x70, 0x65, 0x67, 0x54, 0x68, 0x75,
	0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x12, 0x2f, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x78, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x29, 0x0a, 0x10, 0x74, 0x68, 0x75, 0x6d, 0x62,
	0x6e, 0x61, 0x69, 0x6c, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0f, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x48, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x5f,
	0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x74, 0x68, 0x75,
	0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x61, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x61,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x87, 0x01, 0x0a, 0x12, 0x45, 0x6e, 0x63, 0x52, 0x65, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x39, 0x0a, 0x12,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x4b, 0x65, 0x79, 0x52, 0x10, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x6e, 0x63, 0x5f, 0x70,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x65, 0x6e,
	0x63, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x65, 0x6e, 0x63, 0x5f,
	0x69, 0x76, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x65, 0x6e, 0x63, 0x49, 0x76, 0x1a,
	0x82, 0x0b, 0x0a, 0x13, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x54, 0x65, 0x78, 0x74,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x6d,
	0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x54, 0x65, 0x78, 0x74, 0x12, 0x23,
	0x0a, 0x0d, 0x63, 0x61, 0x6e, 0x6f, 0x6e, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x75, 0x72, 0x6c, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x61, 0x6e, 0x6f, 0x6e, 0x69, 0x63, 0x61, 0x6c,
	0x55, 0x72, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x74,
	0x65, 0x78, 0x74, 0x5f, 0x61, 0x72, 0x67, 0x62, 0x18, 0x07, 0x20, 0x01, 0x28, 0x07, 0x52, 0x08,
	0x74, 0x65, 0x78, 0x74, 0x41, 0x72, 0x67, 0x62, 0x12, 0x27, 0x0a, 0x0f, 0x62, 0x61, 0x63, 0x6b,
	0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x61, 0x72, 0x67, 0x62, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x07, 0x52, 0x0e, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x41, 0x72, 0x67,
	0x62, 0x12, 0x39, 0x0a, 0x04, 0x66, 0x6f, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x25, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64,
	0x65, 0x64, 0x54, 0x65, 0x78, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x46, 0x6f,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x66, 0x6f, 0x6e, 0x74, 0x12, 0x4b, 0x0a, 0x0c,
	0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x28, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x45, 0x78, 0x74,
	0x65, 0x6e, 0x64, 0x65, 0x64, 0x54, 0x65, 0x78, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2e, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x70, 0x72,
	0x65, 0x76, 0x69, 0x65, 0x77, 0x54, 0x79, 0x70, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x6a, 0x70, 0x65,
	0x67, 0x5f, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0d, 0x6a, 0x70, 0x65, 0x67, 0x54, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c,
	0x12, 0x2f, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x28, 0x0a, 0x0f, 0x64, 0x6f, 0x4e, 0x6f, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x49, 0x6e,
	0x6c, 0x69, 0x6e, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x64, 0x6f, 0x4e, 0x6f,
	0x74, 0x50, 0x6c, 0x61, 0x79, 0x49, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x32, 0x0a, 0x15, 0x74,
	0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x5f,
	0x70, 0x61, 0x74, 0x68, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x74, 0x68, 0x75, 0x6d,
	0x62, 0x6e, 0x61, 0x69, 0x6c, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x50, 0x61, 0x74, 0x68, 0x12,
	0x29, 0x0a, 0x10, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x5f, 0x73, 0x68, 0x61,
	0x32, 0x35, 0x36, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0f, 0x74, 0x68, 0x75, 0x6d, 0x62,
	0x6e, 0x61, 0x69, 0x6c, 0x53, 0x68, 0x61, 0x32, 0x35, 0x36, 0x12, 0x30, 0x0a, 0x14, 0x74, 0x68,
	0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x5f, 0x65, 0x6e, 0x63, 0x5f, 0x73, 0x68, 0x61, 0x32,
	0x35, 0x36, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x12, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e,
	0x61, 0x69, 0x6c, 0x45, 0x6e, 0x63, 0x53, 0x68, 0x61, 0x32, 0x35, 0x36, 0x12, 0x1b, 0x0a, 0x09,
	0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x08, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x4b, 0x65, 0x79, 0x12, 0x2e, 0x0a, 0x13, 0x6d, 0x65, 0x64,
	0x69, 0x61, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x18, 0x17, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x4b, 0x65, 0x79,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x29, 0x0a, 0x10, 0x74, 0x68, 0x75,
	0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x18, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0f, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x48, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69,
	0x6c, 0x5f, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x19, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x74,
	0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x65, 0x0a,
	0x16, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x30, 0x2e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64,
	0x54, 0x65, 0x78, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x49, 0x6e, 0x76, 0x69,
	0x74, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x13, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x4b, 0x0a, 0x23, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x5f, 0x6c,
	0x69, 0x6e, 0x6b, 0x5f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x5f, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x76, 0x32, 0x18, 0x1b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x1e, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x50, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x56,
	0x32, 0x12, 0x4f, 0x0a, 0x25, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x5f, 0x6c, 0x69, 0x6e, 0x6b,
	0x5f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x74, 0x68,
	0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x5f, 0x76, 0x32, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x20, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x50, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c,
	0x56, 0x32, 0x12, 0x6a, 0x0a, 0x19, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x5f, 0x6c, 0x69, 0x6e,
	0x6b, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x76, 0x32, 0x18,
	0x1d, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x30, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e,
	0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x54, 0x65, 0x78, 0x74, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x54, 0x79, 0x70, 0x65, 0x52, 0x15, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x4c,
	0x69, 0x6e, 0x6b, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x79, 0x70, 0x65, 0x56, 0x32, 0x22, 0x76,
	0x0a, 0x08, 0x46, 0x6f, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x41,
	0x4e, 0x53, 0x5f, 0x53, 0x45, 0x52, 0x49, 0x46, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x53, 0x45,
	0x52, 0x49, 0x46, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x4e, 0x4f, 0x52, 0x49, 0x43, 0x41, 0x4e,
	0x5f, 0x52, 0x45, 0x47, 0x55, 0x4c, 0x41, 0x52, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d, 0x42, 0x52,
	0x59, 0x4e, 0x44, 0x41, 0x4e, 0x5f, 0x57, 0x52, 0x49, 0x54, 0x45, 0x10, 0x03, 0x12, 0x15, 0x0a,
	0x11, 0x42, 0x45, 0x42, 0x41, 0x53, 0x4e, 0x45, 0x55, 0x45, 0x5f, 0x52, 0x45, 0x47, 0x55, 0x4c,
	0x41, 0x52, 0x10, 0x04, 0x12, 0x10, 0x0a, 0x0c, 0x4f, 0x53, 0x57, 0x41, 0x4c, 0x44, 0x5f, 0x48,
	0x45, 0x41, 0x56, 0x59, 0x10, 0x05, 0x22, 0x48, 0x0a, 0x13, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65,
	0x4c, 0x69, 0x6e, 0x6b, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a,
	0x07, 0x44, 0x45, 0x46, 0x41, 0x55, 0x4c, 0x54, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x50, 0x41,
	0x52, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x53, 0x55, 0x42, 0x10, 0x02, 0x12,
	0x0f, 0x0a, 0x0b, 0x44, 0x45, 0x46, 0x41, 0x55, 0x4c, 0x54, 0x5f, 0x53, 0x55, 0x42, 0x10, 0x03,
	0x22, 0x22, 0x0a, 0x0b, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x56, 0x49, 0x44,
	0x45, 0x4f, 0x10, 0x01, 0x1a, 0x38, 0x0a, 0x12, 0x46, 0x75, 0x74, 0x75, 0x72, 0x65, 0x50, 0x72,
	0x6f, 0x6f, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x22, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0xfc,
	0x02, 0x0a, 0x12, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6a,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4a,
	0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x5f, 0x65, 0x78,
	0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10,
	0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x45, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x25, 0x0a, 0x0e, 0x6a, 0x70, 0x65, 0x67, 0x5f, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69,
	0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x6a, 0x70, 0x65, 0x67, 0x54, 0x68, 0x75,
	0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x61, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x61, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x2f, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x44, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x54, 0x79, 0x70, 0x65, 0x22, 0x24, 0x0a, 0x09, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x45, 0x46, 0x41, 0x55, 0x4c, 0x54, 0x10,
	0x00, 0x12, 0x0a, 0x0a, 0x06, 0x50, 0x41, 0x52, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x1a, 0x9f, 0x0d,
	0x0a, 0x17, 0x48, 0x69, 0x67, 0x68, 0x6c, 0x79, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72,
	0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x6c, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65,
	0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x6c,
	0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63,
	0x6b, 0x4c, 0x67, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x5f,
	0x6c, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x61, 0x6c, 0x6c, 0x62, 0x61,
	0x63, 0x6b, 0x4c, 0x63, 0x12, 0x67, 0x0a, 0x12, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x7a, 0x61,
	0x62, 0x6c, 0x65, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x38, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x48, 0x69, 0x67, 0x68, 0x6c,
	0x79, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2e, 0x48, 0x53, 0x4d, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x62, 0x6c,
	0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x52, 0x11, 0x6c, 0x6f, 0x63, 0x61,
	0x6c, 0x69, 0x7a, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x29, 0x0a,
	0x10, 0x64, 0x65, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x69, 0x73, 0x74, 0x69, 0x63, 0x5f, 0x6c,
	0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x64, 0x65, 0x74, 0x65, 0x72, 0x6d, 0x69,
	0x6e, 0x69, 0x73, 0x74, 0x69, 0x63, 0x4c, 0x67, 0x12, 0x29, 0x0a, 0x10, 0x64, 0x65, 0x74, 0x65,
	0x72, 0x6d, 0x69, 0x6e, 0x69, 0x73, 0x74, 0x69, 0x63, 0x5f, 0x6c, 0x63, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x64, 0x65, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x69, 0x73, 0x74, 0x69,
	0x63, 0x4c, 0x63, 0x12, 0x3b, 0x0a, 0x0c, 0x68, 0x79, 0x64, 0x72, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x68, 0x73, 0x6d, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x0b, 0x68, 0x79, 0x64, 0x72, 0x61, 0x74, 0x65, 0x64, 0x48, 0x73, 0x6d,
	0x1a, 0xec, 0x09, 0x0a, 0x17, 0x48, 0x53, 0x4d, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x7a, 0x61,
	0x62, 0x6c, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07,
	0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x62, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x44, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2e, 0x48, 0x69, 0x67, 0x68, 0x6c, 0x79, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75,
	0x72, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x48, 0x53, 0x4d, 0x4c, 0x6f,
	0x63, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74,
	0x65, 0x72, 0x2e, 0x48, 0x53, 0x4d, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x48, 0x00,
	0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x63, 0x0a, 0x09, 0x64, 0x61,
	0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x44, 0x2e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x48, 0x69, 0x67, 0x68, 0x6c, 0x79, 0x53, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e,
	0x48, 0x53, 0x4d, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x2e, 0x48, 0x53, 0x4d, 0x44, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x48, 0x00, 0x52, 0x08, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x1a,
	0x53, 0x0a, 0x0b, 0x48, 0x53, 0x4d, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x23,
	0x0a, 0x0d, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x31, 0x30,
	0x30, 0x30, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x31, 0x30, 0x30, 0x30, 0x1a, 0x89, 0x07, 0x0a, 0x0b, 0x48, 0x53, 0x4d, 0x44, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x79, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x59, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x2e, 0x48, 0x69, 0x67, 0x68, 0x6c, 0x79, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72,
	0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x48, 0x53, 0x4d, 0x4c, 0x6f, 0x63,
	0x61, 0x6c, 0x69, 0x7a, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65,
	0x72, 0x2e, 0x48, 0x53, 0x4d, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x2e, 0x48, 0x53,
	0x4d, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65,
	0x6e, 0x74, 0x48, 0x00, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x12,
	0x7a, 0x0a, 0x0a, 0x75, 0x6e, 0x69, 0x78, 0x5f, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x59, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x48, 0x69,
	0x67, 0x68, 0x6c, 0x79, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x64, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x48, 0x53, 0x4d, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x7a,
	0x61, 0x62, 0x6c, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x2e, 0x48, 0x53,
	0x4d, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x2e, 0x48, 0x53, 0x4d, 0x44, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x55, 0x6e, 0x69, 0x78, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x48, 0x00,
	0x52, 0x09, 0x75, 0x6e, 0x69, 0x78, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x1a, 0xba, 0x04, 0x0a, 0x14,
	0x48, 0x53, 0x4d, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x12, 0x87, 0x01, 0x0a, 0x0b, 0x64, 0x61, 0x79, 0x5f, 0x6f, 0x66, 0x5f,
	0x77, 0x65, 0x65, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x67, 0x2e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2e, 0x48, 0x69, 0x67, 0x68, 0x6c, 0x79, 0x53, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x75, 0x72, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x48, 0x53, 0x4d,
	0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x65, 0x74, 0x65, 0x72, 0x2e, 0x48, 0x53, 0x4d, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x2e, 0x48, 0x53, 0x4d, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x43, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x61, 0x79, 0x4f, 0x66, 0x57, 0x65, 0x65, 0x6b, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x09, 0x64, 0x61, 0x79, 0x4f, 0x66, 0x57, 0x65, 0x65, 0x6b, 0x12, 0x12,
	0x0a, 0x04, 0x79, 0x65, 0x61, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x79, 0x65,
	0x61, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x12, 0x20, 0x0a, 0x0c, 0x64, 0x61, 0x79, 0x5f,
	0x6f, 0x66, 0x5f, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a,
	0x64, 0x61, 0x79, 0x4f, 0x66, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f,
	0x75, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x68, 0x6f, 0x75, 0x72, 0x12, 0x16,
	0x0a, 0x06, 0x6d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06,
	0x6d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x12, 0x82, 0x01, 0x0a, 0x08, 0x63, 0x61, 0x6c, 0x65, 0x6e,
	0x64, 0x61, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x66, 0x2e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x48, 0x69, 0x67, 0x68, 0x6c, 0x79, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x75, 0x72, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x48, 0x53, 0x4d, 0x4c,
	0x6f, 0x63, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65,
	0x74, 0x65, 0x72, 0x2e, 0x48, 0x53, 0x4d, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x2e,
	0x48, 0x53, 0x4d, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x61, 0x6c, 0x65, 0x6e, 0x64, 0x61, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x08, 0x63, 0x61, 0x6c, 0x65, 0x6e, 0x64, 0x61, 0x72, 0x22, 0x2e, 0x0a, 0x0c, 0x43,
	0x61, 0x6c, 0x65, 0x6e, 0x64, 0x61, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0d, 0x0a, 0x09, 0x47,
	0x52, 0x45, 0x47, 0x4f, 0x52, 0x49, 0x41, 0x4e, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x53, 0x4f,
	0x4c, 0x41, 0x52, 0x5f, 0x48, 0x49, 0x4a, 0x52, 0x49, 0x10, 0x02, 0x22, 0x6b, 0x0a, 0x0d, 0x44,
	0x61, 0x79, 0x4f, 0x66, 0x57, 0x65, 0x65, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0a, 0x0a, 0x06,
	0x4d, 0x4f, 0x4e, 0x44, 0x41, 0x59, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x54, 0x55, 0x45, 0x53,
	0x44, 0x41, 0x59, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x57, 0x45, 0x44, 0x4e, 0x45, 0x53, 0x44,
	0x41, 0x59, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x54, 0x48, 0x55, 0x52, 0x53, 0x44, 0x41, 0x59,
	0x10, 0x04, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x52, 0x49, 0x44, 0x41, 0x59, 0x10, 0x05, 0x12, 0x0c,
	0x0a, 0x08, 0x53, 0x41, 0x54, 0x55, 0x52, 0x44, 0x41, 0x59, 0x10, 0x06, 0x12, 0x0a, 0x0a, 0x06,
	0x53, 0x55, 0x4e, 0x44, 0x41, 0x59, 0x10, 0x07, 0x1a, 0x34, 0x0a, 0x14, 0x48, 0x53, 0x4d, 0x44,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x55, 0x6e, 0x69, 0x78, 0x45, 0x70, 0x6f, 0x63, 0x68,
	0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x10,
	0x0a, 0x0e, 0x64, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x6f, 0x6e, 0x65, 0x6f, 0x66,
	0x42, 0x0d, 0x0a, 0x0b, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x5f, 0x6f, 0x6e, 0x65, 0x6f, 0x66, 0x1a,
	0xc3, 0x04, 0x0a, 0x17, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x53, 0x79, 0x6e, 0x63, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x66,
	0x69, 0x6c, 0x65, 0x5f, 0x73, 0x68, 0x61, 0x32, 0x35, 0x36, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x68, 0x61, 0x32, 0x35, 0x36, 0x12, 0x1f, 0x0a, 0x0b,
	0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x1b, 0x0a,
	0x09, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x08, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x4b, 0x65, 0x79, 0x12, 0x26, 0x0a, 0x0f, 0x66, 0x69,
	0x6c, 0x65, 0x5f, 0x65, 0x6e, 0x63, 0x5f, 0x73, 0x68, 0x61, 0x32, 0x35, 0x36, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x0d, 0x66, 0x69, 0x6c, 0x65, 0x45, 0x6e, 0x63, 0x53, 0x68, 0x61, 0x32,
	0x35, 0x36, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x5f, 0x70, 0x61, 0x74,
	0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x50,
	0x61, 0x74, 0x68, 0x12, 0x4d, 0x0a, 0x09, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x30, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x53, 0x79, 0x6e, 0x63, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79,
	0x53, 0x79, 0x6e, 0x63, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x73, 0x79, 0x6e, 0x63, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x5f, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x12, 0x2e, 0x0a, 0x13, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x5f,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x11, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x47, 0x0a, 0x21, 0x6f, 0x6c, 0x64, 0x65, 0x73, 0x74, 0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x69, 0x6e,
	0x5f, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x5f, 0x73, 0x65, 0x63, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x1c, 0x6f, 0x6c, 0x64, 0x65,
	0x73, 0x74, 0x4d, 0x73, 0x67, 0x49, 0x6e, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x53, 0x65, 0x63, 0x22, 0x7b, 0x0a, 0x0f, 0x48, 0x69, 0x73, 0x74,
	0x6f, 0x72, 0x79, 0x53, 0x79, 0x6e, 0x63, 0x54, 0x79, 0x70, 0x65, 0x12, 0x15, 0x0a, 0x11, 0x49,
	0x4e, 0x49, 0x54, 0x49, 0x41, 0x4c, 0x5f, 0x42, 0x4f, 0x4f, 0x54, 0x53, 0x54, 0x52, 0x41, 0x50,
	0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x49, 0x4e, 0x49, 0x54, 0x49, 0x41, 0x4c, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x56, 0x33, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x46, 0x55, 0x4c,
	0x4c, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x52, 0x45, 0x43, 0x45, 0x4e, 0x54, 0x10, 0x03, 0x12,
	0x0d, 0x0a, 0x09, 0x50, 0x55, 0x53, 0x48, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x10, 0x04, 0x12, 0x15,
	0x0a, 0x11, 0x4e, 0x4f, 0x4e, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x49, 0x4e, 0x47, 0x5f, 0x44,
	0x41, 0x54, 0x41, 0x10, 0x05, 0x1a, 0x99, 0x08, 0x0a, 0x0c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x69, 0x6d, 0x65,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x69, 0x6d, 0x65,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x61, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x61, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f,
	0x0a, 0x0b, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x73, 0x68, 0x61, 0x32, 0x35, 0x36, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x68, 0x61, 0x32, 0x35, 0x36, 0x12,
	0x1f, 0x0a, 0x0b, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68,
	0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74,
	0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x1b,
	0x0a, 0x09, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x08, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x4b, 0x65, 0x79, 0x12, 0x26, 0x0a, 0x0f, 0x66,
	0x69, 0x6c, 0x65, 0x5f, 0x65, 0x6e, 0x63, 0x5f, 0x73, 0x68, 0x61, 0x32, 0x35, 0x36, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x66, 0x69, 0x6c, 0x65, 0x45, 0x6e, 0x63, 0x53, 0x68, 0x61,
	0x32, 0x35, 0x36, 0x12, 0x4f, 0x0a, 0x17, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x5f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0a,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x16, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x5f, 0x70,
	0x61, 0x74, 0x68, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x50, 0x61, 0x74, 0x68, 0x12, 0x2e, 0x0a, 0x13, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x6b,
	0x65, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x11, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x4b, 0x65, 0x79, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x25, 0x0a, 0x0e, 0x6a, 0x70, 0x65, 0x67, 0x5f, 0x74, 0x68,
	0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x6a,
	0x70, 0x65, 0x67, 0x54, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x12, 0x2f, 0x0a, 0x0c,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2c, 0x0a,
	0x12, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x73, 0x63, 0x61, 0x6e, 0x5f, 0x73, 0x69, 0x64, 0x65,
	0x63, 0x61, 0x72, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x10, 0x66, 0x69, 0x72, 0x73, 0x74,
	0x53, 0x63, 0x61, 0x6e, 0x53, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x12, 0x2a, 0x0a, 0x11, 0x66,
	0x69, 0x72, 0x73, 0x74, 0x5f, 0x73, 0x63, 0x61, 0x6e, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68,
	0x18, 0x13, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x66, 0x69, 0x72, 0x73, 0x74, 0x53, 0x63, 0x61,
	0x6e, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x2e, 0x0a, 0x13, 0x65, 0x78, 0x70, 0x65, 0x72,
	0x69, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x63, 0x61, 0x6e, 0x73,
	0x5f, 0x73, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c,
	0x73, 0x63, 0x61, 0x6e, 0x73, 0x53, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x12, 0x21, 0x0a, 0x0c,
	0x73, 0x63, 0x61, 0x6e, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x73, 0x18, 0x16, 0x20, 0x03,
	0x28, 0x0d, 0x52, 0x0b, 0x73, 0x63, 0x61, 0x6e, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x73, 0x12,
	0x35, 0x0a, 0x17, 0x6d, 0x69, 0x64, 0x5f, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x66,
	0x69, 0x6c, 0x65, 0x5f, 0x73, 0x68, 0x61, 0x32, 0x35, 0x36, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x14, 0x6d, 0x69, 0x64, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x46, 0x69, 0x6c, 0x65,
	0x53, 0x68, 0x61, 0x32, 0x35, 0x36, 0x12, 0x3c, 0x0a, 0x1b, 0x6d, 0x69, 0x64, 0x5f, 0x71, 0x75,
	0x61, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x65, 0x6e, 0x63, 0x5f, 0x73,
	0x68, 0x61, 0x32, 0x35, 0x36, 0x18, 0x18, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x17, 0x6d, 0x69, 0x64,
	0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x46, 0x69, 0x6c, 0x65, 0x45, 0x6e, 0x63, 0x53, 0x68,
	0x61, 0x32, 0x35, 0x36, 0x12, 0x1b, 0x0a, 0x09, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x6f, 0x6e, 0x63,
	0x65, 0x18, 0x19, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x76, 0x69, 0x65, 0x77, 0x4f, 0x6e, 0x63,
	0x65, 0x12, 0x32, 0x0a, 0x15, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x5f, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x13, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x44, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x50, 0x61, 0x74, 0x68, 0x12, 0x29, 0x0a, 0x10, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61,
	0x69, 0x6c, 0x5f, 0x73, 0x68, 0x61, 0x32, 0x35, 0x36, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x0f, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x53, 0x68, 0x61, 0x32, 0x35, 0x36,
	0x12, 0x30, 0x0a, 0x14, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x5f, 0x65, 0x6e,
	0x63, 0x5f, 0x73, 0x68, 0x61, 0x32, 0x35, 0x36, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x12,
	0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x45, 0x6e, 0x63, 0x53, 0x68, 0x61, 0x32,
	0x35, 0x36, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x5f, 0x75, 0x72, 0x6c,
	0x18, 0x1d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x55, 0x72,
	0x6c, 0x1a, 0x6c, 0x0a, 0x26, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x53, 0x65, 0x63, 0x75,
	0x72, 0x69, 0x74, 0x79, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x79, 0x6e, 0x63, 0x12, 0x42, 0x0a, 0x1d, 0x73,
	0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x1b, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x1a,
	0x9e, 0x0c, 0x0a, 0x12, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3a, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x12, 0x34, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x42, 0x6f,
	0x64, 0x79, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x12, 0x3a, 0x0a, 0x06, 0x66, 0x6f, 0x6f, 0x74,
	0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x46, 0x6f, 0x6f, 0x74, 0x65, 0x72, 0x52, 0x06, 0x66, 0x6f,
	0x6f, 0x74, 0x65, 0x72, 0x12, 0x2f, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x61, 0x0a, 0x17, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x53, 0x68, 0x6f, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48,
	0x00, 0x52, 0x15, 0x73, 0x68, 0x6f, 0x70, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x66, 0x72, 0x6f, 0x6e,
	0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x5e, 0x0a, 0x12, 0x63, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x11, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x5f, 0x0a, 0x13, 0x6e, 0x61, 0x74, 0x69,
	0x76, 0x65, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2e, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x46, 0x6c, 0x6f, 0x77, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x11, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x46, 0x6c,
	0x6f, 0x77, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x1a, 0x0a, 0x04, 0x42, 0x6f, 0x64,
	0x79, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x65, 0x78, 0x74, 0x1a, 0x65, 0x0a, 0x11, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x62, 0x69,
	0x7a, 0x5f, 0x6a, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x69, 0x7a,
	0x4a, 0x69, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x1a, 0x1c, 0x0a, 0x06,
	0x46, 0x6f, 0x6f, 0x74, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x1a, 0xe1, 0x02, 0x0a, 0x06, 0x48,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73,
	0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73,
	0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x68, 0x61, 0x73, 0x5f, 0x6d,
	0x65, 0x64, 0x69, 0x61, 0x5f, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x68, 0x61, 0x73, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x41,
	0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x45, 0x0a, 0x10, 0x64, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x44, 0x6f,
	0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52,
	0x0f, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x3c, 0x0a, 0x0d, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00,
	0x52, 0x0c, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x27,
	0x0a, 0x0e, 0x6a, 0x70, 0x65, 0x67, 0x5f, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x0d, 0x6a, 0x70, 0x65, 0x67, 0x54, 0x68,
	0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x12, 0x3c, 0x0a, 0x0d, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x0c, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x1a, 0x9c,
	0x02, 0x0a, 0x11, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x46, 0x6c, 0x6f, 0x77, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x58, 0x0a, 0x07, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2e, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x46, 0x6c, 0x6f, 0x77, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2e, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x46, 0x6c, 0x6f, 0x77, 0x42,
	0x75, 0x74, 0x74, 0x6f, 0x6e, 0x52, 0x07, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x73, 0x12, 0x2e,
	0x0a, 0x13, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x5f, 0x6a, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x4a, 0x73, 0x6f, 0x6e, 0x12, 0x27,
	0x0a, 0x0f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x1a, 0x54, 0x0a, 0x10, 0x4e, 0x61, 0x74, 0x69, 0x76,
	0x65, 0x46, 0x6c, 0x6f, 0x77, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x2c, 0x0a, 0x12, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x5f, 0x6a, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x62, 0x75, 0x74,
	0x74, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x4a, 0x73, 0x6f, 0x6e, 0x1a, 0xc9, 0x01,
	0x0a, 0x0b, 0x53, 0x68, 0x6f, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x49, 0x0a,
	0x07, 0x73, 0x75, 0x72, 0x66, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2f,
	0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x68, 0x6f, 0x70,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x75, 0x72, 0x66, 0x61, 0x63, 0x65, 0x52,
	0x07, 0x73, 0x75, 0x72, 0x66, 0x61, 0x63, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x22, 0x36, 0x0a, 0x07, 0x53, 0x75, 0x72, 0x66, 0x61, 0x63, 0x65, 0x12, 0x13, 0x0a, 0x0f,
	0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x53, 0x55, 0x52, 0x46, 0x41, 0x43, 0x45, 0x10,
	0x00, 0x12, 0x06, 0x0a, 0x02, 0x46, 0x42, 0x10, 0x01, 0x12, 0x06, 0x0a, 0x02, 0x49, 0x47, 0x10,
	0x02, 0x12, 0x06, 0x0a, 0x02, 0x57, 0x41, 0x10, 0x03, 0x42, 0x15, 0x0a, 0x13, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x1a, 0xb6, 0x03, 0x0a, 0x1a, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x3c, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2e, 0x42, 0x6f, 0x64, 0x79, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x12, 0x2f, 0x0a,
	0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x80,
	0x01, 0x0a, 0x1c, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4e, 0x61, 0x74, 0x69, 0x76,
	0x65, 0x46, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x19, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x46, 0x6c,
	0x6f, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x1a, 0x1a, 0x0a, 0x04, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x1a, 0x6a, 0x0a,
	0x19, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x46, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f,
	0x0a, 0x0b, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x5f, 0x6a, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x4a, 0x73, 0x6f, 0x6e, 0x12,
	0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x1e, 0x0a, 0x1c, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x83, 0x01, 0x0a, 0x11, 0x4b, 0x65,
	0x65, 0x70, 0x49, 0x6e, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x1d, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4b, 0x65, 0x79, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2c,
	0x0a, 0x09, 0x6b, 0x65, 0x65, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x0f, 0x2e, 0x4b, 0x65, 0x65, 0x70, 0x49, 0x6e, 0x43, 0x68, 0x61, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x08, 0x6b, 0x65, 0x65, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x5f, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x4d, 0x73, 0x1a,
	0xb1, 0x08, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x75, 0x74, 0x74, 0x6f,
	0x6e, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x75,
	0x74, 0x74, 0x6f, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x12, 0x3a, 0x0a, 0x09, 0x6c, 0x69, 0x73, 0x74,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x6c, 0x69, 0x73, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x38, 0x0a, 0x08, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x50,
	0x0a, 0x11, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x0f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x6f, 0x6f, 0x74, 0x65, 0x72, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x6f, 0x6f, 0x74, 0x65, 0x72, 0x54, 0x65, 0x78,
	0x74, 0x12, 0x2f, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x1a, 0x28, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x1a, 0x5e, 0x0a, 0x16,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x6a, 0x70, 0x65, 0x67, 0x5f, 0x74, 0x68,
	0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x6a,
	0x70, 0x65, 0x67, 0x54, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x1a, 0xdf, 0x01, 0x0a,
	0x0f, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x4e, 0x0a, 0x10, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x73, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x0f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x4e, 0x0a, 0x0c, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x52, 0x0b, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x12, 0x2c, 0x0a, 0x12, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x6f, 0x77, 0x6e,
	0x65, 0x72, 0x5f, 0x6a, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x62, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x4a, 0x69, 0x64, 0x1a, 0x60,
	0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x38, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73,
	0x1a, 0x54, 0x0a, 0x03, 0x52, 0x6f, 0x77, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x15, 0x0a, 0x06, 0x72, 0x6f, 0x77, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x72, 0x6f, 0x77, 0x49, 0x64, 0x1a, 0x4d, 0x0a, 0x07, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x2c, 0x0a, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x52, 0x6f, 0x77, 0x52,
	0x04, 0x72, 0x6f, 0x77, 0x73, 0x22, 0x3c, 0x0a, 0x08, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x11,
	0x0a, 0x0d, 0x53, 0x49, 0x4e, 0x47, 0x4c, 0x45, 0x5f, 0x53, 0x45, 0x4c, 0x45, 0x43, 0x54, 0x10,
	0x01, 0x12, 0x10, 0x0a, 0x0c, 0x50, 0x52, 0x4f, 0x44, 0x55, 0x43, 0x54, 0x5f, 0x4c, 0x49, 0x53,
	0x54, 0x10, 0x02, 0x1a, 0x8b, 0x03, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x42, 0x0a, 0x09, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x6c, 0x69, 0x73,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x5e, 0x0a, 0x13, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x5f,
	0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2e, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x52, 0x11, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2f, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x78, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x3b, 0x0a, 0x11, 0x53, 0x69, 0x6e, 0x67,
	0x6c, 0x65, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x26, 0x0a,
	0x0f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x72, 0x6f, 0x77, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64,
	0x52, 0x6f, 0x77, 0x49, 0x64, 0x22, 0x2a, 0x0a, 0x08, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x11,
	0x0a, 0x0d, 0x53, 0x49, 0x4e, 0x47, 0x4c, 0x45, 0x5f, 0x53, 0x45, 0x4c, 0x45, 0x43, 0x54, 0x10,
	0x01, 0x1a, 0xcb, 0x03, 0x0a, 0x13, 0x4c, 0x69, 0x76, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x64, 0x65, 0x67,
	0x72, 0x65, 0x65, 0x73, 0x5f, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x0f, 0x64, 0x65, 0x67, 0x72, 0x65, 0x65, 0x73, 0x4c, 0x61, 0x74, 0x69,
	0x74, 0x75, 0x64, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x64, 0x65, 0x67, 0x72, 0x65, 0x65, 0x73, 0x5f,
	0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x10, 0x64, 0x65, 0x67, 0x72, 0x65, 0x65, 0x73, 0x4c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64,
	0x65, 0x12, 0x2c, 0x0a, 0x12, 0x61, 0x63, 0x63, 0x75, 0x72, 0x61, 0x63, 0x79, 0x5f, 0x69, 0x6e,
	0x5f, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x61,
	0x63, 0x63, 0x75, 0x72, 0x61, 0x63, 0x79, 0x49, 0x6e, 0x4d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12,
	0x20, 0x0a, 0x0c, 0x73, 0x70, 0x65, 0x65, 0x64, 0x5f, 0x69, 0x6e, 0x5f, 0x6d, 0x70, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x73, 0x70, 0x65, 0x65, 0x64, 0x49, 0x6e, 0x4d, 0x70,
	0x73, 0x12, 0x50, 0x0a, 0x25, 0x64, 0x65, 0x67, 0x72, 0x65, 0x65, 0x73, 0x5f, 0x63, 0x6c, 0x6f,
	0x63, 0x6b, 0x77, 0x69, 0x73, 0x65, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x6d, 0x61, 0x67, 0x6e,
	0x65, 0x74, 0x69, 0x63, 0x5f, 0x6e, 0x6f, 0x72, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x21, 0x64, 0x65, 0x67, 0x72, 0x65, 0x65, 0x73, 0x43, 0x6c, 0x6f, 0x63, 0x6b, 0x77, 0x69,
	0x73, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x4d, 0x61, 0x67, 0x6e, 0x65, 0x74, 0x69, 0x63, 0x4e, 0x6f,
	0x72, 0x74, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x61, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x61, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x0a,
	0x0f, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x6f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x74, 0x69, 0x6d,
	0x65, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x6a, 0x70, 0x65, 0x67, 0x5f,
	0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x0d, 0x6a, 0x70, 0x65, 0x67, 0x54, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x12, 0x2f,
	0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x1a,
	0xd6, 0x03, 0x0a, 0x0f, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x64, 0x65, 0x67, 0x72, 0x65, 0x65, 0x73, 0x5f, 0x6c,
	0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0f, 0x64,
	0x65, 0x67, 0x72, 0x65, 0x65, 0x73, 0x4c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x2b,
	0x0a, 0x11, 0x64, 0x65, 0x67, 0x72, 0x65, 0x65, 0x73, 0x5f, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74,
	0x75, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x10, 0x64, 0x65, 0x67, 0x72, 0x65,
	0x65, 0x73, 0x4c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x17, 0x0a, 0x07, 0x69,
	0x73, 0x5f, 0x6c, 0x69, 0x76, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73,
	0x4c, 0x69, 0x76, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x61, 0x63, 0x63, 0x75, 0x72, 0x61, 0x63, 0x79,
	0x5f, 0x69, 0x6e, 0x5f, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x10, 0x61, 0x63, 0x63, 0x75, 0x72, 0x61, 0x63, 0x79, 0x49, 0x6e, 0x4d, 0x65, 0x74, 0x65,
	0x72, 0x73, 0x12, 0x20, 0x0a, 0x0c, 0x73, 0x70, 0x65, 0x65, 0x64, 0x5f, 0x69, 0x6e, 0x5f, 0x6d,
	0x70, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x73, 0x70, 0x65, 0x65, 0x64, 0x49,
	0x6e, 0x4d, 0x70, 0x73, 0x12, 0x50, 0x0a, 0x25, 0x64, 0x65, 0x67, 0x72, 0x65, 0x65, 0x73, 0x5f,
	0x63, 0x6c, 0x6f, 0x63, 0x6b, 0x77, 0x69, 0x73, 0x65, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x6d,
	0x61, 0x67, 0x6e, 0x65, 0x74, 0x69, 0x63, 0x5f, 0x6e, 0x6f, 0x72, 0x74, 0x68, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x21, 0x64, 0x65, 0x67, 0x72, 0x65, 0x65, 0x73, 0x43, 0x6c, 0x6f, 0x63,
	0x6b, 0x77, 0x69, 0x73, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x4d, 0x61, 0x67, 0x6e, 0x65, 0x74, 0x69,
	0x63, 0x4e, 0x6f, 0x72, 0x74, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x25, 0x0a, 0x0e, 0x6a, 0x70, 0x65, 0x67, 0x5f, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61,
	0x69, 0x6c, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x6a, 0x70, 0x65, 0x67, 0x54, 0x68,
	0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x12, 0x2f, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x78, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x95, 0x04, 0x0a, 0x0c, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61,
	0x69, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x69, 0x74, 0x65, 0x6d, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x39, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x21, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3c, 0x0a, 0x07,
	0x73, 0x75, 0x72, 0x66, 0x61, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x75, 0x72, 0x66, 0x61, 0x63,
	0x65, 0x52, 0x07, 0x73, 0x75, 0x72, 0x66, 0x61, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x5f,
	0x6a, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x6c, 0x6c, 0x65,
	0x72, 0x4a, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x2a, 0x0a, 0x11, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x31, 0x30, 0x30, 0x30, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x31, 0x30, 0x30, 0x30, 0x12, 0x2e, 0x0a, 0x13, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x11, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x2f, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x78, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x1a, 0x0a, 0x0b, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x49, 0x4e, 0x51, 0x55, 0x49, 0x52,
	0x59, 0x10, 0x01, 0x22, 0x1b, 0x0a, 0x0c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x75, 0x72, 0x66,
	0x61, 0x63, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x43, 0x41, 0x54, 0x41, 0x4c, 0x4f, 0x47, 0x10, 0x01,
	0x1a, 0xbf, 0x01, 0x0a, 0x14, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x76, 0x69,
	0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x4c, 0x0a, 0x0c, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x29, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x65, 0x78, 0x70, 0x69, 0x72,
	0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x22, 0x2e, 0x0a, 0x0b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x09,
	0x0a, 0x05, 0x46, 0x42, 0x50, 0x41, 0x59, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x55, 0x50, 0x49,
	0x10, 0x03, 0x1a, 0xd9, 0x03, 0x0a, 0x1f, 0x50, 0x65, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x6d, 0x0a, 0x20, 0x70, 0x65, 0x65, 0x72, 0x5f, 0x64,
	0x61, 0x74, 0x61, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x25, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x44,
	0x61, 0x74, 0x61, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x1c, 0x70, 0x65, 0x65, 0x72, 0x44, 0x61, 0x74,
	0x61, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x79, 0x0a, 0x18, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x5f, 0x73, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x75, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72,
	0x52, 0x65, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x16, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x53, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x12, 0x6a, 0x0a, 0x13, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x5f,
	0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3a, 0x2e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x55,
	0x72, 0x6c, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x11, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x55, 0x72, 0x6c, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x1a, 0x39, 0x0a, 0x16,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x52, 0x65,
	0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x73,
	0x68, 0x61, 0x32, 0x35, 0x36, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x69, 0x6c,
	0x65, 0x53, 0x68, 0x61, 0x32, 0x35, 0x36, 0x1a, 0x25, 0x0a, 0x11, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x55, 0x72, 0x6c, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x1a, 0xa0,
	0x08, 0x0a, 0x27, 0x50, 0x65, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x6d, 0x0a, 0x20, 0x70, 0x65,
	0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x50,
	0x65, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x1c, 0x70, 0x65, 0x65,
	0x72, 0x44, 0x61, 0x74, 0x61, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74, 0x61,
	0x6e, 0x7a, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x74,
	0x61, 0x6e, 0x7a, 0x61, 0x49, 0x64, 0x12, 0x85, 0x01, 0x0a, 0x1a, 0x70, 0x65, 0x65, 0x72, 0x5f,
	0x64, 0x61, 0x74, 0x61, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x48, 0x2e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x65,
	0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x17, 0x70, 0x65, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x1a, 0xe0,
	0x05, 0x0a, 0x17, 0x50, 0x65, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x9a, 0x01, 0x0a, 0x13, 0x6d,
	0x65, 0x64, 0x69, 0x61, 0x5f, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x6a, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x44,
	0x61, 0x74, 0x61, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x2e, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x52, 0x65, 0x74, 0x72, 0x79, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x11, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x55, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x40, 0x0a, 0x0f, 0x73, 0x74, 0x69, 0x63, 0x6b,
	0x65, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x74, 0x69, 0x63, 0x6b,
	0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x0e, 0x73, 0x74, 0x69, 0x63, 0x6b,
	0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x90, 0x01, 0x0a, 0x15, 0x6c, 0x69,
	0x6e, 0x6b, 0x5f, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x5c, 0x2e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x65, 0x65, 0x72,
	0x44, 0x61, 0x74, 0x61, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x13, 0x6c, 0x69, 0x6e, 0x6b, 0x50, 0x72, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x1a, 0xe5, 0x01, 0x0a,
	0x13, 0x4c, 0x69, 0x6e, 0x6b, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d,
	0x0a, 0x0a, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x09, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x44, 0x61, 0x74, 0x61, 0x12, 0x23, 0x0a,
	0x0d, 0x63, 0x61, 0x6e, 0x6f, 0x6e, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x61, 0x6e, 0x6f, 0x6e, 0x69, 0x63, 0x61, 0x6c, 0x55,
	0x72, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x74, 0x65, 0x78, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x54, 0x65, 0x78,
	0x74, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x54, 0x79, 0x70, 0x65, 0x1a, 0x6b, 0x0a, 0x16, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x52, 0x65, 0x74,
	0x72, 0x79, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x51,
	0x0a, 0x0a, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x11, 0x0a, 0x0d,
	0x47, 0x45, 0x4e, 0x45, 0x52, 0x41, 0x4c, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x00, 0x12,
	0x0b, 0x0a, 0x07, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09,
	0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x44,
	0x45, 0x43, 0x52, 0x59, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10,
	0x03, 0x1a, 0x97, 0x02, 0x0a, 0x13, 0x50, 0x6f, 0x6c, 0x6c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x65, 0x6e, 0x63,
	0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x65, 0x6e, 0x63, 0x4b,
	0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3d, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x2e, 0x50, 0x6f, 0x6c, 0x6c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x38, 0x0a, 0x18, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x61,
	0x62, 0x6c, 0x65, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x16, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x61,
	0x62, 0x6c, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x2f, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x1a, 0x29, 0x0a, 0x06, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0x46, 0x0a, 0x0c, 0x50,
	0x6f, 0x6c, 0x6c, 0x45, 0x6e, 0x63, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x65,
	0x6e, 0x63, 0x5f, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x0a, 0x65, 0x6e, 0x63, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x15, 0x0a, 0x06,
	0x65, 0x6e, 0x63, 0x5f, 0x69, 0x76, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x65, 0x6e,
	0x63, 0x49, 0x76, 0x1a, 0xf6, 0x01, 0x0a, 0x11, 0x50, 0x6f, 0x6c, 0x6c, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x46, 0x0a, 0x19, 0x70, 0x6f, 0x6c,
	0x6c, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4b, 0x65, 0x79, 0x52, 0x16, 0x70, 0x6f, 0x6c, 0x6c, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4b, 0x65,
	0x79, 0x12, 0x29, 0x0a, 0x04, 0x76, 0x6f, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x6f, 0x6c, 0x6c, 0x45, 0x6e,
	0x63, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x04, 0x76, 0x6f, 0x74, 0x65, 0x12, 0x3e, 0x0a, 0x08,
	0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22,
	0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x6f, 0x6c, 0x6c, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x2e, 0x0a, 0x13,
	0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x5f, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x73, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x4d, 0x73, 0x1a, 0x1b, 0x0a, 0x19,
	0x50, 0x6f, 0x6c, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x94, 0x05, 0x0a, 0x0e, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x41, 0x0a, 0x07,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6e,
	0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12,
	0x2c, 0x0a, 0x12, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x6f, 0x77, 0x6e, 0x65,
	0x72, 0x5f, 0x6a, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x62, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x4a, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x6f, 0x64,
	0x79, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x6f, 0x6f, 0x74, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x66, 0x6f, 0x6f, 0x74, 0x65, 0x72, 0x12, 0x2f, 0x0a, 0x0c, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0xb3, 0x03, 0x0a, 0x0f, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x12, 0x3a,
	0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x0c, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x31, 0x30, 0x30, 0x30, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x31, 0x30,
	0x30, 0x30, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x2e, 0x0a, 0x13, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x11, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66,
	0x69, 0x72, 0x73, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x33, 0x0a, 0x16, 0x73,
	0x61, 0x6c, 0x65, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x5f, 0x31, 0x30, 0x30, 0x30, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x13, 0x73, 0x61, 0x6c,
	0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x31, 0x30, 0x30, 0x30,
	0x1a, 0xdc, 0x0b, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0b, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4b, 0x65, 0x79, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x31, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1d, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x31, 0x0a, 0x14, 0x65, 0x70, 0x68, 0x65, 0x6d, 0x65,
	0x72, 0x61, 0x6c, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x13, 0x65, 0x70, 0x68, 0x65, 0x6d, 0x65, 0x72, 0x61, 0x6c, 0x45,
	0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x5c, 0x0a, 0x19, 0x68, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x53, 0x79,
	0x6e, 0x63, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x17,
	0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x53, 0x79, 0x6e, 0x63, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x55, 0x0a, 0x18, 0x61, 0x70, 0x70, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x73, 0x68,
	0x61, 0x72, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x41, 0x70, 0x70, 0x53, 0x74, 0x61, 0x74, 0x65, 0x53, 0x79, 0x6e, 0x63,
	0x4b, 0x65, 0x79, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x14, 0x61, 0x70, 0x70, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x53, 0x79, 0x6e, 0x63, 0x4b, 0x65, 0x79, 0x53, 0x68, 0x61, 0x72, 0x65, 0x12, 0x5b,
	0x0a, 0x1a, 0x61, 0x70, 0x70, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x79, 0x6e, 0x63,
	0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x41, 0x70, 0x70,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x53, 0x79, 0x6e, 0x63, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x52, 0x16, 0x61, 0x70, 0x70, 0x53, 0x74, 0x61, 0x74, 0x65, 0x53, 0x79, 0x6e,
	0x63, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x8b, 0x01, 0x0a, 0x2a,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79,
	0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2f, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x69,
	0x61, 0x6c, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x79, 0x6e,
	0x63, 0x52, 0x26, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69,
	0x74, 0x79, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x79, 0x6e, 0x63, 0x12, 0x7f, 0x0a, 0x26, 0x61, 0x70, 0x70,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x66, 0x61, 0x74, 0x61, 0x6c, 0x5f, 0x65, 0x78, 0x63,
	0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x41, 0x70, 0x70, 0x53, 0x74, 0x61, 0x74, 0x65, 0x46, 0x61, 0x74, 0x61,
	0x6c, 0x45, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x22, 0x61, 0x70, 0x70, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x46, 0x61, 0x74, 0x61, 0x6c, 0x45, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3e, 0x0a, 0x11, 0x64, 0x69,
	0x73, 0x61, 0x70, 0x70, 0x65, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x44, 0x69, 0x73, 0x61, 0x70, 0x70, 0x65, 0x61,
	0x72, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x10, 0x64, 0x69, 0x73, 0x61, 0x70, 0x70,
	0x65, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x2f, 0x0a, 0x0e, 0x65, 0x64,
	0x69, 0x74, 0x65, 0x64, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x08, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x0d, 0x65, 0x64,
	0x69, 0x74, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x5f, 0x6d, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x4d, 0x73, 0x12, 0x76,
	0x0a, 0x23, 0x70, 0x65, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x1f, 0x70, 0x65, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x8f, 0x01, 0x0a, 0x2c, 0x70, 0x65, 0x65, 0x72, 0x5f,
	0x64, 0x61, 0x74, 0x61, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52,
	0x27, 0x70, 0x65, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x84, 0x03, 0x0a, 0x04, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x0a, 0x0a, 0x06, 0x52, 0x45, 0x56, 0x4f, 0x4b, 0x45, 0x10, 0x00, 0x12, 0x15, 0x0a,
	0x11, 0x45, 0x50, 0x48, 0x45, 0x4d, 0x45, 0x52, 0x41, 0x4c, 0x5f, 0x53, 0x45, 0x54, 0x54, 0x49,
	0x4e, 0x47, 0x10, 0x03, 0x12, 0x1b, 0x0a, 0x17, 0x45, 0x50, 0x48, 0x45, 0x4d, 0x45, 0x52, 0x41,
	0x4c, 0x5f, 0x53, 0x59, 0x4e, 0x43, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x10,
	0x04, 0x12, 0x1d, 0x0a, 0x19, 0x48, 0x49, 0x53, 0x54, 0x4f, 0x52, 0x59, 0x5f, 0x53, 0x59, 0x4e,
	0x43, 0x5f, 0x4e, 0x4f, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x05,
	0x12, 0x1c, 0x0a, 0x18, 0x41, 0x50, 0x50, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x53, 0x59,
	0x4e, 0x43, 0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x53, 0x48, 0x41, 0x52, 0x45, 0x10, 0x06, 0x12, 0x1e,
	0x0a, 0x1a, 0x41, 0x50, 0x50, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x53, 0x59, 0x4e, 0x43,
	0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0x07, 0x12, 0x2e,
	0x0a, 0x2a, 0x49, 0x4e, 0x49, 0x54, 0x49, 0x41, 0x4c, 0x5f, 0x53, 0x45, 0x43, 0x55, 0x52, 0x49,
	0x54, 0x59, 0x5f, 0x4e, 0x4f, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f,
	0x53, 0x45, 0x54, 0x54, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x59, 0x4e, 0x43, 0x10, 0x09, 0x12, 0x2a,
	0x0a, 0x26, 0x41, 0x50, 0x50, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x46, 0x41, 0x54, 0x41,
	0x4c, 0x5f, 0x45, 0x58, 0x43, 0x45, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4e, 0x4f, 0x54, 0x49,
	0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x0a, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x48,
	0x41, 0x52, 0x45, 0x5f, 0x50, 0x48, 0x4f, 0x4e, 0x45, 0x5f, 0x4e, 0x55, 0x4d, 0x42, 0x45, 0x52,
	0x10, 0x0b, 0x12, 0x10, 0x0a, 0x0c, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x45, 0x44,
	0x49, 0x54, 0x10, 0x0e, 0x12, 0x27, 0x0a, 0x23, 0x50, 0x45, 0x45, 0x52, 0x5f, 0x44, 0x41, 0x54,
	0x41, 0x5f, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x51, 0x55,
	0x45, 0x53, 0x54, 0x5f, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x10, 0x10, 0x12, 0x30, 0x0a,
	0x2c, 0x50, 0x45, 0x45, 0x52, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x4f, 0x50, 0x45, 0x52, 0x41,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x52, 0x45, 0x53,
	0x50, 0x4f, 0x4e, 0x53, 0x45, 0x5f, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x10, 0x11, 0x1a,
	0x97, 0x01, 0x0a, 0x0f, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0b, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4b, 0x65, 0x79, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x69,
	0x6e, 0x67, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x69, 0x6e, 0x67, 0x4b, 0x65, 0x79, 0x12, 0x2e, 0x0a, 0x13, 0x73, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x5f, 0x6d, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x4d, 0x73, 0x1a, 0xbb, 0x02, 0x0a, 0x15, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x32, 0x0a, 0x15, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x73, 0x6f, 0x34, 0x32, 0x31, 0x37, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x13, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x43, 0x6f, 0x64, 0x65,
	0x49, 0x73, 0x6f, 0x34, 0x32, 0x31, 0x37, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x5f, 0x31, 0x30, 0x30, 0x30, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x31, 0x30, 0x30, 0x30, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x2b, 0x0a, 0x0c, 0x6e,
	0x6f, 0x74, 0x65, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x08, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x0b, 0x6e, 0x6f, 0x74,
	0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x65, 0x78, 0x70, 0x69,
	0x72, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x12, 0x1e, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x52, 0x06, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x32, 0x0a, 0x0a, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e,
	0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x42, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x52, 0x0a, 0x62, 0x61, 0x63,
	0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x1a, 0x4c, 0x0a, 0x19, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x2f, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x8f, 0x01, 0x0a, 0x1c, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x4b, 0x65, 0x79, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49,
	0x64, 0x12, 0x54, 0x0a, 0x27, 0x61, 0x78, 0x6f, 0x6c, 0x6f, 0x74, 0x6c, 0x5f, 0x73, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x23, 0x61, 0x78, 0x6f, 0x6c, 0x6f, 0x74, 0x6c, 0x53, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x4b, 0x65, 0x79, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0xb2, 0x01, 0x0a, 0x12, 0x53, 0x65, 0x6e, 0x64,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2b,
	0x0a, 0x0c, 0x6e, 0x6f, 0x74, 0x65, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x0b,
	0x6e, 0x6f, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3b, 0x0a, 0x13, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x6b,
	0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x4b, 0x65, 0x79, 0x52, 0x11, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x32, 0x0a, 0x0a, 0x62, 0x61, 0x63, 0x6b,
	0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64,
	0x52, 0x0a, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x1a, 0xde, 0x04, 0x0a,
	0x0e, 0x53, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72,
	0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x73, 0x68, 0x61, 0x32, 0x35, 0x36,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x68, 0x61, 0x32,
	0x35, 0x36, 0x12, 0x26, 0x0a, 0x0f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x65, 0x6e, 0x63, 0x5f, 0x73,
	0x68, 0x61, 0x32, 0x35, 0x36, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x66, 0x69, 0x6c,
	0x65, 0x45, 0x6e, 0x63, 0x53, 0x68, 0x61, 0x32, 0x35, 0x36, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65,
	0x64, 0x69, 0x61, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x6d,
	0x65, 0x64, 0x69, 0x61, 0x4b, 0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x69, 0x6d, 0x65, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x69, 0x6d, 0x65, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x77,
	0x69, 0x64, 0x74, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74,
	0x68, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x5f, 0x70, 0x61, 0x74, 0x68,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x50, 0x61,
	0x74, 0x68, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74,
	0x68, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x4c, 0x65, 0x6e,
	0x67, 0x74, 0x68, 0x12, 0x2e, 0x0a, 0x13, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x6b, 0x65, 0x79,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x11, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x4b, 0x65, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x12, 0x2c, 0x0a, 0x12, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x66, 0x72, 0x61,
	0x6d, 0x65, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x10, 0x66, 0x69, 0x72, 0x73, 0x74, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x4c, 0x65, 0x6e, 0x67, 0x74,
	0x68, 0x12, 0x2e, 0x0a, 0x13, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x66, 0x72, 0x61, 0x6d, 0x65,
	0x5f, 0x73, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x11,
	0x66, 0x69, 0x72, 0x73, 0x74, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x53, 0x69, 0x64, 0x65, 0x63, 0x61,
	0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x64,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x41, 0x6e, 0x69, 0x6d, 0x61, 0x74,
	0x65, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x6e, 0x67, 0x5f, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e,
	0x61, 0x69, 0x6c, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x70, 0x6e, 0x67, 0x54, 0x68,
	0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x12, 0x2f, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x78, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x26, 0x0a, 0x0f, 0x73, 0x74, 0x69, 0x63,
	0x6b, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x73, 0x18, 0x12, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0d, 0x73, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x53, 0x65, 0x6e, 0x74, 0x54, 0x73,
	0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x13, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x1a, 0xc9, 0x01,
	0x0a, 0x1a, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x49, 0x64, 0x12, 0x32, 0x0a,
	0x15, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61,
	0x79, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x73, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x65, 0x78,
	0x74, 0x12, 0x2f, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x73, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x65, 0x64, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x1a, 0xca, 0x0c, 0x0a, 0x0f, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2f, 0x0a,
	0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x5d,
	0x0a, 0x11, 0x68, 0x79, 0x64, 0x72, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x48, 0x79, 0x64, 0x72, 0x61, 0x74, 0x65, 0x64, 0x46, 0x6f, 0x75, 0x72,
	0x52, 0x6f, 0x77, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x10, 0x68, 0x79, 0x64,
	0x72, 0x61, 0x74, 0x65, 0x64, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x56,
	0x0a, 0x11, 0x66, 0x6f, 0x75, 0x72, 0x5f, 0x72, 0x6f, 0x77, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x46, 0x6f, 0x75, 0x72, 0x52, 0x6f, 0x77, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x0f, 0x66, 0x6f, 0x75, 0x72, 0x52, 0x6f, 0x77, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x6f, 0x0a, 0x1a, 0x68, 0x79, 0x64, 0x72, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x66, 0x6f, 0x75, 0x72, 0x5f, 0x72, 0x6f, 0x77, 0x5f, 0x74, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2e, 0x48, 0x79, 0x64, 0x72, 0x61, 0x74, 0x65, 0x64, 0x46, 0x6f, 0x75,
	0x72, 0x52, 0x6f, 0x77, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x17,
	0x68, 0x79, 0x64, 0x72, 0x61, 0x74, 0x65, 0x64, 0x46, 0x6f, 0x75, 0x72, 0x52, 0x6f, 0x77, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x5f, 0x0a, 0x1c, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x74,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x1a, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x1a, 0xa5, 0x04, 0x0a, 0x0f, 0x46, 0x6f, 0x75,
	0x72, 0x52, 0x6f, 0x77, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x3a, 0x0a, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x48, 0x69, 0x67, 0x68, 0x6c, 0x79, 0x53, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x38, 0x0a, 0x06, 0x66, 0x6f, 0x6f, 0x74,
	0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2e, 0x48, 0x69, 0x67, 0x68, 0x6c, 0x79, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75,
	0x72, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x06, 0x66, 0x6f, 0x6f, 0x74,
	0x65, 0x72, 0x12, 0x29, 0x0a, 0x07, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x73, 0x18, 0x08, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x42, 0x75,
	0x74, 0x74, 0x6f, 0x6e, 0x52, 0x07, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x73, 0x12, 0x45, 0x0a,
	0x10, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x2e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x48, 0x00, 0x52, 0x0f, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x5e, 0x0a, 0x19, 0x68, 0x69, 0x67, 0x68, 0x6c, 0x79, 0x5f, 0x73,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x64, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x2e, 0x48, 0x69, 0x67, 0x68, 0x6c, 0x79, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72,
	0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x17, 0x68, 0x69, 0x67,
	0x68, 0x6c, 0x79, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x64, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x3c, 0x0a, 0x0d, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x48, 0x00, 0x52, 0x0c, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x3c, 0x0a, 0x0d, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x48, 0x00, 0x52, 0x0c, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x45, 0x0a, 0x10, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x0f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x1a, 0xa9, 0x04, 0x0a, 0x17, 0x48, 0x79, 0x64, 0x72, 0x61, 0x74, 0x65, 0x64, 0x46, 0x6f, 0x75,
	0x72, 0x52, 0x6f, 0x77, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x32, 0x0a, 0x15,
	0x68, 0x79, 0x64, 0x72, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x68, 0x79, 0x64,
	0x72, 0x61, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x78, 0x74,
	0x12, 0x30, 0x0a, 0x14, 0x68, 0x79, 0x64, 0x72, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x66, 0x6f, 0x6f,
	0x74, 0x65, 0x72, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12,
	0x68, 0x79, 0x64, 0x72, 0x61, 0x74, 0x65, 0x64, 0x46, 0x6f, 0x6f, 0x74, 0x65, 0x72, 0x54, 0x65,
	0x78, 0x74, 0x12, 0x42, 0x0a, 0x10, 0x68, 0x79, 0x64, 0x72, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62,
	0x75, 0x74, 0x74, 0x6f, 0x6e, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x48,
	0x79, 0x64, 0x72, 0x61, 0x74, 0x65, 0x64, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x42,
	0x75, 0x74, 0x74, 0x6f, 0x6e, 0x52, 0x0f, 0x68, 0x79, 0x64, 0x72, 0x61, 0x74, 0x65, 0x64, 0x42,
	0x75, 0x74, 0x74, 0x6f, 0x6e, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x45, 0x0a, 0x10, 0x64, 0x6f, 0x63, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x44, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x0f, 0x64,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x30,
	0x0a, 0x13, 0x68, 0x79, 0x64, 0x72, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x11, 0x68,
	0x79, 0x64, 0x72, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x54, 0x65, 0x78, 0x74,
	0x12, 0x3c, 0x0a, 0x0d, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00,
	0x52, 0x0c, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3c,
	0x0a, 0x0d, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x0c,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x45, 0x0a, 0x10,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x48, 0x00, 0x52, 0x0f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x42, 0x08, 0x0a, 0x06,
	0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x1a, 0xb7, 0x07, 0x0a, 0x0c, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x69, 0x6d,
	0x65, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x69, 0x6d,
	0x65, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x73, 0x68,
	0x61, 0x32, 0x35, 0x36, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x66, 0x69, 0x6c, 0x65,
	0x53, 0x68, 0x61, 0x32, 0x35, 0x36, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6c,
	0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x66, 0x69, 0x6c,
	0x65, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x63, 0x6f, 0x6e,
	0x64, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64,
	0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x4b, 0x65, 0x79, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x61, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x61, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x67, 0x69, 0x66, 0x5f,
	0x70, 0x6c, 0x61, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b,
	0x67, 0x69, 0x66, 0x50, 0x6c, 0x61, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x68,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x68, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x26, 0x0a, 0x0f, 0x66, 0x69, 0x6c,
	0x65, 0x5f, 0x65, 0x6e, 0x63, 0x5f, 0x73, 0x68, 0x61, 0x32, 0x35, 0x36, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x0d, 0x66, 0x69, 0x6c, 0x65, 0x45, 0x6e, 0x63, 0x53, 0x68, 0x61, 0x32, 0x35,
	0x36, 0x12, 0x4f, 0x0a, 0x17, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x5f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0c, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x16, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x5f, 0x70, 0x61, 0x74,
	0x68, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x50,
	0x61, 0x74, 0x68, 0x12, 0x2e, 0x0a, 0x13, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x6b, 0x65, 0x79,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x11, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x4b, 0x65, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x12, 0x25, 0x0a, 0x0e, 0x6a, 0x70, 0x65, 0x67, 0x5f, 0x74, 0x68, 0x75, 0x6d,
	0x62, 0x6e, 0x61, 0x69, 0x6c, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x6a, 0x70, 0x65,
	0x67, 0x54, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x12, 0x2f, 0x0a, 0x0c, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2b, 0x0a, 0x11, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72,
	0x18, 0x12, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x10, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e,
	0x67, 0x53, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x12, 0x4a, 0x0a, 0x0f, 0x67, 0x69, 0x66, 0x5f,
	0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x13, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x21, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x56, 0x69, 0x64, 0x65,
	0x6f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x67, 0x69, 0x66, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x6f, 0x6e, 0x63,
	0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x76, 0x69, 0x65, 0x77, 0x4f, 0x6e, 0x63,
	0x65, 0x12, 0x32, 0x0a, 0x15, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x5f, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x13, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x44, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x50, 0x61, 0x74, 0x68, 0x12, 0x29, 0x0a, 0x10, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61,
	0x69, 0x6c, 0x5f, 0x73, 0x68, 0x61, 0x32, 0x35, 0x36, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x0f, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x53, 0x68, 0x61, 0x32, 0x35, 0x36,
	0x12, 0x30, 0x0a, 0x14, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x5f, 0x65, 0x6e,
	0x63, 0x5f, 0x73, 0x68, 0x61, 0x32, 0x35, 0x36, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x12,
	0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x45, 0x6e, 0x63, 0x53, 0x68, 0x61, 0x32,
	0x35, 0x36, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x5f, 0x75, 0x72, 0x6c,
	0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x55, 0x72,
	0x6c, 0x22, 0x2d, 0x0a, 0x0b, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x47, 0x49,
	0x50, 0x48, 0x59, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x54, 0x45, 0x4e, 0x4f, 0x52, 0x10, 0x02,
	0x22, 0x70, 0x0a, 0x1c, 0x50, 0x65, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x12, 0x0a, 0x0e, 0x55, 0x50, 0x4c, 0x4f, 0x41, 0x44, 0x5f, 0x53, 0x54, 0x49, 0x43, 0x4b,
	0x45, 0x52, 0x10, 0x00, 0x12, 0x21, 0x0a, 0x1d, 0x53, 0x45, 0x4e, 0x44, 0x5f, 0x52, 0x45, 0x43,
	0x45, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x49, 0x43, 0x4b, 0x45, 0x52, 0x5f, 0x42, 0x4f, 0x4f, 0x54,
	0x53, 0x54, 0x52, 0x41, 0x50, 0x10, 0x01, 0x12, 0x19, 0x0a, 0x15, 0x47, 0x45, 0x4e, 0x45, 0x52,
	0x41, 0x54, 0x45, 0x5f, 0x4c, 0x49, 0x4e, 0x4b, 0x5f, 0x50, 0x52, 0x45, 0x56, 0x49, 0x45, 0x57,
	0x10, 0x02, 0x22, 0xc3, 0x01, 0x0a, 0x12, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x45, 0x0a, 0x14, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x12, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x3f, 0x0a, 0x1c, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f,
	0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x19, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x22, 0x76, 0x0a, 0x0a, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65,
	0x5f, 0x6a, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x6d, 0x6f,
	0x74, 0x65, 0x4a, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x66, 0x72, 0x6f, 0x6d, 0x4d, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20,
	0x0a, 0x0b, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74,
	0x22, 0x5a, 0x0a, 0x05, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x63, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x22, 0xcb, 0x01, 0x0a,
	0x10, 0x4e, 0x6f, 0x69, 0x73, 0x65, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x1a, 0x7f, 0x0a, 0x07, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x12, 0x16, 0x0a, 0x06,
	0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x73,
	0x73, 0x75, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0xca, 0x04, 0x0a, 0x11, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x4c, 0x65, 0x6e, 0x67, 0x74,
	0x68, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x6d, 0x69, 0x6d, 0x65, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6d, 0x69, 0x6d, 0x65, 0x74, 0x79, 0x70, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x70,
	0x6c, 0x61, 0x63, 0x65, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x61, 0x72, 0x67, 0x62, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x07, 0x52, 0x0f, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x68, 0x6f, 0x6c, 0x64,
	0x65, 0x72, 0x41, 0x72, 0x67, 0x62, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x61,
	0x72, 0x67, 0x62, 0x18, 0x07, 0x20, 0x01, 0x28, 0x07, 0x52, 0x08, 0x74, 0x65, 0x78, 0x74, 0x41,
	0x72, 0x67, 0x62, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x75, 0x62, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x61,
	0x72, 0x67, 0x62, 0x18, 0x08, 0x20, 0x01, 0x28, 0x07, 0x52, 0x0b, 0x73, 0x75, 0x62, 0x74, 0x65,
	0x78, 0x74, 0x41, 0x72, 0x67, 0x62, 0x12, 0x3b, 0x0a, 0x0a, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x50, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x42, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x4d,
	0x65, 0x64, 0x69, 0x61, 0x44, 0x61, 0x74, 0x61, 0x52, 0x09, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x2b, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x17, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x61, 0x63, 0x6b, 0x67,
	0x72, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x1a, 0xc2, 0x01, 0x0a, 0x09, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1b,
	0x0a, 0x09, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x08, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x4b, 0x65, 0x79, 0x12, 0x2e, 0x0a, 0x13, 0x6d,
	0x65, 0x64, 0x69, 0x61, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x4b,
	0x65, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1f, 0x0a, 0x0b, 0x66,
	0x69, 0x6c, 0x65, 0x5f, 0x73, 0x68, 0x61, 0x32, 0x35, 0x36, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x68, 0x61, 0x32, 0x35, 0x36, 0x12, 0x26, 0x0a, 0x0f,
	0x66, 0x69, 0x6c, 0x65, 0x5f, 0x65, 0x6e, 0x63, 0x5f, 0x73, 0x68, 0x61, 0x32, 0x35, 0x36, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x66, 0x69, 0x6c, 0x65, 0x45, 0x6e, 0x63, 0x53, 0x68,
	0x61, 0x32, 0x35, 0x36, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x5f, 0x70,
	0x61, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x50, 0x61, 0x74, 0x68, 0x22, 0x20, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a,
	0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x45,
	0x46, 0x41, 0x55, 0x4c, 0x54, 0x10, 0x01, 0x22, 0x69, 0x0a, 0x05, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x12, 0x21, 0x0a, 0x0c, 0x78, 0x5f, 0x64, 0x65, 0x70, 0x72, 0x65, 0x63, 0x61, 0x74, 0x65, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x78, 0x44, 0x65, 0x70, 0x72, 0x65, 0x63, 0x61,
	0x74, 0x65, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x79, 0x5f, 0x64, 0x65, 0x70, 0x72, 0x65, 0x63, 0x61,
	0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x79, 0x44, 0x65, 0x70, 0x72,
	0x65, 0x63, 0x61, 0x74, 0x65, 0x64, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x01, 0x79, 0x22, 0x86, 0x05, 0x0a, 0x0e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x42,
	0x75, 0x74, 0x74, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x50, 0x0a, 0x12, 0x71,
	0x75, 0x69, 0x63, 0x6b, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x5f, 0x62, 0x75, 0x74, 0x74, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x2e, 0x51, 0x75, 0x69, 0x63, 0x6b, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x10, 0x71, 0x75, 0x69,
	0x63, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x12, 0x3a, 0x0a,
	0x0a, 0x75, 0x72, 0x6c, 0x5f, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x42, 0x75, 0x74, 0x74,
	0x6f, 0x6e, 0x2e, 0x55, 0x52, 0x4c, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x09,
	0x75, 0x72, 0x6c, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x12, 0x3d, 0x0a, 0x0b, 0x63, 0x61, 0x6c,
	0x6c, 0x5f, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x2e,
	0x43, 0x61, 0x6c, 0x6c, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0a, 0x63, 0x61,
	0x6c, 0x6c, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x1a, 0x96, 0x01, 0x0a, 0x0a, 0x43, 0x61, 0x6c,
	0x6c, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x12, 0x43, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c,
	0x61, 0x79, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x48, 0x69, 0x67, 0x68, 0x6c, 0x79, 0x53, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52,
	0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x65, 0x78, 0x74, 0x12, 0x43, 0x0a, 0x0c,
	0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x48, 0x69, 0x67,
	0x68, 0x6c, 0x79, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x64, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x1a, 0x67, 0x0a, 0x10, 0x51, 0x75, 0x69, 0x63, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x42,
	0x75, 0x74, 0x74, 0x6f, 0x6e, 0x12, 0x43, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79,
	0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x48, 0x69, 0x67, 0x68, 0x6c, 0x79, 0x53, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x75, 0x72, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x0b, 0x64,
	0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x65, 0x78, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x1a, 0x84, 0x01, 0x0a, 0x09, 0x55,
	0x52, 0x4c, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x12, 0x43, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70,
	0x6c, 0x61, 0x79, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x48, 0x69, 0x67, 0x68, 0x6c, 0x79, 0x53,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x65, 0x78, 0x74, 0x12, 0x32, 0x0a,
	0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2e, 0x48, 0x69, 0x67, 0x68, 0x6c, 0x79, 0x53, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x75, 0x72, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x03, 0x75, 0x72,
	0x6c, 0x42, 0x08, 0x0a, 0x06, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x22, 0xbe, 0x03, 0x0a, 0x17,
	0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x43, 0x65, 0x72, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12,
	0x29, 0x0a, 0x10, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0f, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x1a, 0xbf, 0x02, 0x0a, 0x07, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x12, 0x16,
	0x0a, 0x06, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73,
	0x12, 0x23, 0x0a, 0x0d, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65,
	0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x64, 0x75, 0x73, 0x74, 0x72,
	0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6e, 0x64, 0x75, 0x73, 0x74, 0x72,
	0x79, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x37, 0x0a, 0x0f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x6c,
	0x69, 0x7a, 0x65, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x0e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x69,
	0x7a, 0x65, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x67, 0x67, 0x72,
	0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0c, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x69, 0x73, 0x73, 0x75, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x09, 0x69, 0x73, 0x73, 0x75, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x2a, 0x52, 0x0a, 0x0e,
	0x4b, 0x65, 0x65, 0x70, 0x49, 0x6e, 0x43, 0x68, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a,
	0x0a, 0x16, 0x4b, 0x65, 0x65, 0x70, 0x49, 0x6e, 0x43, 0x68, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x4b, 0x45,
	0x45, 0x50, 0x5f, 0x46, 0x4f, 0x52, 0x5f, 0x41, 0x4c, 0x4c, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e,
	0x55, 0x4e, 0x4b, 0x45, 0x45, 0x50, 0x5f, 0x46, 0x4f, 0x52, 0x5f, 0x41, 0x4c, 0x4c, 0x10, 0x02,
	0x42, 0x18, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x61, 0x70, 0x70,
	0x50, 0x01, 0x5a, 0x06, 0x2e, 0x3b, 0x6d, 0x61, 0x69, 0x6e,
}

var (
	file_wa_proto_rawDescOnce sync.Once
	file_wa_proto_rawDescData = file_wa_proto_rawDesc
)

func file_wa_proto_rawDescGZIP() []byte {
	file_wa_proto_rawDescOnce.Do(func() {
		file_wa_proto_rawDescData = protoimpl.X.CompressGZIP(file_wa_proto_rawDescData)
	})
	return file_wa_proto_rawDescData
}

var file_wa_proto_enumTypes = make([]protoimpl.EnumInfo, 33)
var file_wa_proto_msgTypes = make([]protoimpl.MessageInfo, 124)
var file_wa_proto_goTypes = []interface{}{
	(KeepInChatType)(0),                                  // 0: KeepInChatType
	(ClientPayload_ConnectReason)(0),                     // 1: ClientPayload.ConnectReason
	(ClientPayload_ConnectType)(0),                       // 2: ClientPayload.ConnectType
	(ClientPayload_IOSAppExtension)(0),                   // 3: ClientPayload.IOSAppExtension
	(ClientPayload_Product)(0),                           // 4: ClientPayload.Product
	(ClientPayload_DNSSource_DNSResolutionMethod)(0),     // 5: ClientPayload.DNSSource.DNSResolutionMethod
	(ClientPayload_UserAgent_Platform)(0),                // 6: ClientPayload.UserAgent.Platform
	(ClientPayload_UserAgent_ReleaseChannel)(0),          // 7: ClientPayload.UserAgent.ReleaseChannel
	(ClientPayload_WebInfo_WebSubPlatform)(0),            // 8: ClientPayload.WebInfo.WebSubPlatform
	(ContextInfo_AdReplyInfo_MediaType)(0),               // 9: ContextInfo.AdReplyInfo.MediaType
	(ContextInfo_ExternalAdReplyInfo_MediaType)(0),       // 10: ContextInfo.ExternalAdReplyInfo.MediaType
	(DisappearingMode_Initiator)(0),                      // 11: DisappearingMode.Initiator
	(Message_PeerDataOperationRequestType)(0),            // 12: Message.PeerDataOperationRequestType
	(Message_ButtonsMessage_HeaderType)(0),               // 13: Message.ButtonsMessage.HeaderType
	(Message_ButtonsMessage_Button_Type)(0),              // 14: Message.ButtonsMessage.Button.Type
	(Message_ButtonsResponseMessage_Type)(0),             // 15: Message.ButtonsResponseMessage.Type
	(Message_ExtendedTextMessage_FontType)(0),            // 16: Message.ExtendedTextMessage.FontType
	(Message_ExtendedTextMessage_InviteLinkGroupType)(0), // 17: Message.ExtendedTextMessage.InviteLinkGroupType
	(Message_ExtendedTextMessage_PreviewType)(0),         // 18: Message.ExtendedTextMessage.PreviewType
	(Message_GroupInviteMessage_GroupType)(0),            // 19: Message.GroupInviteMessage.GroupType
	(Message_HighlyStructuredMessage_HSMLocalizableParameter_HSMDateTime_HSMDateTimeComponent_CalendarType)(0),     // 20: Message.HighlyStructuredMessage.HSMLocalizableParameter.HSMDateTime.HSMDateTimeComponent.CalendarType
	(Message_HighlyStructuredMessage_HSMLocalizableParameter_HSMDateTime_HSMDateTimeComponent_DayOfWeekType)(0),    // 21: Message.HighlyStructuredMessage.HSMLocalizableParameter.HSMDateTime.HSMDateTimeComponent.DayOfWeekType
	(Message_HistorySyncNotification_HistorySyncType)(0),                                                           // 22: Message.HistorySyncNotification.HistorySyncType
	(Message_InteractiveMessage_ShopMessage_Surface)(0),                                                            // 23: Message.InteractiveMessage.ShopMessage.Surface
	(Message_ListMessage_ListType)(0),                                                                              // 24: Message.ListMessage.ListType
	(Message_ListResponseMessage_ListType)(0),                                                                      // 25: Message.ListResponseMessage.ListType
	(Message_OrderMessage_OrderStatus)(0),                                                                          // 26: Message.OrderMessage.OrderStatus
	(Message_OrderMessage_OrderSurface)(0),                                                                         // 27: Message.OrderMessage.OrderSurface
	(Message_PaymentInviteMessage_ServiceType)(0),                                                                  // 28: Message.PaymentInviteMessage.ServiceType
	(Message_PeerDataOperationRequestResponseMessage_PeerDataOperationResult_MediaRetryNotification_ResultType)(0), // 29: Message.PeerDataOperationRequestResponseMessage.PeerDataOperationResult.MediaRetryNotification.ResultType
	(Message_ProtocolMessage_Type)(0),                                                                              // 30: Message.ProtocolMessage.Type
	(Message_VideoMessage_Attribution)(0),                                                                          // 31: Message.VideoMessage.Attribution
	(PaymentBackground_Type)(0),                                                                                    // 32: PaymentBackground.Type
	(*ActionLink)(nil),                                                                                             // 33: ActionLink
	(*ClientPayload)(nil),                                                                                          // 34: ClientPayload
	(*ContextInfo)(nil),                                                                                            // 35: ContextInfo
	(*DeviceListMetadata)(nil),                                                                                     // 36: DeviceListMetadata
	(*DisappearingMode)(nil),                                                                                       // 37: DisappearingMode
	(*HandshakeMessage)(nil),                                                                                       // 38: HandshakeMessage
	(*HydratedTemplateButton)(nil),                                                                                 // 39: HydratedTemplateButton
	(*InteractiveAnnotation)(nil),                                                                                  // 40: InteractiveAnnotation
	(*LocalizedName)(nil),                                                                                          // 41: LocalizedName
	(*Location)(nil),                                                                                               // 42: Location
	(*Message)(nil),                                                                                                // 43: Message
	(*MessageContextInfo)(nil),                                                                                     // 44: MessageContextInfo
	(*MessageKey)(nil),                                                                                             // 45: MessageKey
	(*Money)(nil),                                                                                                  // 46: Money
	(*NoiseCertificate)(nil),                                                                                       // 47: NoiseCertificate
	(*PaymentBackground)(nil),                                                                                      // 48: PaymentBackground
	(*Point)(nil),                                                                                                  // 49: Point
	(*TemplateButton)(nil),                                                                                         // 50: TemplateButton
	(*VerifiedNameCertificate)(nil),                                                                                // 51: VerifiedNameCertificate
	(*ClientPayload_CompanionRegData)(nil),                                                                         // 52: ClientPayload.CompanionRegData
	(*ClientPayload_DNSSource)(nil),                                                                                // 53: ClientPayload.DNSSource
	(*ClientPayload_UserAgent)(nil),                                                                                // 54: ClientPayload.UserAgent
	(*ClientPayload_WebInfo)(nil),                                                                                  // 55: ClientPayload.WebInfo
	(*ClientPayload_UserAgent_AppVersion)(nil),                                                                     // 56: ClientPayload.UserAgent.AppVersion
	(*ClientPayload_WebInfo_WebdPayload)(nil),                                                                      // 57: ClientPayload.WebInfo.WebdPayload
	(*ContextInfo_AdReplyInfo)(nil),                                                                                // 58: ContextInfo.AdReplyInfo
	(*ContextInfo_ExternalAdReplyInfo)(nil),                                                                        // 59: ContextInfo.ExternalAdReplyInfo
	(*HandshakeMessage_ClientFinish)(nil),                                                                          // 60: HandshakeMessage.ClientFinish
	(*HandshakeMessage_ClientHello)(nil),                                                                           // 61: HandshakeMessage.ClientHello
	(*HandshakeMessage_ServerHello)(nil),                                                                           // 62: HandshakeMessage.ServerHello
	(*HydratedTemplateButton_HydratedCallButton)(nil),                                                              // 63: HydratedTemplateButton.HydratedCallButton
	(*HydratedTemplateButton_HydratedQuickReplyButton)(nil),                                                        // 64: HydratedTemplateButton.HydratedQuickReplyButton
	(*HydratedTemplateButton_HydratedURLButton)(nil),                                                               // 65: HydratedTemplateButton.HydratedURLButton
	(*Message_AppStateFatalExceptionNotification)(nil),                                                             // 66: Message.AppStateFatalExceptionNotification
	(*Message_AppStateSyncKey)(nil),                                                                                // 67: Message.AppStateSyncKey
	(*Message_AppStateSyncKeyData)(nil),                                                                            // 68: Message.AppStateSyncKeyData
	(*Message_AppStateSyncKeyFingerprint)(nil),                                                                     // 69: Message.AppStateSyncKeyFingerprint
	(*Message_AppStateSyncKeyId)(nil),                                                                              // 70: Message.AppStateSyncKeyId
	(*Message_AppStateSyncKeyRequest)(nil),                                                                         // 71: Message.AppStateSyncKeyRequest
	(*Message_AppStateSyncKeyShare)(nil),                                                                           // 72: Message.AppStateSyncKeyShare
	(*Message_AudioMessage)(nil),                                                                                   // 73: Message.AudioMessage
	(*Message_ButtonsMessage)(nil),                                                                                 // 74: Message.ButtonsMessage
	(*Message_ButtonsResponseMessage)(nil),                                                                         // 75: Message.ButtonsResponseMessage
	(*Message_Call)(nil),                                                                                           // 76: Message.Call
	(*Message_CancelPaymentRequestMessage)(nil),                                                                    // 77: Message.CancelPaymentRequestMessage
	(*Message_Chat)(nil),                                                                                           // 78: Message.Chat
	(*Message_ContactMessage)(nil),                                                                                 // 79: Message.ContactMessage
	(*Message_ContactsArrayMessage)(nil),                                                                           // 80: Message.ContactsArrayMessage
	(*Message_DeclinePaymentRequestMessage)(nil),                                                                   // 81: Message.DeclinePaymentRequestMessage
	(*Message_DeviceSentMessage)(nil),                                                                              // 82: Message.DeviceSentMessage
	(*Message_DocumentMessage)(nil),                                                                                // 83: Message.DocumentMessage
	(*Message_EncReactionMessage)(nil),                                                                             // 84: Message.EncReactionMessage
	(*Message_ExtendedTextMessage)(nil),                                                                            // 85: Message.ExtendedTextMessage
	(*Message_FutureProofMessage)(nil),                                                                             // 86: Message.FutureProofMessage
	(*Message_GroupInviteMessage)(nil),                                                                             // 87: Message.GroupInviteMessage
	(*Message_HighlyStructuredMessage)(nil),                                                                        // 88: Message.HighlyStructuredMessage
	(*Message_HistorySyncNotification)(nil),                                                                        // 89: Message.HistorySyncNotification
	(*Message_ImageMessage)(nil),                                                                                   // 90: Message.ImageMessage
	(*Message_InitialSecurityNotificationSettingSync)(nil),                                                         // 91: Message.InitialSecurityNotificationSettingSync
	(*Message_InteractiveMessage)(nil),                                                                             // 92: Message.InteractiveMessage
	(*Message_InteractiveResponseMessage)(nil),                                                                     // 93: Message.InteractiveResponseMessage
	(*Message_KeepInChatMessage)(nil),                                                                              // 94: Message.KeepInChatMessage
	(*Message_ListMessage)(nil),                                                                                    // 95: Message.ListMessage
	(*Message_ListResponseMessage)(nil),                                                                            // 96: Message.ListResponseMessage
	(*Message_LiveLocationMessage)(nil),                                                                            // 97: Message.LiveLocationMessage
	(*Message_LocationMessage)(nil),                                                                                // 98: Message.LocationMessage
	(*Message_OrderMessage)(nil),                                                                                   // 99: Message.OrderMessage
	(*Message_PaymentInviteMessage)(nil),                                                                           // 100: Message.PaymentInviteMessage
	(*Message_PeerDataOperationRequestMessage)(nil),                                                                // 101: Message.PeerDataOperationRequestMessage
	(*Message_PeerDataOperationRequestResponseMessage)(nil),                                                        // 102: Message.PeerDataOperationRequestResponseMessage
	(*Message_PollCreationMessage)(nil),                                                                            // 103: Message.PollCreationMessage
	(*Message_PollEncValue)(nil),                                                                                   // 104: Message.PollEncValue
	(*Message_PollUpdateMessage)(nil),                                                                              // 105: Message.PollUpdateMessage
	(*Message_PollUpdateMessageMetadata)(nil),                                                                      // 106: Message.PollUpdateMessageMetadata
	(*Message_ProductMessage)(nil),                                                                                 // 107: Message.ProductMessage
	(*Message_ProtocolMessage)(nil),                                                                                // 108: Message.ProtocolMessage
	(*Message_ReactionMessage)(nil),                                                                                // 109: Message.ReactionMessage
	(*Message_RequestPaymentMessage)(nil),                                                                          // 110: Message.RequestPaymentMessage
	(*Message_RequestPhoneNumberMessage)(nil),                                                                      // 111: Message.RequestPhoneNumberMessage
	(*Message_SenderKeyDistributionMessage)(nil),                                                                   // 112: Message.SenderKeyDistributionMessage
	(*Message_SendPaymentMessage)(nil),                                                                             // 113: Message.SendPaymentMessage
	(*Message_StickerMessage)(nil),                                                                                 // 114: Message.StickerMessage
	(*Message_TemplateButtonReplyMessage)(nil),                                                                     // 115: Message.TemplateButtonReplyMessage
	(*Message_TemplateMessage)(nil),                                                                                // 116: Message.TemplateMessage
	(*Message_VideoMessage)(nil),                                                                                   // 117: Message.VideoMessage
	(*Message_ButtonsMessage_Button)(nil),                                                                          // 118: Message.ButtonsMessage.Button
	(*Message_ButtonsMessage_Button_ButtonText)(nil),                                                               // 119: Message.ButtonsMessage.Button.ButtonText
	(*Message_ButtonsMessage_Button_NativeFlowInfo)(nil),                                                           // 120: Message.ButtonsMessage.Button.NativeFlowInfo
	(*Message_HighlyStructuredMessage_HSMLocalizableParameter)(nil),                                                // 121: Message.HighlyStructuredMessage.HSMLocalizableParameter
	(*Message_HighlyStructuredMessage_HSMLocalizableParameter_HSMCurrency)(nil),                                    // 122: Message.HighlyStructuredMessage.HSMLocalizableParameter.HSMCurrency
	(*Message_HighlyStructuredMessage_HSMLocalizableParameter_HSMDateTime)(nil),                                    // 123: Message.HighlyStructuredMessage.HSMLocalizableParameter.HSMDateTime
	(*Message_HighlyStructuredMessage_HSMLocalizableParameter_HSMDateTime_HSMDateTimeComponent)(nil),       // 124: Message.HighlyStructuredMessage.HSMLocalizableParameter.HSMDateTime.HSMDateTimeComponent
	(*Message_HighlyStructuredMessage_HSMLocalizableParameter_HSMDateTime_HSMDateTimeUnixEpoch)(nil),       // 125: Message.HighlyStructuredMessage.HSMLocalizableParameter.HSMDateTime.HSMDateTimeUnixEpoch
	(*Message_InteractiveMessage_Body)(nil),                                                                // 126: Message.InteractiveMessage.Body
	(*Message_InteractiveMessage_CollectionMessage)(nil),                                                   // 127: Message.InteractiveMessage.CollectionMessage
	(*Message_InteractiveMessage_Footer)(nil),                                                              // 128: Message.InteractiveMessage.Footer
	(*Message_InteractiveMessage_Header)(nil),                                                              // 129: Message.InteractiveMessage.Header
	(*Message_InteractiveMessage_NativeFlowMessage)(nil),                                                   // 130: Message.InteractiveMessage.NativeFlowMessage
	(*Message_InteractiveMessage_ShopMessage)(nil),                                                         // 131: Message.InteractiveMessage.ShopMessage
	(*Message_InteractiveMessage_NativeFlowMessage_NativeFlowButton)(nil),                                  // 132: Message.InteractiveMessage.NativeFlowMessage.NativeFlowButton
	(*Message_InteractiveResponseMessage_Body)(nil),                                                        // 133: Message.InteractiveResponseMessage.Body
	(*Message_InteractiveResponseMessage_NativeFlowResponseMessage)(nil),                                   // 134: Message.InteractiveResponseMessage.NativeFlowResponseMessage
	(*Message_ListMessage_Product)(nil),                                                                    // 135: Message.ListMessage.Product
	(*Message_ListMessage_ProductListHeaderImage)(nil),                                                     // 136: Message.ListMessage.ProductListHeaderImage
	(*Message_ListMessage_ProductListInfo)(nil),                                                            // 137: Message.ListMessage.ProductListInfo
	(*Message_ListMessage_ProductSection)(nil),                                                             // 138: Message.ListMessage.ProductSection
	(*Message_ListMessage_Row)(nil),                                                                        // 139: Message.ListMessage.Row
	(*Message_ListMessage_Section)(nil),                                                                    // 140: Message.ListMessage.Section
	(*Message_ListResponseMessage_SingleSelectReply)(nil),                                                  // 141: Message.ListResponseMessage.SingleSelectReply
	(*Message_PeerDataOperationRequestMessage_RequestStickerReupload)(nil),                                 // 142: Message.PeerDataOperationRequestMessage.RequestStickerReupload
	(*Message_PeerDataOperationRequestMessage_RequestUrlPreview)(nil),                                      // 143: Message.PeerDataOperationRequestMessage.RequestUrlPreview
	(*Message_PeerDataOperationRequestResponseMessage_PeerDataOperationResult)(nil),                        // 144: Message.PeerDataOperationRequestResponseMessage.PeerDataOperationResult
	(*Message_PeerDataOperationRequestResponseMessage_PeerDataOperationResult_LinkPreviewResponse)(nil),    // 145: Message.PeerDataOperationRequestResponseMessage.PeerDataOperationResult.LinkPreviewResponse
	(*Message_PeerDataOperationRequestResponseMessage_PeerDataOperationResult_MediaRetryNotification)(nil), // 146: Message.PeerDataOperationRequestResponseMessage.PeerDataOperationResult.MediaRetryNotification
	(*Message_PollCreationMessage_Option)(nil),                                                             // 147: Message.PollCreationMessage.Option
	(*Message_ProductMessage_ProductSnapshot)(nil),                                                         // 148: Message.ProductMessage.ProductSnapshot
	(*Message_TemplateMessage_FourRowTemplate)(nil),                                                        // 149: Message.TemplateMessage.FourRowTemplate
	(*Message_TemplateMessage_HydratedFourRowTemplate)(nil),                                                // 150: Message.TemplateMessage.HydratedFourRowTemplate
	(*NoiseCertificate_Details)(nil),                                                                       // 151: NoiseCertificate.Details
	(*PaymentBackground_MediaData)(nil),                                                                    // 152: PaymentBackground.MediaData
	(*TemplateButton_CallButton)(nil),                                                                      // 153: TemplateButton.CallButton
	(*TemplateButton_QuickReplyButton)(nil),                                                                // 154: TemplateButton.QuickReplyButton
	(*TemplateButton_URLButton)(nil),                                                                       // 155: TemplateButton.URLButton
	(*VerifiedNameCertificate_Details)(nil),                                                                // 156: VerifiedNameCertificate.Details
}
var file_wa_proto_depIdxs = []int32{
	54,  // 0: ClientPayload.user_agent:type_name -> ClientPayload.UserAgent
	55,  // 1: ClientPayload.web_info:type_name -> ClientPayload.WebInfo
	2,   // 2: ClientPayload.connect_type:type_name -> ClientPayload.ConnectType
	1,   // 3: ClientPayload.connect_reason:type_name -> ClientPayload.ConnectReason
	53,  // 4: ClientPayload.dns_source:type_name -> ClientPayload.DNSSource
	52,  // 5: ClientPayload.reg_data:type_name -> ClientPayload.CompanionRegData
	4,   // 6: ClientPayload.product:type_name -> ClientPayload.Product
	3,   // 7: ClientPayload.ios_app_extension:type_name -> ClientPayload.IOSAppExtension
	43,  // 8: ContextInfo.quoted_message:type_name -> Message
	58,  // 9: ContextInfo.quoted_ad:type_name -> ContextInfo.AdReplyInfo
	45,  // 10: ContextInfo.placeholder_key:type_name -> MessageKey
	59,  // 11: ContextInfo.external_ad_reply:type_name -> ContextInfo.ExternalAdReplyInfo
	37,  // 12: ContextInfo.disappearing_mode:type_name -> DisappearingMode
	33,  // 13: ContextInfo.action_link:type_name -> ActionLink
	11,  // 14: DisappearingMode.initiator:type_name -> DisappearingMode.Initiator
	61,  // 15: HandshakeMessage.client_hello:type_name -> HandshakeMessage.ClientHello
	62,  // 16: HandshakeMessage.server_hello:type_name -> HandshakeMessage.ServerHello
	60,  // 17: HandshakeMessage.client_finish:type_name -> HandshakeMessage.ClientFinish
	64,  // 18: HydratedTemplateButton.quick_reply_button:type_name -> HydratedTemplateButton.HydratedQuickReplyButton
	65,  // 19: HydratedTemplateButton.url_button:type_name -> HydratedTemplateButton.HydratedURLButton
	63,  // 20: HydratedTemplateButton.call_button:type_name -> HydratedTemplateButton.HydratedCallButton
	49,  // 21: InteractiveAnnotation.polygonVertices:type_name -> Point
	42,  // 22: InteractiveAnnotation.location:type_name -> Location
	112, // 23: Message.sender_key_distribution_message:type_name -> Message.SenderKeyDistributionMessage
	90,  // 24: Message.image_message:type_name -> Message.ImageMessage
	79,  // 25: Message.contact_message:type_name -> Message.ContactMessage
	98,  // 26: Message.location_message:type_name -> Message.LocationMessage
	85,  // 27: Message.extended_text_message:type_name -> Message.ExtendedTextMessage
	83,  // 28: Message.document_message:type_name -> Message.DocumentMessage
	73,  // 29: Message.audio_message:type_name -> Message.AudioMessage
	117, // 30: Message.video_message:type_name -> Message.VideoMessage
	76,  // 31: Message.call:type_name -> Message.Call
	78,  // 32: Message.chat:type_name -> Message.Chat
	108, // 33: Message.protocol_message:type_name -> Message.ProtocolMessage
	80,  // 34: Message.contacts_array_message:type_name -> Message.ContactsArrayMessage
	88,  // 35: Message.highly_structured_message:type_name -> Message.HighlyStructuredMessage
	112, // 36: Message.fast_ratchet_key_sender_key_distribution_message:type_name -> Message.SenderKeyDistributionMessage
	113, // 37: Message.send_payment_message:type_name -> Message.SendPaymentMessage
	97,  // 38: Message.live_location_message:type_name -> Message.LiveLocationMessage
	110, // 39: Message.request_payment_message:type_name -> Message.RequestPaymentMessage
	81,  // 40: Message.decline_payment_request_message:type_name -> Message.DeclinePaymentRequestMessage
	77,  // 41: Message.cancel_payment_request_message:type_name -> Message.CancelPaymentRequestMessage
	116, // 42: Message.template_message:type_name -> Message.TemplateMessage
	114, // 43: Message.sticker_message:type_name -> Message.StickerMessage
	87,  // 44: Message.group_invite_message:type_name -> Message.GroupInviteMessage
	115, // 45: Message.template_button_reply_message:type_name -> Message.TemplateButtonReplyMessage
	107, // 46: Message.product_message:type_name -> Message.ProductMessage
	82,  // 47: Message.device_sent_message:type_name -> Message.DeviceSentMessage
	44,  // 48: Message.message_context_info:type_name -> MessageContextInfo
	95,  // 49: Message.list_message:type_name -> Message.ListMessage
	86,  // 50: Message.view_once_message:type_name -> Message.FutureProofMessage
	99,  // 51: Message.order_message:type_name -> Message.OrderMessage
	96,  // 52: Message.list_response_message:type_name -> Message.ListResponseMessage
	86,  // 53: Message.ephemeral_message:type_name -> Message.FutureProofMessage
	74,  // 54: Message.buttons_message:type_name -> Message.ButtonsMessage
	75,  // 55: Message.buttons_response_message:type_name -> Message.ButtonsResponseMessage
	100, // 56: Message.payment_invite_message:type_name -> Message.PaymentInviteMessage
	92,  // 57: Message.interactive_message:type_name -> Message.InteractiveMessage
	109, // 58: Message.reaction_message:type_name -> Message.ReactionMessage
	93,  // 59: Message.interactive_response_message:type_name -> Message.InteractiveResponseMessage
	103, // 60: Message.poll_creation_message:type_name -> Message.PollCreationMessage
	105, // 61: Message.poll_update_message:type_name -> Message.PollUpdateMessage
	94,  // 62: Message.keep_in_chat_message:type_name -> Message.KeepInChatMessage
	86,  // 63: Message.document_with_caption_message:type_name -> Message.FutureProofMessage
	111, // 64: Message.request_phone_number_message:type_name -> Message.RequestPhoneNumberMessage
	86,  // 65: Message.view_once_message_v2:type_name -> Message.FutureProofMessage
	84,  // 66: Message.enc_reaction_message:type_name -> Message.EncReactionMessage
	86,  // 67: Message.edited_message:type_name -> Message.FutureProofMessage
	103, // 68: Message.poll_creation_message_v2:type_name -> Message.PollCreationMessage
	36,  // 69: MessageContextInfo.device_list_metadata:type_name -> DeviceListMetadata
	152, // 70: PaymentBackground.media_data:type_name -> PaymentBackground.MediaData
	32,  // 71: PaymentBackground.type:type_name -> PaymentBackground.Type
	154, // 72: TemplateButton.quick_reply_button:type_name -> TemplateButton.QuickReplyButton
	155, // 73: TemplateButton.url_button:type_name -> TemplateButton.URLButton
	153, // 74: TemplateButton.call_button:type_name -> TemplateButton.CallButton
	5,   // 75: ClientPayload.DNSSource.dns_method:type_name -> ClientPayload.DNSSource.DNSResolutionMethod
	6,   // 76: ClientPayload.UserAgent.platform:type_name -> ClientPayload.UserAgent.Platform
	56,  // 77: ClientPayload.UserAgent.app_version:type_name -> ClientPayload.UserAgent.AppVersion
	7,   // 78: ClientPayload.UserAgent.release_channel:type_name -> ClientPayload.UserAgent.ReleaseChannel
	57,  // 79: ClientPayload.WebInfo.webd_payload:type_name -> ClientPayload.WebInfo.WebdPayload
	8,   // 80: ClientPayload.WebInfo.web_sub_platform:type_name -> ClientPayload.WebInfo.WebSubPlatform
	9,   // 81: ContextInfo.AdReplyInfo.media_type:type_name -> ContextInfo.AdReplyInfo.MediaType
	10,  // 82: ContextInfo.ExternalAdReplyInfo.media_type:type_name -> ContextInfo.ExternalAdReplyInfo.MediaType
	70,  // 83: Message.AppStateSyncKey.key_id:type_name -> Message.AppStateSyncKeyId
	68,  // 84: Message.AppStateSyncKey.key_data:type_name -> Message.AppStateSyncKeyData
	69,  // 85: Message.AppStateSyncKeyData.fingerprint:type_name -> Message.AppStateSyncKeyFingerprint
	70,  // 86: Message.AppStateSyncKeyRequest.key_ids:type_name -> Message.AppStateSyncKeyId
	67,  // 87: Message.AppStateSyncKeyShare.keys:type_name -> Message.AppStateSyncKey
	35,  // 88: Message.AudioMessage.context_info:type_name -> ContextInfo
	35,  // 89: Message.ButtonsMessage.context_info:type_name -> ContextInfo
	118, // 90: Message.ButtonsMessage.buttons:type_name -> Message.ButtonsMessage.Button
	13,  // 91: Message.ButtonsMessage.header_type:type_name -> Message.ButtonsMessage.HeaderType
	83,  // 92: Message.ButtonsMessage.document_message:type_name -> Message.DocumentMessage
	90,  // 93: Message.ButtonsMessage.image_message:type_name -> Message.ImageMessage
	117, // 94: Message.ButtonsMessage.video_message:type_name -> Message.VideoMessage
	98,  // 95: Message.ButtonsMessage.location_message:type_name -> Message.LocationMessage
	35,  // 96: Message.ButtonsResponseMessage.context_info:type_name -> ContextInfo
	15,  // 97: Message.ButtonsResponseMessage.type:type_name -> Message.ButtonsResponseMessage.Type
	45,  // 98: Message.CancelPaymentRequestMessage.key:type_name -> MessageKey
	35,  // 99: Message.ContactMessage.context_info:type_name -> ContextInfo
	79,  // 100: Message.ContactsArrayMessage.contacts:type_name -> Message.ContactMessage
	35,  // 101: Message.ContactsArrayMessage.context_info:type_name -> ContextInfo
	45,  // 102: Message.DeclinePaymentRequestMessage.key:type_name -> MessageKey
	43,  // 103: Message.DeviceSentMessage.message:type_name -> Message
	35,  // 104: Message.DocumentMessage.context_info:type_name -> ContextInfo
	45,  // 105: Message.EncReactionMessage.target_message_key:type_name -> MessageKey
	16,  // 106: Message.ExtendedTextMessage.font:type_name -> Message.ExtendedTextMessage.FontType
	18,  // 107: Message.ExtendedTextMessage.preview_type:type_name -> Message.ExtendedTextMessage.PreviewType
	35,  // 108: Message.ExtendedTextMessage.context_info:type_name -> ContextInfo
	17,  // 109: Message.ExtendedTextMessage.invite_link_group_type:type_name -> Message.ExtendedTextMessage.InviteLinkGroupType
	17,  // 110: Message.ExtendedTextMessage.invite_link_group_type_v2:type_name -> Message.ExtendedTextMessage.InviteLinkGroupType
	43,  // 111: Message.FutureProofMessage.message:type_name -> Message
	35,  // 112: Message.GroupInviteMessage.context_info:type_name -> ContextInfo
	19,  // 113: Message.GroupInviteMessage.group_type:type_name -> Message.GroupInviteMessage.GroupType
	121, // 114: Message.HighlyStructuredMessage.localizable_params:type_name -> Message.HighlyStructuredMessage.HSMLocalizableParameter
	116, // 115: Message.HighlyStructuredMessage.hydrated_hsm:type_name -> Message.TemplateMessage
	22,  // 116: Message.HistorySyncNotification.sync_type:type_name -> Message.HistorySyncNotification.HistorySyncType
	40,  // 117: Message.ImageMessage.interactive_annotations:type_name -> InteractiveAnnotation
	35,  // 118: Message.ImageMessage.context_info:type_name -> ContextInfo
	129, // 119: Message.InteractiveMessage.header:type_name -> Message.InteractiveMessage.Header
	126, // 120: Message.InteractiveMessage.body:type_name -> Message.InteractiveMessage.Body
	128, // 121: Message.InteractiveMessage.footer:type_name -> Message.InteractiveMessage.Footer
	35,  // 122: Message.InteractiveMessage.context_info:type_name -> ContextInfo
	131, // 123: Message.InteractiveMessage.shop_storefront_message:type_name -> Message.InteractiveMessage.ShopMessage
	127, // 124: Message.InteractiveMessage.collection_message:type_name -> Message.InteractiveMessage.CollectionMessage
	130, // 125: Message.InteractiveMessage.native_flow_message:type_name -> Message.InteractiveMessage.NativeFlowMessage
	133, // 126: Message.InteractiveResponseMessage.body:type_name -> Message.InteractiveResponseMessage.Body
	35,  // 127: Message.InteractiveResponseMessage.context_info:type_name -> ContextInfo
	134, // 128: Message.InteractiveResponseMessage.native_flow_response_message:type_name -> Message.InteractiveResponseMessage.NativeFlowResponseMessage
	45,  // 129: Message.KeepInChatMessage.key:type_name -> MessageKey
	0,   // 130: Message.KeepInChatMessage.keep_type:type_name -> KeepInChatType
	24,  // 131: Message.ListMessage.list_type:type_name -> Message.ListMessage.ListType
	140, // 132: Message.ListMessage.sections:type_name -> Message.ListMessage.Section
	137, // 133: Message.ListMessage.product_list_info:type_name -> Message.ListMessage.ProductListInfo
	35,  // 134: Message.ListMessage.context_info:type_name -> ContextInfo
	25,  // 135: Message.ListResponseMessage.list_type:type_name -> Message.ListResponseMessage.ListType
	141, // 136: Message.ListResponseMessage.single_select_reply:type_name -> Message.ListResponseMessage.SingleSelectReply
	35,  // 137: Message.ListResponseMessage.context_info:type_name -> ContextInfo
	35,  // 138: Message.LiveLocationMessage.context_info:type_name -> ContextInfo
	35,  // 139: Message.LocationMessage.context_info:type_name -> ContextInfo
	26,  // 140: Message.OrderMessage.status:type_name -> Message.OrderMessage.OrderStatus
	27,  // 141: Message.OrderMessage.surface:type_name -> Message.OrderMessage.OrderSurface
	35,  // 142: Message.OrderMessage.context_info:type_name -> ContextInfo
	28,  // 143: Message.PaymentInviteMessage.service_type:type_name -> Message.PaymentInviteMessage.ServiceType
	12,  // 144: Message.PeerDataOperationRequestMessage.peer_data_operation_request_type:type_name -> Message.PeerDataOperationRequestType
	142, // 145: Message.PeerDataOperationRequestMessage.request_sticker_reupload:type_name -> Message.PeerDataOperationRequestMessage.RequestStickerReupload
	143, // 146: Message.PeerDataOperationRequestMessage.request_url_preview:type_name -> Message.PeerDataOperationRequestMessage.RequestUrlPreview
	12,  // 147: Message.PeerDataOperationRequestResponseMessage.peer_data_operation_request_type:type_name -> Message.PeerDataOperationRequestType
	144, // 148: Message.PeerDataOperationRequestResponseMessage.peer_data_operation_result:type_name -> Message.PeerDataOperationRequestResponseMessage.PeerDataOperationResult
	147, // 149: Message.PollCreationMessage.options:type_name -> Message.PollCreationMessage.Option
	35,  // 150: Message.PollCreationMessage.context_info:type_name -> ContextInfo
	45,  // 151: Message.PollUpdateMessage.poll_creation_message_key:type_name -> MessageKey
	104, // 152: Message.PollUpdateMessage.vote:type_name -> Message.PollEncValue
	106, // 153: Message.PollUpdateMessage.metadata:type_name -> Message.PollUpdateMessageMetadata
	148, // 154: Message.ProductMessage.product:type_name -> Message.ProductMessage.ProductSnapshot
	35,  // 155: Message.ProductMessage.context_info:type_name -> ContextInfo
	45,  // 156: Message.ProtocolMessage.key:type_name -> MessageKey
	30,  // 157: Message.ProtocolMessage.type:type_name -> Message.ProtocolMessage.Type
	89,  // 158: Message.ProtocolMessage.history_sync_notification:type_name -> Message.HistorySyncNotification
	72,  // 159: Message.ProtocolMessage.app_state_sync_key_share:type_name -> Message.AppStateSyncKeyShare
	71,  // 160: Message.ProtocolMessage.app_state_sync_key_request:type_name -> Message.AppStateSyncKeyRequest
	91,  // 161: Message.ProtocolMessage.initial_security_notification_setting_sync:type_name -> Message.InitialSecurityNotificationSettingSync
	66,  // 162: Message.ProtocolMessage.app_state_fatal_exception_notification:type_name -> Message.AppStateFatalExceptionNotification
	37,  // 163: Message.ProtocolMessage.disappearing_mode:type_name -> DisappearingMode
	43,  // 164: Message.ProtocolMessage.edited_message:type_name -> Message
	101, // 165: Message.ProtocolMessage.peer_data_operation_request_message:type_name -> Message.PeerDataOperationRequestMessage
	102, // 166: Message.ProtocolMessage.peer_data_operation_request_response_message:type_name -> Message.PeerDataOperationRequestResponseMessage
	45,  // 167: Message.ReactionMessage.key:type_name -> MessageKey
	43,  // 168: Message.RequestPaymentMessage.note_message:type_name -> Message
	46,  // 169: Message.RequestPaymentMessage.amount:type_name -> Money
	48,  // 170: Message.RequestPaymentMessage.background:type_name -> PaymentBackground
	35,  // 171: Message.RequestPhoneNumberMessage.context_info:type_name -> ContextInfo
	43,  // 172: Message.SendPaymentMessage.note_message:type_name -> Message
	45,  // 173: Message.SendPaymentMessage.request_message_key:type_name -> MessageKey
	48,  // 174: Message.SendPaymentMessage.background:type_name -> PaymentBackground
	35,  // 175: Message.StickerMessage.context_info:type_name -> ContextInfo
	35,  // 176: Message.TemplateButtonReplyMessage.context_info:type_name -> ContextInfo
	35,  // 177: Message.TemplateMessage.context_info:type_name -> ContextInfo
	150, // 178: Message.TemplateMessage.hydrated_template:type_name -> Message.TemplateMessage.HydratedFourRowTemplate
	149, // 179: Message.TemplateMessage.four_row_template:type_name -> Message.TemplateMessage.FourRowTemplate
	150, // 180: Message.TemplateMessage.hydrated_four_row_template:type_name -> Message.TemplateMessage.HydratedFourRowTemplate
	92,  // 181: Message.TemplateMessage.interactive_message_template:type_name -> Message.InteractiveMessage
	40,  // 182: Message.VideoMessage.interactive_annotations:type_name -> InteractiveAnnotation
	35,  // 183: Message.VideoMessage.context_info:type_name -> ContextInfo
	31,  // 184: Message.VideoMessage.gif_attribution:type_name -> Message.VideoMessage.Attribution
	119, // 185: Message.ButtonsMessage.Button.button_text:type_name -> Message.ButtonsMessage.Button.ButtonText
	14,  // 186: Message.ButtonsMessage.Button.type:type_name -> Message.ButtonsMessage.Button.Type
	120, // 187: Message.ButtonsMessage.Button.native_flow_info:type_name -> Message.ButtonsMessage.Button.NativeFlowInfo
	122, // 188: Message.HighlyStructuredMessage.HSMLocalizableParameter.currency:type_name -> Message.HighlyStructuredMessage.HSMLocalizableParameter.HSMCurrency
	123, // 189: Message.HighlyStructuredMessage.HSMLocalizableParameter.date_time:type_name -> Message.HighlyStructuredMessage.HSMLocalizableParameter.HSMDateTime
	124, // 190: Message.HighlyStructuredMessage.HSMLocalizableParameter.HSMDateTime.component:type_name -> Message.HighlyStructuredMessage.HSMLocalizableParameter.HSMDateTime.HSMDateTimeComponent
	125, // 191: Message.HighlyStructuredMessage.HSMLocalizableParameter.HSMDateTime.unix_epoch:type_name -> Message.HighlyStructuredMessage.HSMLocalizableParameter.HSMDateTime.HSMDateTimeUnixEpoch
	21,  // 192: Message.HighlyStructuredMessage.HSMLocalizableParameter.HSMDateTime.HSMDateTimeComponent.day_of_week:type_name -> Message.HighlyStructuredMessage.HSMLocalizableParameter.HSMDateTime.HSMDateTimeComponent.DayOfWeekType
	20,  // 193: Message.HighlyStructuredMessage.HSMLocalizableParameter.HSMDateTime.HSMDateTimeComponent.calendar:type_name -> Message.HighlyStructuredMessage.HSMLocalizableParameter.HSMDateTime.HSMDateTimeComponent.CalendarType
	83,  // 194: Message.InteractiveMessage.Header.document_message:type_name -> Message.DocumentMessage
	90,  // 195: Message.InteractiveMessage.Header.image_message:type_name -> Message.ImageMessage
	117, // 196: Message.InteractiveMessage.Header.video_message:type_name -> Message.VideoMessage
	132, // 197: Message.InteractiveMessage.NativeFlowMessage.buttons:type_name -> Message.InteractiveMessage.NativeFlowMessage.NativeFlowButton
	23,  // 198: Message.InteractiveMessage.ShopMessage.surface:type_name -> Message.InteractiveMessage.ShopMessage.Surface
	138, // 199: Message.ListMessage.ProductListInfo.product_sections:type_name -> Message.ListMessage.ProductSection
	136, // 200: Message.ListMessage.ProductListInfo.header_image:type_name -> Message.ListMessage.ProductListHeaderImage
	135, // 201: Message.ListMessage.ProductSection.products:type_name -> Message.ListMessage.Product
	139, // 202: Message.ListMessage.Section.rows:type_name -> Message.ListMessage.Row
	29,  // 203: Message.PeerDataOperationRequestResponseMessage.PeerDataOperationResult.media_upload_result:type_name -> Message.PeerDataOperationRequestResponseMessage.PeerDataOperationResult.MediaRetryNotification.ResultType
	114, // 204: Message.PeerDataOperationRequestResponseMessage.PeerDataOperationResult.sticker_message:type_name -> Message.StickerMessage
	145, // 205: Message.PeerDataOperationRequestResponseMessage.PeerDataOperationResult.link_preview_response:type_name -> Message.PeerDataOperationRequestResponseMessage.PeerDataOperationResult.LinkPreviewResponse
	90,  // 206: Message.ProductMessage.ProductSnapshot.product_image:type_name -> Message.ImageMessage
	88,  // 207: Message.TemplateMessage.FourRowTemplate.content:type_name -> Message.HighlyStructuredMessage
	88,  // 208: Message.TemplateMessage.FourRowTemplate.footer:type_name -> Message.HighlyStructuredMessage
	50,  // 209: Message.TemplateMessage.FourRowTemplate.buttons:type_name -> TemplateButton
	83,  // 210: Message.TemplateMessage.FourRowTemplate.document_message:type_name -> Message.DocumentMessage
	88,  // 211: Message.TemplateMessage.FourRowTemplate.highly_structured_message:type_name -> Message.HighlyStructuredMessage
	90,  // 212: Message.TemplateMessage.FourRowTemplate.image_message:type_name -> Message.ImageMessage
	117, // 213: Message.TemplateMessage.FourRowTemplate.video_message:type_name -> Message.VideoMessage
	98,  // 214: Message.TemplateMessage.FourRowTemplate.location_message:type_name -> Message.LocationMessage
	39,  // 215: Message.TemplateMessage.HydratedFourRowTemplate.hydrated_buttons:type_name -> HydratedTemplateButton
	83,  // 216: Message.TemplateMessage.HydratedFourRowTemplate.document_message:type_name -> Message.DocumentMessage
	90,  // 217: Message.TemplateMessage.HydratedFourRowTemplate.image_message:type_name -> Message.ImageMessage
	117, // 218: Message.TemplateMessage.HydratedFourRowTemplate.video_message:type_name -> Message.VideoMessage
	98,  // 219: Message.TemplateMessage.HydratedFourRowTemplate.location_message:type_name -> Message.LocationMessage
	88,  // 220: TemplateButton.CallButton.display_text:type_name -> Message.HighlyStructuredMessage
	88,  // 221: TemplateButton.CallButton.phone_number:type_name -> Message.HighlyStructuredMessage
	88,  // 222: TemplateButton.QuickReplyButton.display_text:type_name -> Message.HighlyStructuredMessage
	88,  // 223: TemplateButton.URLButton.display_text:type_name -> Message.HighlyStructuredMessage
	88,  // 224: TemplateButton.URLButton.url:type_name -> Message.HighlyStructuredMessage
	41,  // 225: VerifiedNameCertificate.Details.localized_names:type_name -> LocalizedName
	226, // [226:226] is the sub-list for method output_type
	226, // [226:226] is the sub-list for method input_type
	226, // [226:226] is the sub-list for extension type_name
	226, // [226:226] is the sub-list for extension extendee
	0,   // [0:226] is the sub-list for field type_name
}

func init() { file_wa_proto_init() }
func file_wa_proto_init() {
	if File_wa_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_wa_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionLink); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wa_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientPayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wa_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContextInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wa_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceListMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wa_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DisappearingMode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wa_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HandshakeMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wa_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HydratedTemplateButton); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wa_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InteractiveAnnotation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wa_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LocalizedName); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wa_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Location); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wa_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wa_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageContextInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wa_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wa_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Money); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wa_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NoiseCertificate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wa_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentBackground); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wa_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Point); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wa_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TemplateButton); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wa_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifiedNameCertificate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wa_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientPayload_CompanionRegData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wa_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientPayload_DNSSource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wa_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientPayload_UserAgent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wa_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientPayload_WebInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wa_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientPayload_UserAgent_AppVersion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wa_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientPayload_WebInfo_WebdPayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wa_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContextInfo_AdReplyInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wa_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContextInfo_ExternalAdReplyInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wa_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HandshakeMessage_ClientFinish); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wa_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HandshakeMessage_ClientHello); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wa_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HandshakeMessage_ServerHello); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wa_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HydratedTemplateButton_HydratedCallButton); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wa_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HydratedTemplateButton_HydratedQuickReplyButton); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wa_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HydratedTemplateButton_HydratedURLButton); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wa_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_AppStateFatalExceptionNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wa_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_AppStateSyncKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wa_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_AppStateSyncKeyData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wa_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_AppStateSyncKeyFingerprint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wa_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_AppStateSyncKeyId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wa_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_AppStateSyncKeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wa_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_AppStateSyncKeyShare); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wa_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_AudioMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wa_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_ButtonsMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wa_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_ButtonsResponseMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wa_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_Call); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wa_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_CancelPaymentRequestMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wa_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_Chat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wa_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_ContactMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wa_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_ContactsArrayMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wa_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_DeclinePaymentRequestMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wa_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_DeviceSentMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wa_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_DocumentMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wa_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_EncReactionMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wa_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_ExtendedTextMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wa_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_FutureProofMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wa_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_GroupInviteMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wa_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_HighlyStructuredMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wa_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_HistorySyncNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wa_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_ImageMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wa_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_InitialSecurityNotificationSettingSync); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wa_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_InteractiveMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wa_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_InteractiveResponseMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wa_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_KeepInChatMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wa_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_ListMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wa_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_ListResponseMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wa_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_LiveLocationMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wa_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_LocationMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wa_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_OrderMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wa_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_PaymentInviteMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wa_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_PeerDataOperationRequestMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wa_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_PeerDataOperationRequestResponseMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wa_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_PollCreationMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wa_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_PollEncValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wa_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_PollUpdateMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wa_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_PollUpdateMessageMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wa_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_ProductMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wa_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_ProtocolMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wa_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_ReactionMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wa_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_RequestPaymentMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wa_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_RequestPhoneNumberMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wa_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_SenderKeyDistributionMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wa_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_SendPaymentMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wa_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_StickerMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wa_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_TemplateButtonReplyMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wa_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_TemplateMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wa_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_VideoMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wa_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_ButtonsMessage_Button); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wa_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_ButtonsMessage_Button_ButtonText); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wa_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_ButtonsMessage_Button_NativeFlowInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wa_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_HighlyStructuredMessage_HSMLocalizableParameter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wa_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_HighlyStructuredMessage_HSMLocalizableParameter_HSMCurrency); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wa_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_HighlyStructuredMessage_HSMLocalizableParameter_HSMDateTime); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wa_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_HighlyStructuredMessage_HSMLocalizableParameter_HSMDateTime_HSMDateTimeComponent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wa_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_HighlyStructuredMessage_HSMLocalizableParameter_HSMDateTime_HSMDateTimeUnixEpoch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wa_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_InteractiveMessage_Body); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wa_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_InteractiveMessage_CollectionMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wa_proto_msgTypes[95].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_InteractiveMessage_Footer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wa_proto_msgTypes[96].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_InteractiveMessage_Header); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wa_proto_msgTypes[97].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_InteractiveMessage_NativeFlowMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wa_proto_msgTypes[98].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_InteractiveMessage_ShopMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wa_proto_msgTypes[99].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_InteractiveMessage_NativeFlowMessage_NativeFlowButton); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wa_proto_msgTypes[100].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_InteractiveResponseMessage_Body); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wa_proto_msgTypes[101].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_InteractiveResponseMessage_NativeFlowResponseMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wa_proto_msgTypes[102].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_ListMessage_Product); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wa_proto_msgTypes[103].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_ListMessage_ProductListHeaderImage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wa_proto_msgTypes[104].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_ListMessage_ProductListInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wa_proto_msgTypes[105].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_ListMessage_ProductSection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wa_proto_msgTypes[106].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_ListMessage_Row); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wa_proto_msgTypes[107].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_ListMessage_Section); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wa_proto_msgTypes[108].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_ListResponseMessage_SingleSelectReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wa_proto_msgTypes[109].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_PeerDataOperationRequestMessage_RequestStickerReupload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wa_proto_msgTypes[110].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_PeerDataOperationRequestMessage_RequestUrlPreview); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wa_proto_msgTypes[111].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_PeerDataOperationRequestResponseMessage_PeerDataOperationResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wa_proto_msgTypes[112].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_PeerDataOperationRequestResponseMessage_PeerDataOperationResult_LinkPreviewResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wa_proto_msgTypes[113].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_PeerDataOperationRequestResponseMessage_PeerDataOperationResult_MediaRetryNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wa_proto_msgTypes[114].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_PollCreationMessage_Option); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wa_proto_msgTypes[115].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_ProductMessage_ProductSnapshot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wa_proto_msgTypes[116].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_TemplateMessage_FourRowTemplate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wa_proto_msgTypes[117].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_TemplateMessage_HydratedFourRowTemplate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wa_proto_msgTypes[118].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NoiseCertificate_Details); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wa_proto_msgTypes[119].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentBackground_MediaData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wa_proto_msgTypes[120].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TemplateButton_CallButton); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wa_proto_msgTypes[121].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TemplateButton_QuickReplyButton); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wa_proto_msgTypes[122].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TemplateButton_URLButton); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wa_proto_msgTypes[123].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifiedNameCertificate_Details); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_wa_proto_msgTypes[6].OneofWrappers = []interface{}{
		(*HydratedTemplateButton_QuickReplyButton)(nil),
		(*HydratedTemplateButton_UrlButton)(nil),
		(*HydratedTemplateButton_CallButton)(nil),
	}
	file_wa_proto_msgTypes[7].OneofWrappers = []interface{}{
		(*InteractiveAnnotation_Location)(nil),
	}
	file_wa_proto_msgTypes[17].OneofWrappers = []interface{}{
		(*TemplateButton_QuickReplyButton_)(nil),
		(*TemplateButton_UrlButton)(nil),
		(*TemplateButton_CallButton_)(nil),
	}
	file_wa_proto_msgTypes[41].OneofWrappers = []interface{}{
		(*Message_ButtonsMessage_Text)(nil),
		(*Message_ButtonsMessage_DocumentMessage)(nil),
		(*Message_ButtonsMessage_ImageMessage)(nil),
		(*Message_ButtonsMessage_VideoMessage)(nil),
		(*Message_ButtonsMessage_LocationMessage)(nil),
	}
	file_wa_proto_msgTypes[42].OneofWrappers = []interface{}{
		(*Message_ButtonsResponseMessage_SelectedDisplayText)(nil),
	}
	file_wa_proto_msgTypes[59].OneofWrappers = []interface{}{
		(*Message_InteractiveMessage_ShopStorefrontMessage)(nil),
		(*Message_InteractiveMessage_CollectionMessage_)(nil),
		(*Message_InteractiveMessage_NativeFlowMessage_)(nil),
	}
	file_wa_proto_msgTypes[60].OneofWrappers = []interface{}{
		(*Message_InteractiveResponseMessage_NativeFlowResponseMessage_)(nil),
	}
	file_wa_proto_msgTypes[83].OneofWrappers = []interface{}{
		(*Message_TemplateMessage_FourRowTemplate_)(nil),
		(*Message_TemplateMessage_HydratedFourRowTemplate_)(nil),
		(*Message_TemplateMessage_InteractiveMessageTemplate)(nil),
	}
	file_wa_proto_msgTypes[88].OneofWrappers = []interface{}{
		(*Message_HighlyStructuredMessage_HSMLocalizableParameter_Currency)(nil),
		(*Message_HighlyStructuredMessage_HSMLocalizableParameter_DateTime)(nil),
	}
	file_wa_proto_msgTypes[90].OneofWrappers = []interface{}{
		(*Message_HighlyStructuredMessage_HSMLocalizableParameter_HSMDateTime_Component)(nil),
		(*Message_HighlyStructuredMessage_HSMLocalizableParameter_HSMDateTime_UnixEpoch)(nil),
	}
	file_wa_proto_msgTypes[96].OneofWrappers = []interface{}{
		(*Message_InteractiveMessage_Header_DocumentMessage)(nil),
		(*Message_InteractiveMessage_Header_ImageMessage)(nil),
		(*Message_InteractiveMessage_Header_JpegThumbnail)(nil),
		(*Message_InteractiveMessage_Header_VideoMessage)(nil),
	}
	file_wa_proto_msgTypes[116].OneofWrappers = []interface{}{
		(*Message_TemplateMessage_FourRowTemplate_DocumentMessage)(nil),
		(*Message_TemplateMessage_FourRowTemplate_HighlyStructuredMessage)(nil),
		(*Message_TemplateMessage_FourRowTemplate_ImageMessage)(nil),
		(*Message_TemplateMessage_FourRowTemplate_VideoMessage)(nil),
		(*Message_TemplateMessage_FourRowTemplate_LocationMessage)(nil),
	}
	file_wa_proto_msgTypes[117].OneofWrappers = []interface{}{
		(*Message_TemplateMessage_HydratedFourRowTemplate_DocumentMessage)(nil),
		(*Message_TemplateMessage_HydratedFourRowTemplate_HydratedTitleText)(nil),
		(*Message_TemplateMessage_HydratedFourRowTemplate_ImageMessage)(nil),
		(*Message_TemplateMessage_HydratedFourRowTemplate_VideoMessage)(nil),
		(*Message_TemplateMessage_HydratedFourRowTemplate_LocationMessage)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_wa_proto_rawDesc,
			NumEnums:      33,
			NumMessages:   124,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_wa_proto_goTypes,
		DependencyIndexes: file_wa_proto_depIdxs,
		EnumInfos:         file_wa_proto_enumTypes,
		MessageInfos:      file_wa_proto_msgTypes,
	}.Build()
	File_wa_proto = out.File
	file_wa_proto_rawDesc = nil
	file_wa_proto_goTypes = nil
	file_wa_proto_depIdxs = nil
}
